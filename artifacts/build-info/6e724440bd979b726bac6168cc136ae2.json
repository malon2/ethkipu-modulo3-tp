{
	"id": "6e724440bd979b726bac6168cc136ae2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n\r\n/// @title SimpleSwap - A simplified Uniswap-like DEX\r\n/// @notice Enables token swaps and liquidity management for token pairs\r\ncontract SimpleSwap {\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct Reserve {\r\n        uint256 reserveA;\r\n        uint256 reserveB;\r\n        uint256 totalLiquidity;\r\n        mapping(address => uint256) liquidity;\r\n    }\r\n\r\n    mapping(bytes32 => Reserve) private reserves;\r\n\r\n    event LiquidityAdded(address indexed provider, address tokenA, address tokenB, uint256 amountA, uint256 amountB, uint256 liquidity);\r\n    event LiquidityRemoved(address indexed provider, address tokenA, address tokenB, uint256 amountA, uint256 amountB, uint256 liquidity);\r\n    event Swap(address indexed sender, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\r\n\r\n    modifier ensure(uint deadline) {\r\n        require(block.timestamp <= deadline, \"Transaction expired\");\r\n        _;\r\n    }\r\n\r\n    /// @dev Returns a unique key for a token pair\r\n    function _getPairKey(address tokenA, address tokenB) private pure returns (bytes32) {\r\n        return tokenA < tokenB ? keccak256(abi.encodePacked(tokenA, tokenB)) : keccak256(abi.encodePacked(tokenB, tokenA));\r\n    }\r\n\r\n    /// @dev Sorts tokens to ensure consistent order\r\n    function _sortTokens(address tokenA, address tokenB) private pure returns (address, address) {\r\n        return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n    }\r\n\r\n    /// @notice Adds liquidity to a token pair pool\r\n    /// @param tokenA Address of the first token\r\n    /// @param tokenB Address of the second token\r\n    /// @param amountADesired Amount of tokenA to deposit\r\n    /// @param amountBDesired Amount of tokenB to deposit\r\n    /// @param amountAMin Minimum amount of tokenA to accept\r\n    /// @param amountBMin Minimum amount of tokenB to accept\r\n    /// @param to Recipient of the liquidity tokens\r\n    /// @param deadline Unix timestamp after which the tx is invalid\r\n    /// @return amountA Final amount of tokenA used\r\n    /// @return amountB Final amount of tokenB used\r\n    /// @return liquidity Amount of liquidity tokens minted\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external ensure(deadline) returns (uint amountA, uint amountB, uint liquidity) {\r\n        require(tokenA != tokenB, \"Identical tokens\");\r\n\r\n        bytes32 pairKey = _getPairKey(tokenA, tokenB);\r\n        Reserve storage r = reserves[pairKey];\r\n\r\n        (amountA, amountB) = _quoteAddLiquidity(\r\n            tokenA, tokenB,\r\n            amountADesired, amountBDesired,\r\n            amountAMin, amountBMin,\r\n            r.reserveA, r.reserveB,\r\n            r.totalLiquidity\r\n        );\r\n\r\n        _transferTokens(tokenA, tokenB, amountA, amountB);\r\n        liquidity = _calculateLiquidity(amountA, amountB, r.reserveA, r.reserveB, r.totalLiquidity);\r\n        require(liquidity > 0, \"Insufficient\");\r\n\r\n        r.reserveA += amountA;\r\n        r.reserveB += amountB;\r\n        r.totalLiquidity += liquidity;\r\n        r.liquidity[to] += liquidity;\r\n\r\n        emit LiquidityAdded(msg.sender, tokenA, tokenB, amountA, amountB, liquidity);\r\n    }\r\n\r\n    /// @dev Estimates optimal tokenA/tokenB amounts to maintain ratio\r\n    function _quoteAddLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        uint reserveA,\r\n        uint reserveB,\r\n        uint totalLiquidity\r\n    ) internal pure returns (uint amountA, uint amountB) {\r\n        if (totalLiquidity == 0) {\r\n            return (amountADesired, amountBDesired);\r\n        }\r\n\r\n        (address token0,) = _sortTokens(tokenA, tokenB);\r\n        (uint rA, uint rB) = tokenA == token0 ? (reserveA, reserveB) : (reserveB, reserveA);\r\n\r\n        uint bOptimal = (amountADesired * rB) / rA;\r\n        if (bOptimal <= amountBDesired) {\r\n            require(bOptimal >= amountBMin, \"Insufficient B\");\r\n            return (amountADesired, bOptimal);\r\n        } else {\r\n            uint aOptimal = (amountBDesired * rA) / rB;\r\n            require(aOptimal >= amountAMin, \"Insufficient A\");\r\n            return (aOptimal, amountBDesired);\r\n        }\r\n    }\r\n\r\n    /// @dev Transfers tokens from sender to contract\r\n    function _transferTokens(address tokenA, address tokenB, uint amountA, uint amountB) internal {\r\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\r\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\r\n    }\r\n\r\n    /// @dev Calculates amount of liquidity tokens to mint\r\n    function _calculateLiquidity(\r\n        uint amountA,\r\n        uint amountB,\r\n        uint reserveA,\r\n        uint reserveB,\r\n        uint totalLiquidity\r\n    ) internal pure returns (uint liquidity) {\r\n        if (totalLiquidity == 0) {\r\n            liquidity = Math.sqrt(amountA * amountB);\r\n        } else {\r\n            liquidity = Math.min(\r\n                (amountA * totalLiquidity) / reserveA,\r\n                (amountB * totalLiquidity) / reserveB\r\n            );\r\n        }\r\n    }\r\n\r\n    /// @notice Removes liquidity from a pool\r\n    /// @param tokenA Address of the first token\r\n    /// @param tokenB Address of the second token\r\n    /// @param liquidity Amount of liquidity tokens to burn\r\n    /// @param amountAMin Minimum amount of tokenA expected\r\n    /// @param amountBMin Minimum amount of tokenB expected\r\n    /// @param to Recipient of withdrawn tokens\r\n    /// @param deadline Expiration timestamp\r\n    /// @return amountA Amount of tokenA received\r\n    /// @return amountB Amount of tokenB received\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external ensure(deadline) returns (uint amountA, uint amountB) {\r\n        bytes32 pairKey = _getPairKey(tokenA, tokenB);\r\n        Reserve storage r = reserves[pairKey];\r\n\r\n        require(r.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\");\r\n\r\n        amountA = (liquidity * r.reserveA) / r.totalLiquidity;\r\n        amountB = (liquidity * r.reserveB) / r.totalLiquidity;\r\n\r\n        require(amountA >= amountAMin, \"Insufficient A\");\r\n        require(amountB >= amountBMin, \"Insufficient B\");\r\n\r\n        r.reserveA -= amountA;\r\n        r.reserveB -= amountB;\r\n        r.totalLiquidity -= liquidity;\r\n        r.liquidity[msg.sender] -= liquidity;\r\n\r\n        IERC20(tokenA).safeTransfer(to, amountA);\r\n        IERC20(tokenB).safeTransfer(to, amountB);\r\n\r\n        emit LiquidityRemoved(msg.sender, tokenA, tokenB, amountA, amountB, liquidity);\r\n    }\r\n\r\n    /// @notice Swaps exact amount of input tokens for output tokens\r\n    /// @param amountIn Amount of input tokens to swap\r\n    /// @param amountOutMin Minimum output expected\r\n    /// @param path Array with [tokenIn, tokenOut]\r\n    /// @param to Recipient of output tokens\r\n    /// @param deadline Expiration timestamp\r\n    /// @return amounts Array [amountIn, amountOut]\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external ensure(deadline) returns (uint[] memory amounts) {\r\n        require(path.length == 2, \"Only 2-token\");\r\n\r\n        address tokenIn = path[0];\r\n        address tokenOut = path[1];\r\n\r\n        bytes32 pairKey = _getPairKey(tokenIn, tokenOut);\r\n        Reserve storage r = reserves[pairKey];\r\n\r\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\r\n\r\n        (uint reserveIn, uint reserveOut) = tokenIn < tokenOut\r\n            ? (r.reserveA, r.reserveB)\r\n            : (r.reserveB, r.reserveA);\r\n\r\n        uint amountOut = getAmountOut(amountIn, reserveIn, reserveOut);\r\n        require(amountOut >= amountOutMin, \"Insufficient output\");\r\n\r\n        if (tokenIn < tokenOut) {\r\n            r.reserveA += amountIn;\r\n            r.reserveB -= amountOut;\r\n        } else {\r\n            r.reserveB += amountIn;\r\n            r.reserveA -= amountOut;\r\n        }\r\n\r\n        IERC20(tokenOut).safeTransfer(to, amountOut);\r\n\r\n        amounts = new uint[](2) ;\r\n        amounts[0] = amountIn;\r\n        amounts[1] = amountOut;\r\n\r\n        emit Swap(msg.sender, tokenIn, tokenOut, amounts[0], amounts[1]);\r\n    }\r\n\r\n    /// @notice Returns the price of tokenA in terms of tokenB\r\n    /// @param tokenA Base token\r\n    /// @param tokenB Quote token\r\n    /// @return price Price with 18 decimals\r\n    function getPrice(address tokenA, address tokenB) external view returns (uint price) {\r\n        bytes32 pairKey = _getPairKey(tokenA, tokenB);\r\n        Reserve storage r = reserves[pairKey];\r\n        (uint reserveA, uint reserveB) = tokenA < tokenB ? (r.reserveA, r.reserveB) : (r.reserveB, r.reserveA);\r\n        require(reserveA > 0 && reserveB > 0, \"No reserves\");\r\n        return (reserveB * 1e18) / reserveA;\r\n    }\r\n\r\n    /// @notice Calculates output amount given input and reserves\r\n    /// @param amountIn Input token amount\r\n    /// @param reserveIn Reserve of input token\r\n    /// @param reserveOut Reserve of output token\r\n    /// @return amountOut Resulting amount of output token\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {\r\n        require(amountIn > 0, \"Insufficient input\");\r\n        require(reserveIn > 0 && reserveOut > 0, \"Insufficient liquidity\");\r\n        uint amountInWithFee = amountIn * 997;\r\n        uint numerator = amountInWithFee * reserveOut;\r\n        uint denominator = reserveIn * 1000 + amountInWithFee;\r\n        return numerator / denominator;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB6 TLOAD PUSH17 0x971BD0CBCC68BB1545F7E4C2F66355DE88 0x22 CALLVALUE 0xC 0x4C ADD SELFBALANCE 0xCB DUP11 EQ ISZERO 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB6 TLOAD PUSH17 0x971BD0CBCC68BB1545F7E4C2F66355DE88 0x22 CALLVALUE 0xC 0x4C ADD SELFBALANCE 0xCB DUP11 EQ ISZERO 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SELFBALANCE 0x2E 0xCE SWAP11 0xA8 RJUMPI 0x2ECB 0xA8 CALLDATACOPY 0xD6 0xD MSTORE8 BLOBBASEFEE 0x2B 0xCF MUL DUP10 0xEB 0x4E MULMOD 0x1E 0x2E CREATE PUSH9 0x42816B8A5F8164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "281:31863:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SELFBALANCE 0x2E 0xCE SWAP11 0xA8 RJUMPI 0x2ECB 0xA8 CALLDATACOPY 0xD6 0xD MSTORE8 BLOBBASEFEE 0x2B 0xCF MUL DUP10 0xEB 0x4E MULMOD 0x1E 0x2E CREATE PUSH9 0x42816B8A5F8164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "281:31863:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"add512(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mul512(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"mulShr(uint256,uint256,uint8)": "infinite",
								"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
								"saturatingAdd(uint256,uint256)": "infinite",
								"saturatingMul(uint256,uint256)": "infinite",
								"saturatingSub(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
									".code": [
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCB CALLF 0x72C7 0x22 0xD8 DUP10 0xB8 MSTORE ISZERO BLOCKHASH PUSH26 0x36C8DF9EB75343EBAAA674F5562CC7C6A7DDA964736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "769:34173:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCB CALLF 0x72C7 0x22 0xD8 DUP10 0xB8 MSTORE ISZERO BLOCKHASH PUSH26 0x36C8DF9EB75343EBAAA674F5562CC7C6A7DDA964736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "769:34173:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountADesired": "Amount of tokenA to deposit",
									"amountAMin": "Minimum amount of tokenA to accept",
									"amountBDesired": "Amount of tokenB to deposit",
									"amountBMin": "Minimum amount of tokenB to accept",
									"deadline": "Unix timestamp after which the tx is invalid",
									"to": "Recipient of the liquidity tokens",
									"tokenA": "Address of the first token",
									"tokenB": "Address of the second token"
								},
								"returns": {
									"amountA": "Final amount of tokenA used",
									"amountB": "Final amount of tokenB used",
									"liquidity": "Amount of liquidity tokens minted"
								}
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"params": {
									"amountIn": "Input token amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Resulting amount of output token"
								}
							},
							"getPrice(address,address)": {
								"params": {
									"tokenA": "Base token",
									"tokenB": "Quote token"
								},
								"returns": {
									"price": "Price with 18 decimals"
								}
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountAMin": "Minimum amount of tokenA expected",
									"amountBMin": "Minimum amount of tokenB expected",
									"deadline": "Expiration timestamp",
									"liquidity": "Amount of liquidity tokens to burn",
									"to": "Recipient of withdrawn tokens",
									"tokenA": "Address of the first token",
									"tokenB": "Address of the second token"
								},
								"returns": {
									"amountA": "Amount of tokenA received",
									"amountB": "Amount of tokenB received"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"params": {
									"amountIn": "Amount of input tokens to swap",
									"amountOutMin": "Minimum output expected",
									"deadline": "Expiration timestamp",
									"path": "Array with [tokenIn, tokenOut]",
									"to": "Recipient of output tokens"
								},
								"returns": {
									"amounts": "Array [amountIn, amountOut]"
								}
							}
						},
						"title": "SimpleSwap - A simplified Uniswap-like DEX",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimpleSwap.sol\":371:10122  contract SimpleSwap {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SimpleSwap.sol\":371:10122  contract SimpleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"SimpleSwap.sol\":9664:10119  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":7481:8779  function swapExactTokensForTokens(... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":8966:9385  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":6036:7097  function removeLiquidity(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":2371:3545  function addLiquidity(... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":9664:10119  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_11:\n        /* \"SimpleSwap.sol\":9755:9769  uint amountOut */\n      0x00\n        /* \"SimpleSwap.sol\":9801:9802  0 */\n      0x00\n        /* \"SimpleSwap.sol\":9790:9798  amountIn */\n      dup5\n        /* \"SimpleSwap.sol\":9790:9802  amountIn > 0 */\n      gt\n        /* \"SimpleSwap.sol\":9782:9825  require(amountIn > 0, \"Insufficient input\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"SimpleSwap.sol\":9856:9857  0 */\n      0x00\n        /* \"SimpleSwap.sol\":9844:9853  reserveIn */\n      dup4\n        /* \"SimpleSwap.sol\":9844:9857  reserveIn > 0 */\n      gt\n        /* \"SimpleSwap.sol\":9844:9875  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"SimpleSwap.sol\":9874:9875  0 */\n      0x00\n        /* \"SimpleSwap.sol\":9861:9871  reserveOut */\n      dup3\n        /* \"SimpleSwap.sol\":9861:9875  reserveOut > 0 */\n      gt\n        /* \"SimpleSwap.sol\":9844:9875  reserveIn > 0 && reserveOut > 0 */\n    tag_41:\n        /* \"SimpleSwap.sol\":9836:9902  require(reserveIn > 0 && reserveOut > 0, \"Insufficient liquidity\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"SimpleSwap.sol\":9913:9933  uint amountInWithFee */\n      0x00\n        /* \"SimpleSwap.sol\":9947:9950  997 */\n      0x03e5\n        /* \"SimpleSwap.sol\":9936:9944  amountIn */\n      dup6\n        /* \"SimpleSwap.sol\":9936:9950  amountIn * 997 */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"SimpleSwap.sol\":9913:9950  uint amountInWithFee = amountIn * 997 */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":9961:9975  uint numerator */\n      0x00\n        /* \"SimpleSwap.sol\":9996:10006  reserveOut */\n      dup4\n        /* \"SimpleSwap.sol\":9978:9993  amountInWithFee */\n      dup3\n        /* \"SimpleSwap.sol\":9978:10006  amountInWithFee * reserveOut */\n      tag_47\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_47:\n        /* \"SimpleSwap.sol\":9961:10006  uint numerator = amountInWithFee * reserveOut */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":10017:10033  uint denominator */\n      0x00\n        /* \"SimpleSwap.sol\":10055:10070  amountInWithFee */\n      dup3\n        /* \"SimpleSwap.sol\":10048:10052  1000 */\n      0x03e8\n        /* \"SimpleSwap.sol\":10036:10045  reserveIn */\n      dup8\n        /* \"SimpleSwap.sol\":10036:10052  reserveIn * 1000 */\n      tag_48\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_48:\n        /* \"SimpleSwap.sol\":10036:10070  reserveIn * 1000 + amountInWithFee */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"SimpleSwap.sol\":10017:10070  uint denominator = reserveIn * 1000 + amountInWithFee */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":10100:10111  denominator */\n      dup1\n        /* \"SimpleSwap.sol\":10088:10097  numerator */\n      dup3\n        /* \"SimpleSwap.sol\":10088:10111  numerator / denominator */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"SimpleSwap.sol\":10081:10111  return numerator / denominator */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":9664:10119  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":7481:8779  function swapExactTokensForTokens(... */\n    tag_17:\n        /* \"SimpleSwap.sol\":7688:7709  uint[] memory amounts */\n      0x60\n        /* \"SimpleSwap.sol\":7669:7677  deadline */\n      dup2\n        /* \"SimpleSwap.sol\":1114:1122  deadline */\n      dup1\n        /* \"SimpleSwap.sol\":1095:1110  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":1095:1122  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":1087:1146  require(block.timestamp <= deadline, \"Transaction expired\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"SimpleSwap.sol\":7745:7746  2 */\n      0x02\n        /* \"SimpleSwap.sol\":7730:7734  path */\n      dup7\n      dup7\n        /* \"SimpleSwap.sol\":7730:7741  path.length */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":7730:7746  path.length == 2 */\n      eq\n        /* \"SimpleSwap.sol\":7722:7763  require(path.length == 2, \"Only 2-token\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"SimpleSwap.sol\":7776:7791  address tokenIn */\n      0x00\n        /* \"SimpleSwap.sol\":7794:7798  path */\n      dup7\n      dup7\n        /* \"SimpleSwap.sol\":7799:7800  0 */\n      0x00\n        /* \"SimpleSwap.sol\":7794:7801  path[0] */\n      dup2\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"SimpleSwap.sol\":7776:7801  address tokenIn = path[0] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":7812:7828  address tokenOut */\n      0x00\n        /* \"SimpleSwap.sol\":7831:7835  path */\n      dup8\n      dup8\n        /* \"SimpleSwap.sol\":7836:7837  1 */\n      0x01\n        /* \"SimpleSwap.sol\":7831:7838  path[1] */\n      dup2\n      dup2\n      lt\n      tag_66\n      jumpi\n      tag_67\n      tag_63\n      jump\t// in\n    tag_67:\n    tag_66:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_68:\n        /* \"SimpleSwap.sol\":7812:7838  address tokenOut = path[1] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":7851:7866  bytes32 pairKey */\n      0x00\n        /* \"SimpleSwap.sol\":7869:7899  _getPairKey(tokenIn, tokenOut) */\n      tag_69\n        /* \"SimpleSwap.sol\":7881:7888  tokenIn */\n      dup4\n        /* \"SimpleSwap.sol\":7890:7898  tokenOut */\n      dup4\n        /* \"SimpleSwap.sol\":7869:7880  _getPairKey */\n      tag_70\n        /* \"SimpleSwap.sol\":7869:7899  _getPairKey(tokenIn, tokenOut) */\n      jump\t// in\n    tag_69:\n        /* \"SimpleSwap.sol\":7851:7899  bytes32 pairKey = _getPairKey(tokenIn, tokenOut) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":7910:7927  Reserve storage r */\n      0x00\n        /* \"SimpleSwap.sol\":7930:7938  reserves */\n      0x00\n        /* \"SimpleSwap.sol\":7930:7947  reserves[pairKey] */\n      0x00\n        /* \"SimpleSwap.sol\":7939:7946  pairKey */\n      dup4\n        /* \"SimpleSwap.sol\":7930:7947  reserves[pairKey] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleSwap.sol\":7910:7947  Reserve storage r = reserves[pairKey] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":7960:8029  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      tag_71\n        /* \"SimpleSwap.sol\":7993:8003  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":8013:8017  this */\n      address\n        /* \"SimpleSwap.sol\":8020:8028  amountIn */\n      dup15\n        /* \"SimpleSwap.sol\":7967:7974  tokenIn */\n      dup8\n        /* \"SimpleSwap.sol\":7960:7992  IERC20(tokenIn).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"SimpleSwap.sol\":7960:8029  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"SimpleSwap.sol\":8043:8057  uint reserveIn */\n      0x00\n        /* \"SimpleSwap.sol\":8059:8074  uint reserveOut */\n      0x00\n        /* \"SimpleSwap.sol\":8088:8096  tokenOut */\n      dup5\n        /* \"SimpleSwap.sol\":8078:8096  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":8078:8085  tokenIn */\n      dup7\n        /* \"SimpleSwap.sol\":8078:8096  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"SimpleSwap.sol\":8078:8176  tokenIn < tokenOut... */\n      tag_73\n      jumpi\n        /* \"SimpleSwap.sol\":8153:8154  r */\n      dup3\n        /* \"SimpleSwap.sol\":8153:8163  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":8165:8166  r */\n      dup4\n        /* \"SimpleSwap.sol\":8165:8175  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":8078:8176  tokenIn < tokenOut... */\n      jump(tag_74)\n    tag_73:\n        /* \"SimpleSwap.sol\":8113:8114  r */\n      dup3\n        /* \"SimpleSwap.sol\":8113:8123  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":8125:8126  r */\n      dup4\n        /* \"SimpleSwap.sol\":8125:8135  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":8078:8176  tokenIn < tokenOut... */\n    tag_74:\n        /* \"SimpleSwap.sol\":8042:8176  (uint reserveIn, uint reserveOut) = tokenIn < tokenOut... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":8189:8203  uint amountOut */\n      0x00\n        /* \"SimpleSwap.sol\":8206:8251  getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_75\n        /* \"SimpleSwap.sol\":8219:8227  amountIn */\n      dup16\n        /* \"SimpleSwap.sol\":8229:8238  reserveIn */\n      dup5\n        /* \"SimpleSwap.sol\":8240:8250  reserveOut */\n      dup5\n        /* \"SimpleSwap.sol\":8206:8218  getAmountOut */\n      tag_11\n        /* \"SimpleSwap.sol\":8206:8251  getAmountOut(amountIn, reserveIn, reserveOut) */\n      jump\t// in\n    tag_75:\n        /* \"SimpleSwap.sol\":8189:8251  uint amountOut = getAmountOut(amountIn, reserveIn, reserveOut) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":8283:8295  amountOutMin */\n      dup14\n        /* \"SimpleSwap.sol\":8270:8279  amountOut */\n      dup2\n        /* \"SimpleSwap.sol\":8270:8295  amountOut >= amountOutMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":8262:8319  require(amountOut >= amountOutMin, \"Insufficient output\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"SimpleSwap.sol\":8346:8354  tokenOut */\n      dup6\n        /* \"SimpleSwap.sol\":8336:8354  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":8336:8343  tokenIn */\n      dup8\n        /* \"SimpleSwap.sol\":8336:8354  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"SimpleSwap.sol\":8332:8536  if (tokenIn < tokenOut) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"SimpleSwap.sol\":8385:8393  amountIn */\n      dup15\n        /* \"SimpleSwap.sol\":8371:8372  r */\n      dup5\n        /* \"SimpleSwap.sol\":8371:8381  r.reserveA */\n      0x00\n      add\n      0x00\n        /* \"SimpleSwap.sol\":8371:8393  r.reserveA += amountIn */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_80:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":8422:8431  amountOut */\n      dup1\n        /* \"SimpleSwap.sol\":8408:8409  r */\n      dup5\n        /* \"SimpleSwap.sol\":8408:8418  r.reserveB */\n      0x01\n      add\n      0x00\n        /* \"SimpleSwap.sol\":8408:8431  r.reserveB -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":8332:8536  if (tokenIn < tokenOut) {... */\n      jump(tag_83)\n    tag_79:\n        /* \"SimpleSwap.sol\":8478:8486  amountIn */\n      dup15\n        /* \"SimpleSwap.sol\":8464:8465  r */\n      dup5\n        /* \"SimpleSwap.sol\":8464:8474  r.reserveB */\n      0x01\n      add\n      0x00\n        /* \"SimpleSwap.sol\":8464:8486  r.reserveB += amountIn */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":8515:8524  amountOut */\n      dup1\n        /* \"SimpleSwap.sol\":8501:8502  r */\n      dup5\n        /* \"SimpleSwap.sol\":8501:8511  r.reserveA */\n      0x00\n      add\n      0x00\n        /* \"SimpleSwap.sol\":8501:8524  r.reserveA -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":8332:8536  if (tokenIn < tokenOut) {... */\n    tag_83:\n        /* \"SimpleSwap.sol\":8548:8592  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      tag_86\n        /* \"SimpleSwap.sol\":8578:8580  to */\n      dup12\n        /* \"SimpleSwap.sol\":8582:8591  amountOut */\n      dup3\n        /* \"SimpleSwap.sol\":8555:8563  tokenOut */\n      dup9\n        /* \"SimpleSwap.sol\":8548:8577  IERC20(tokenOut).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_87\n      swap1\n        /* \"SimpleSwap.sol\":8548:8592  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"SimpleSwap.sol\":8626:8627  2 */\n      0x02\n        /* \"SimpleSwap.sol\":8615:8628  new uint[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n    tag_88:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_91:\n      pop\n        /* \"SimpleSwap.sol\":8605:8628  amounts = new uint[](2) */\n      swap9\n      pop\n        /* \"SimpleSwap.sol\":8653:8661  amountIn */\n      dup15\n        /* \"SimpleSwap.sol\":8640:8647  amounts */\n      dup10\n        /* \"SimpleSwap.sol\":8648:8649  0 */\n      0x00\n        /* \"SimpleSwap.sol\":8640:8650  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_63\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SimpleSwap.sol\":8640:8661  amounts[0] = amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SimpleSwap.sol\":8685:8694  amountOut */\n      dup1\n        /* \"SimpleSwap.sol\":8672:8679  amounts */\n      dup10\n        /* \"SimpleSwap.sol\":8680:8681  1 */\n      0x01\n        /* \"SimpleSwap.sol\":8672:8682  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_63\n      jump\t// in\n    tag_95:\n    tag_94:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SimpleSwap.sol\":8672:8694  amounts[1] = amountOut */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SimpleSwap.sol\":8717:8727  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":8712:8771  Swap(msg.sender, tokenIn, tokenOut, amounts[0], amounts[1]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062\n        /* \"SimpleSwap.sol\":8729:8736  tokenIn */\n      dup9\n        /* \"SimpleSwap.sol\":8738:8746  tokenOut */\n      dup9\n        /* \"SimpleSwap.sol\":8748:8755  amounts */\n      dup13\n        /* \"SimpleSwap.sol\":8756:8757  0 */\n      0x00\n        /* \"SimpleSwap.sol\":8748:8758  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_97\n      tag_63\n      jump\t// in\n    tag_97:\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SimpleSwap.sol\":8760:8767  amounts */\n      dup14\n        /* \"SimpleSwap.sol\":8768:8769  1 */\n      0x01\n        /* \"SimpleSwap.sol\":8760:8770  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_99\n      tag_63\n      jump\t// in\n    tag_99:\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SimpleSwap.sol\":8712:8771  Swap(msg.sender, tokenIn, tokenOut, amounts[0], amounts[1]) */\n      mload(0x40)\n      tag_100\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SimpleSwap.sol\":7711:8779  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":7481:8779  function swapExactTokensForTokens(... */\n      pop\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":8966:9385  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_23:\n        /* \"SimpleSwap.sol\":9039:9049  uint price */\n      0x00\n        /* \"SimpleSwap.sol\":9062:9077  bytes32 pairKey */\n      0x00\n        /* \"SimpleSwap.sol\":9080:9107  _getPairKey(tokenA, tokenB) */\n      tag_103\n        /* \"SimpleSwap.sol\":9092:9098  tokenA */\n      dup5\n        /* \"SimpleSwap.sol\":9100:9106  tokenB */\n      dup5\n        /* \"SimpleSwap.sol\":9080:9091  _getPairKey */\n      tag_70\n        /* \"SimpleSwap.sol\":9080:9107  _getPairKey(tokenA, tokenB) */\n      jump\t// in\n    tag_103:\n        /* \"SimpleSwap.sol\":9062:9107  bytes32 pairKey = _getPairKey(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":9118:9135  Reserve storage r */\n      0x00\n        /* \"SimpleSwap.sol\":9138:9146  reserves */\n      0x00\n        /* \"SimpleSwap.sol\":9138:9155  reserves[pairKey] */\n      0x00\n        /* \"SimpleSwap.sol\":9147:9154  pairKey */\n      dup4\n        /* \"SimpleSwap.sol\":9138:9155  reserves[pairKey] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleSwap.sol\":9118:9155  Reserve storage r = reserves[pairKey] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":9167:9180  uint reserveA */\n      0x00\n        /* \"SimpleSwap.sol\":9182:9195  uint reserveB */\n      0x00\n        /* \"SimpleSwap.sol\":9208:9214  tokenB */\n      dup6\n        /* \"SimpleSwap.sol\":9199:9214  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":9199:9205  tokenA */\n      dup8\n        /* \"SimpleSwap.sol\":9199:9214  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"SimpleSwap.sol\":9199:9268  tokenA < tokenB ? (r.reserveA, r.reserveB) : (r.reserveB, r.reserveA) */\n      tag_104\n      jumpi\n        /* \"SimpleSwap.sol\":9245:9246  r */\n      dup3\n        /* \"SimpleSwap.sol\":9245:9255  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":9257:9258  r */\n      dup4\n        /* \"SimpleSwap.sol\":9257:9267  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":9199:9268  tokenA < tokenB ? (r.reserveA, r.reserveB) : (r.reserveB, r.reserveA) */\n      jump(tag_105)\n    tag_104:\n        /* \"SimpleSwap.sol\":9218:9219  r */\n      dup3\n        /* \"SimpleSwap.sol\":9218:9228  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":9230:9231  r */\n      dup4\n        /* \"SimpleSwap.sol\":9230:9240  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":9199:9268  tokenA < tokenB ? (r.reserveA, r.reserveB) : (r.reserveB, r.reserveA) */\n    tag_105:\n        /* \"SimpleSwap.sol\":9166:9268  (uint reserveA, uint reserveB) = tokenA < tokenB ? (r.reserveA, r.reserveB) : (r.reserveB, r.reserveA) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":9298:9299  0 */\n      0x00\n        /* \"SimpleSwap.sol\":9287:9295  reserveA */\n      dup3\n        /* \"SimpleSwap.sol\":9287:9299  reserveA > 0 */\n      gt\n        /* \"SimpleSwap.sol\":9287:9315  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"SimpleSwap.sol\":9314:9315  0 */\n      0x00\n        /* \"SimpleSwap.sol\":9303:9311  reserveB */\n      dup2\n        /* \"SimpleSwap.sol\":9303:9315  reserveB > 0 */\n      gt\n        /* \"SimpleSwap.sol\":9287:9315  reserveA > 0 && reserveB > 0 */\n    tag_106:\n        /* \"SimpleSwap.sol\":9279:9331  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"SimpleSwap.sol\":9369:9377  reserveA */\n      dup2\n        /* \"SimpleSwap.sol\":9361:9365  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SimpleSwap.sol\":9350:9358  reserveB */\n      dup3\n        /* \"SimpleSwap.sol\":9350:9365  reserveB * 1e18 */\n      tag_110\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_110:\n        /* \"SimpleSwap.sol\":9349:9377  (reserveB * 1e18) / reserveA */\n      tag_111\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_111:\n        /* \"SimpleSwap.sol\":9342:9377  return (reserveB * 1e18) / reserveA */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":8966:9385  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":6036:7097  function removeLiquidity(... */\n    tag_28:\n        /* \"SimpleSwap.sol\":6275:6287  uint amountA */\n      0x00\n        /* \"SimpleSwap.sol\":6289:6301  uint amountB */\n      0x00\n        /* \"SimpleSwap.sol\":6256:6264  deadline */\n      dup3\n        /* \"SimpleSwap.sol\":1114:1122  deadline */\n      dup1\n        /* \"SimpleSwap.sol\":1095:1110  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":1095:1122  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":1087:1146  require(block.timestamp <= deadline, \"Transaction expired\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_56\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"SimpleSwap.sol\":6314:6329  bytes32 pairKey */\n      0x00\n        /* \"SimpleSwap.sol\":6332:6359  _getPairKey(tokenA, tokenB) */\n      tag_116\n        /* \"SimpleSwap.sol\":6344:6350  tokenA */\n      dup12\n        /* \"SimpleSwap.sol\":6352:6358  tokenB */\n      dup12\n        /* \"SimpleSwap.sol\":6332:6343  _getPairKey */\n      tag_70\n        /* \"SimpleSwap.sol\":6332:6359  _getPairKey(tokenA, tokenB) */\n      jump\t// in\n    tag_116:\n        /* \"SimpleSwap.sol\":6314:6359  bytes32 pairKey = _getPairKey(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":6370:6387  Reserve storage r */\n      0x00\n        /* \"SimpleSwap.sol\":6390:6398  reserves */\n      0x00\n        /* \"SimpleSwap.sol\":6390:6407  reserves[pairKey] */\n      0x00\n        /* \"SimpleSwap.sol\":6399:6406  pairKey */\n      dup4\n        /* \"SimpleSwap.sol\":6390:6407  reserves[pairKey] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleSwap.sol\":6370:6407  Reserve storage r = reserves[pairKey] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":6455:6464  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":6428:6429  r */\n      dup2\n        /* \"SimpleSwap.sol\":6428:6439  r.liquidity */\n      0x03\n      add\n        /* \"SimpleSwap.sol\":6428:6451  r.liquidity[msg.sender] */\n      0x00\n        /* \"SimpleSwap.sol\":6440:6450  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":6428:6451  r.liquidity[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SimpleSwap.sol\":6428:6464  r.liquidity[msg.sender] >= liquidity */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":6420:6491  require(r.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_44\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"SimpleSwap.sol\":6541:6542  r */\n      dup1\n        /* \"SimpleSwap.sol\":6541:6557  r.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"SimpleSwap.sol\":6527:6528  r */\n      dup2\n        /* \"SimpleSwap.sol\":6527:6537  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":6515:6524  liquidity */\n      dup12\n        /* \"SimpleSwap.sol\":6515:6537  liquidity * r.reserveA */\n      tag_119\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_119:\n        /* \"SimpleSwap.sol\":6514:6557  (liquidity * r.reserveA) / r.totalLiquidity */\n      tag_120\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_120:\n        /* \"SimpleSwap.sol\":6504:6557  amountA = (liquidity * r.reserveA) / r.totalLiquidity */\n      swap5\n      pop\n        /* \"SimpleSwap.sol\":6605:6606  r */\n      dup1\n        /* \"SimpleSwap.sol\":6605:6621  r.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"SimpleSwap.sol\":6591:6592  r */\n      dup2\n        /* \"SimpleSwap.sol\":6591:6601  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":6579:6588  liquidity */\n      dup12\n        /* \"SimpleSwap.sol\":6579:6601  liquidity * r.reserveB */\n      tag_121\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_121:\n        /* \"SimpleSwap.sol\":6578:6621  (liquidity * r.reserveB) / r.totalLiquidity */\n      tag_122\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_122:\n        /* \"SimpleSwap.sol\":6568:6621  amountB = (liquidity * r.reserveB) / r.totalLiquidity */\n      swap4\n      pop\n        /* \"SimpleSwap.sol\":6653:6663  amountAMin */\n      dup9\n        /* \"SimpleSwap.sol\":6642:6649  amountA */\n      dup6\n        /* \"SimpleSwap.sol\":6642:6663  amountA >= amountAMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":6634:6682  require(amountA >= amountAMin, \"Insufficient A\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"SimpleSwap.sol\":6712:6722  amountBMin */\n      dup8\n        /* \"SimpleSwap.sol\":6701:6708  amountB */\n      dup5\n        /* \"SimpleSwap.sol\":6701:6722  amountB >= amountBMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":6693:6741  require(amountB >= amountBMin, \"Insufficient B\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"SimpleSwap.sol\":6768:6775  amountA */\n      dup5\n        /* \"SimpleSwap.sol\":6754:6755  r */\n      dup2\n        /* \"SimpleSwap.sol\":6754:6764  r.reserveA */\n      0x00\n      add\n      0x00\n        /* \"SimpleSwap.sol\":6754:6775  r.reserveA -= amountA */\n      dup3\n      dup3\n      sload\n      tag_129\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":6800:6807  amountB */\n      dup4\n        /* \"SimpleSwap.sol\":6786:6787  r */\n      dup2\n        /* \"SimpleSwap.sol\":6786:6796  r.reserveB */\n      0x01\n      add\n      0x00\n        /* \"SimpleSwap.sol\":6786:6807  r.reserveB -= amountB */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":6838:6847  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":6818:6819  r */\n      dup2\n        /* \"SimpleSwap.sol\":6818:6834  r.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"SimpleSwap.sol\":6818:6847  r.totalLiquidity -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":6885:6894  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":6858:6859  r */\n      dup2\n        /* \"SimpleSwap.sol\":6858:6869  r.liquidity */\n      0x03\n      add\n        /* \"SimpleSwap.sol\":6858:6881  r.liquidity[msg.sender] */\n      0x00\n        /* \"SimpleSwap.sol\":6870:6880  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":6858:6881  r.liquidity[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SimpleSwap.sol\":6858:6894  r.liquidity[msg.sender] -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":6907:6947  IERC20(tokenA).safeTransfer(to, amountA) */\n      tag_133\n        /* \"SimpleSwap.sol\":6935:6937  to */\n      dup8\n        /* \"SimpleSwap.sol\":6939:6946  amountA */\n      dup7\n        /* \"SimpleSwap.sol\":6914:6920  tokenA */\n      dup15\n        /* \"SimpleSwap.sol\":6907:6934  IERC20(tokenA).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_87\n      swap1\n        /* \"SimpleSwap.sol\":6907:6947  IERC20(tokenA).safeTransfer(to, amountA) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"SimpleSwap.sol\":6958:6998  IERC20(tokenB).safeTransfer(to, amountB) */\n      tag_134\n        /* \"SimpleSwap.sol\":6986:6988  to */\n      dup8\n        /* \"SimpleSwap.sol\":6990:6997  amountB */\n      dup6\n        /* \"SimpleSwap.sol\":6965:6971  tokenB */\n      dup14\n        /* \"SimpleSwap.sol\":6958:6985  IERC20(tokenB).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_87\n      swap1\n        /* \"SimpleSwap.sol\":6958:6998  IERC20(tokenB).safeTransfer(to, amountB) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"SimpleSwap.sol\":7033:7043  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":7016:7089  LiquidityRemoved(msg.sender, tokenA, tokenB, amountA, amountB, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1\n        /* \"SimpleSwap.sol\":7045:7051  tokenA */\n      dup14\n        /* \"SimpleSwap.sol\":7053:7059  tokenB */\n      dup14\n        /* \"SimpleSwap.sol\":7061:7068  amountA */\n      dup9\n        /* \"SimpleSwap.sol\":7070:7077  amountB */\n      dup9\n        /* \"SimpleSwap.sol\":7079:7088  liquidity */\n      dup16\n        /* \"SimpleSwap.sol\":7016:7089  LiquidityRemoved(msg.sender, tokenA, tokenB, amountA, amountB, liquidity) */\n      mload(0x40)\n      tag_135\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SimpleSwap.sol\":6303:7097  {... */\n      pop\n      pop\n        /* \"SimpleSwap.sol\":6036:7097  function removeLiquidity(... */\n      pop\n      swap8\n      pop\n      swap8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":2371:3545  function addLiquidity(... */\n    tag_34:\n        /* \"SimpleSwap.sol\":2642:2654  uint amountA */\n      0x00\n        /* \"SimpleSwap.sol\":2656:2668  uint amountB */\n      0x00\n        /* \"SimpleSwap.sol\":2670:2684  uint liquidity */\n      0x00\n        /* \"SimpleSwap.sol\":2623:2631  deadline */\n      dup4\n        /* \"SimpleSwap.sol\":1114:1122  deadline */\n      dup1\n        /* \"SimpleSwap.sol\":1095:1110  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":1095:1122  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":1087:1146  require(block.timestamp <= deadline, \"Transaction expired\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_56\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"SimpleSwap.sol\":2715:2721  tokenB */\n      dup11\n        /* \"SimpleSwap.sol\":2705:2721  tokenA != tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":2705:2711  tokenA */\n      dup13\n        /* \"SimpleSwap.sol\":2705:2721  tokenA != tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SimpleSwap.sol\":2697:2742  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"SimpleSwap.sol\":2755:2770  bytes32 pairKey */\n      0x00\n        /* \"SimpleSwap.sol\":2773:2800  _getPairKey(tokenA, tokenB) */\n      tag_144\n        /* \"SimpleSwap.sol\":2785:2791  tokenA */\n      dup14\n        /* \"SimpleSwap.sol\":2793:2799  tokenB */\n      dup14\n        /* \"SimpleSwap.sol\":2773:2784  _getPairKey */\n      tag_70\n        /* \"SimpleSwap.sol\":2773:2800  _getPairKey(tokenA, tokenB) */\n      jump\t// in\n    tag_144:\n        /* \"SimpleSwap.sol\":2755:2800  bytes32 pairKey = _getPairKey(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":2811:2828  Reserve storage r */\n      0x00\n        /* \"SimpleSwap.sol\":2831:2839  reserves */\n      0x00\n        /* \"SimpleSwap.sol\":2831:2848  reserves[pairKey] */\n      0x00\n        /* \"SimpleSwap.sol\":2840:2847  pairKey */\n      dup4\n        /* \"SimpleSwap.sol\":2831:2848  reserves[pairKey] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleSwap.sol\":2811:2848  Reserve storage r = reserves[pairKey] */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":2882:3090  _quoteAddLiquidity(... */\n      tag_145\n        /* \"SimpleSwap.sol\":2915:2921  tokenA */\n      dup15\n        /* \"SimpleSwap.sol\":2923:2929  tokenB */\n      dup15\n        /* \"SimpleSwap.sol\":2944:2958  amountADesired */\n      dup15\n        /* \"SimpleSwap.sol\":2960:2974  amountBDesired */\n      dup15\n        /* \"SimpleSwap.sol\":2989:2999  amountAMin */\n      dup15\n        /* \"SimpleSwap.sol\":3001:3011  amountBMin */\n      dup15\n        /* \"SimpleSwap.sol\":3026:3027  r */\n      dup8\n        /* \"SimpleSwap.sol\":3026:3036  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":3038:3039  r */\n      dup9\n        /* \"SimpleSwap.sol\":3038:3048  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":3063:3064  r */\n      dup10\n        /* \"SimpleSwap.sol\":3063:3079  r.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"SimpleSwap.sol\":2882:2900  _quoteAddLiquidity */\n      tag_146\n        /* \"SimpleSwap.sol\":2882:3090  _quoteAddLiquidity(... */\n      jump\t// in\n    tag_145:\n        /* \"SimpleSwap.sol\":2861:3090  (amountA, amountB) = _quoteAddLiquidity(... */\n      dup1\n      swap7\n      pop\n      dup2\n      swap8\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":3103:3152  _transferTokens(tokenA, tokenB, amountA, amountB) */\n      tag_147\n        /* \"SimpleSwap.sol\":3119:3125  tokenA */\n      dup15\n        /* \"SimpleSwap.sol\":3127:3133  tokenB */\n      dup15\n        /* \"SimpleSwap.sol\":3135:3142  amountA */\n      dup9\n        /* \"SimpleSwap.sol\":3144:3151  amountB */\n      dup9\n        /* \"SimpleSwap.sol\":3103:3118  _transferTokens */\n      tag_148\n        /* \"SimpleSwap.sol\":3103:3152  _transferTokens(tokenA, tokenB, amountA, amountB) */\n      jump\t// in\n    tag_147:\n        /* \"SimpleSwap.sol\":3175:3254  _calculateLiquidity(amountA, amountB, r.reserveA, r.reserveB, r.totalLiquidity) */\n      tag_149\n        /* \"SimpleSwap.sol\":3195:3202  amountA */\n      dup7\n        /* \"SimpleSwap.sol\":3204:3211  amountB */\n      dup7\n        /* \"SimpleSwap.sol\":3213:3214  r */\n      dup4\n        /* \"SimpleSwap.sol\":3213:3223  r.reserveA */\n      0x00\n      add\n      sload\n        /* \"SimpleSwap.sol\":3225:3226  r */\n      dup5\n        /* \"SimpleSwap.sol\":3225:3235  r.reserveB */\n      0x01\n      add\n      sload\n        /* \"SimpleSwap.sol\":3237:3238  r */\n      dup6\n        /* \"SimpleSwap.sol\":3237:3253  r.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"SimpleSwap.sol\":3175:3194  _calculateLiquidity */\n      tag_150\n        /* \"SimpleSwap.sol\":3175:3254  _calculateLiquidity(amountA, amountB, r.reserveA, r.reserveB, r.totalLiquidity) */\n      jump\t// in\n    tag_149:\n        /* \"SimpleSwap.sol\":3163:3254  liquidity = _calculateLiquidity(amountA, amountB, r.reserveA, r.reserveB, r.totalLiquidity) */\n      swap4\n      pop\n        /* \"SimpleSwap.sol\":3285:3286  0 */\n      0x00\n        /* \"SimpleSwap.sol\":3273:3282  liquidity */\n      dup5\n        /* \"SimpleSwap.sol\":3273:3286  liquidity > 0 */\n      gt\n        /* \"SimpleSwap.sol\":3265:3303  require(liquidity > 0, \"Insufficient\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"SimpleSwap.sol\":3330:3337  amountA */\n      dup6\n        /* \"SimpleSwap.sol\":3316:3317  r */\n      dup2\n        /* \"SimpleSwap.sol\":3316:3326  r.reserveA */\n      0x00\n      add\n      0x00\n        /* \"SimpleSwap.sol\":3316:3337  r.reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":3362:3369  amountB */\n      dup5\n        /* \"SimpleSwap.sol\":3348:3349  r */\n      dup2\n        /* \"SimpleSwap.sol\":3348:3358  r.reserveB */\n      0x01\n      add\n      0x00\n        /* \"SimpleSwap.sol\":3348:3369  r.reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":3400:3409  liquidity */\n      dup4\n        /* \"SimpleSwap.sol\":3380:3381  r */\n      dup2\n        /* \"SimpleSwap.sol\":3380:3396  r.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"SimpleSwap.sol\":3380:3409  r.totalLiquidity += liquidity */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":3439:3448  liquidity */\n      dup4\n        /* \"SimpleSwap.sol\":3420:3421  r */\n      dup2\n        /* \"SimpleSwap.sol\":3420:3431  r.liquidity */\n      0x03\n      add\n        /* \"SimpleSwap.sol\":3420:3435  r.liquidity[to] */\n      0x00\n        /* \"SimpleSwap.sol\":3432:3434  to */\n      dup11\n        /* \"SimpleSwap.sol\":3420:3435  r.liquidity[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SimpleSwap.sol\":3420:3448  r.liquidity[to] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleSwap.sol\":3481:3491  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":3466:3537  LiquidityAdded(msg.sender, tokenA, tokenB, amountA, amountB, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70\n        /* \"SimpleSwap.sol\":3493:3499  tokenA */\n      dup16\n        /* \"SimpleSwap.sol\":3501:3507  tokenB */\n      dup16\n        /* \"SimpleSwap.sol\":3509:3516  amountA */\n      dup10\n        /* \"SimpleSwap.sol\":3518:3525  amountB */\n      dup10\n        /* \"SimpleSwap.sol\":3527:3536  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":3466:3537  LiquidityAdded(msg.sender, tokenA, tokenB, amountA, amountB, liquidity) */\n      mload(0x40)\n      tag_158\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SimpleSwap.sol\":2686:3545  {... */\n      pop\n      pop\n        /* \"SimpleSwap.sol\":2371:3545  function addLiquidity(... */\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":1226:1443  function _getPairKey(address tokenA, address tokenB) private pure returns (bytes32) {... */\n    tag_70:\n        /* \"SimpleSwap.sol\":1301:1308  bytes32 */\n      0x00\n        /* \"SimpleSwap.sol\":1337:1343  tokenB */\n      dup2\n        /* \"SimpleSwap.sol\":1328:1343  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":1328:1334  tokenA */\n      dup4\n        /* \"SimpleSwap.sol\":1328:1343  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"SimpleSwap.sol\":1328:1435  tokenA < tokenB ? keccak256(abi.encodePacked(tokenA, tokenB)) : keccak256(abi.encodePacked(tokenB, tokenA)) */\n      tag_160\n      jumpi\n        /* \"SimpleSwap.sol\":1419:1425  tokenB */\n      dup2\n        /* \"SimpleSwap.sol\":1427:1433  tokenA */\n      dup4\n        /* \"SimpleSwap.sol\":1402:1434  abi.encodePacked(tokenB, tokenA) */\n      add(0x20, mload(0x40))\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SimpleSwap.sol\":1392:1435  keccak256(abi.encodePacked(tokenB, tokenA)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"SimpleSwap.sol\":1328:1435  tokenA < tokenB ? keccak256(abi.encodePacked(tokenA, tokenB)) : keccak256(abi.encodePacked(tokenB, tokenA)) */\n      jump(tag_163)\n    tag_160:\n        /* \"SimpleSwap.sol\":1373:1379  tokenA */\n      dup3\n        /* \"SimpleSwap.sol\":1381:1387  tokenB */\n      dup3\n        /* \"SimpleSwap.sol\":1356:1388  abi.encodePacked(tokenA, tokenB) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SimpleSwap.sol\":1346:1389  keccak256(abi.encodePacked(tokenA, tokenB)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"SimpleSwap.sol\":1328:1435  tokenA < tokenB ? keccak256(abi.encodePacked(tokenA, tokenB)) : keccak256(abi.encodePacked(tokenB, tokenA)) */\n    tag_163:\n        /* \"SimpleSwap.sol\":1321:1435  return tokenA < tokenB ? keccak256(abi.encodePacked(tokenA, tokenB)) : keccak256(abi.encodePacked(tokenB, tokenA)) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":1226:1443  function _getPairKey(address tokenA, address tokenB) private pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_172\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":3625:4622  function _quoteAddLiquidity(... */\n    tag_146:\n        /* \"SimpleSwap.sol\":3923:3935  uint amountA */\n      0x00\n        /* \"SimpleSwap.sol\":3937:3949  uint amountB */\n      0x00\n        /* \"SimpleSwap.sol\":3984:3985  0 */\n      0x00\n        /* \"SimpleSwap.sol\":3966:3980  totalLiquidity */\n      dup4\n        /* \"SimpleSwap.sol\":3966:3985  totalLiquidity == 0 */\n      sub\n        /* \"SimpleSwap.sol\":3962:4053  if (totalLiquidity == 0) {... */\n      tag_175\n      jumpi\n        /* \"SimpleSwap.sol\":4010:4024  amountADesired */\n      dup9\n        /* \"SimpleSwap.sol\":4026:4040  amountBDesired */\n      dup9\n        /* \"SimpleSwap.sol\":4002:4041  return (amountADesired, amountBDesired) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_174)\n        /* \"SimpleSwap.sol\":3962:4053  if (totalLiquidity == 0) {... */\n    tag_175:\n        /* \"SimpleSwap.sol\":4066:4080  address token0 */\n      0x00\n        /* \"SimpleSwap.sol\":4085:4112  _sortTokens(tokenA, tokenB) */\n      tag_176\n        /* \"SimpleSwap.sol\":4097:4103  tokenA */\n      dup13\n        /* \"SimpleSwap.sol\":4105:4111  tokenB */\n      dup13\n        /* \"SimpleSwap.sol\":4085:4096  _sortTokens */\n      tag_177\n        /* \"SimpleSwap.sol\":4085:4112  _sortTokens(tokenA, tokenB) */\n      jump\t// in\n    tag_176:\n        /* \"SimpleSwap.sol\":4065:4112  (address token0,) = _sortTokens(tokenA, tokenB) */\n      pop\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":4124:4131  uint rA */\n      0x00\n        /* \"SimpleSwap.sol\":4133:4140  uint rB */\n      0x00\n        /* \"SimpleSwap.sol\":4154:4160  token0 */\n      dup3\n        /* \"SimpleSwap.sol\":4144:4160  tokenA == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":4144:4150  tokenA */\n      dup15\n        /* \"SimpleSwap.sol\":4144:4160  tokenA == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SimpleSwap.sol\":4144:4206  tokenA == token0 ? (reserveA, reserveB) : (reserveB, reserveA) */\n      tag_178\n      jumpi\n        /* \"SimpleSwap.sol\":4187:4195  reserveB */\n      dup7\n        /* \"SimpleSwap.sol\":4197:4205  reserveA */\n      dup9\n        /* \"SimpleSwap.sol\":4144:4206  tokenA == token0 ? (reserveA, reserveB) : (reserveB, reserveA) */\n      jump(tag_179)\n    tag_178:\n        /* \"SimpleSwap.sol\":4164:4172  reserveA */\n      dup8\n        /* \"SimpleSwap.sol\":4174:4182  reserveB */\n      dup8\n        /* \"SimpleSwap.sol\":4144:4206  tokenA == token0 ? (reserveA, reserveB) : (reserveB, reserveA) */\n    tag_179:\n        /* \"SimpleSwap.sol\":4123:4206  (uint rA, uint rB) = tokenA == token0 ? (reserveA, reserveB) : (reserveB, reserveA) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":4219:4232  uint bOptimal */\n      0x00\n        /* \"SimpleSwap.sol\":4259:4261  rA */\n      dup3\n        /* \"SimpleSwap.sol\":4253:4255  rB */\n      dup3\n        /* \"SimpleSwap.sol\":4236:4250  amountADesired */\n      dup15\n        /* \"SimpleSwap.sol\":4236:4255  amountADesired * rB */\n      tag_180\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_180:\n        /* \"SimpleSwap.sol\":4235:4261  (amountADesired * rB) / rA */\n      tag_181\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_181:\n        /* \"SimpleSwap.sol\":4219:4261  uint bOptimal = (amountADesired * rB) / rA */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":4288:4302  amountBDesired */\n      dup12\n        /* \"SimpleSwap.sol\":4276:4284  bOptimal */\n      dup2\n        /* \"SimpleSwap.sol\":4276:4302  bOptimal <= amountBDesired */\n      gt\n        /* \"SimpleSwap.sol\":4272:4615  if (bOptimal <= amountBDesired) {... */\n      tag_182\n      jumpi\n        /* \"SimpleSwap.sol\":4339:4349  amountBMin */\n      dup10\n        /* \"SimpleSwap.sol\":4327:4335  bOptimal */\n      dup2\n        /* \"SimpleSwap.sol\":4327:4349  bOptimal >= amountBMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":4319:4368  require(bOptimal >= amountBMin, \"Insufficient B\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_128\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"SimpleSwap.sol\":4391:4405  amountADesired */\n      dup13\n        /* \"SimpleSwap.sol\":4407:4415  bOptimal */\n      dup2\n        /* \"SimpleSwap.sol\":4383:4416  return (amountADesired, bOptimal) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_174)\n        /* \"SimpleSwap.sol\":4272:4615  if (bOptimal <= amountBDesired) {... */\n    tag_182:\n        /* \"SimpleSwap.sol\":4449:4462  uint aOptimal */\n      0x00\n        /* \"SimpleSwap.sol\":4489:4491  rB */\n      dup3\n        /* \"SimpleSwap.sol\":4483:4485  rA */\n      dup5\n        /* \"SimpleSwap.sol\":4466:4480  amountBDesired */\n      dup15\n        /* \"SimpleSwap.sol\":4466:4485  amountBDesired * rA */\n      tag_186\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_186:\n        /* \"SimpleSwap.sol\":4465:4491  (amountBDesired * rA) / rB */\n      tag_187\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_187:\n        /* \"SimpleSwap.sol\":4449:4491  uint aOptimal = (amountBDesired * rA) / rB */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":4526:4536  amountAMin */\n      dup12\n        /* \"SimpleSwap.sol\":4514:4522  aOptimal */\n      dup2\n        /* \"SimpleSwap.sol\":4514:4536  aOptimal >= amountAMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":4506:4555  require(aOptimal >= amountAMin, \"Insufficient A\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_125\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"SimpleSwap.sol\":4578:4586  aOptimal */\n      dup1\n        /* \"SimpleSwap.sol\":4588:4602  amountBDesired */\n      dup14\n        /* \"SimpleSwap.sol\":4570:4603  return (aOptimal, amountBDesired) */\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":3625:4622  function _quoteAddLiquidity(... */\n    tag_174:\n      swap10\n      pop\n      swap10\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":4685:4943  function _transferTokens(address tokenA, address tokenB, uint amountA, uint amountB) internal {... */\n    tag_148:\n        /* \"SimpleSwap.sol\":4790:4857  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_191\n        /* \"SimpleSwap.sol\":4822:4832  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":4842:4846  this */\n      address\n        /* \"SimpleSwap.sol\":4849:4856  amountA */\n      dup5\n        /* \"SimpleSwap.sol\":4797:4803  tokenA */\n      dup8\n        /* \"SimpleSwap.sol\":4790:4821  IERC20(tokenA).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"SimpleSwap.sol\":4790:4857  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"SimpleSwap.sol\":4868:4935  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_192\n        /* \"SimpleSwap.sol\":4900:4910  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":4920:4924  this */\n      address\n        /* \"SimpleSwap.sol\":4927:4934  amountB */\n      dup4\n        /* \"SimpleSwap.sol\":4875:4881  tokenB */\n      dup7\n        /* \"SimpleSwap.sol\":4868:4899  IERC20(tokenB).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"SimpleSwap.sol\":4868:4935  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"SimpleSwap.sol\":4685:4943  function _transferTokens(address tokenA, address tokenB, uint amountA, uint amountB) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":5011:5500  function _calculateLiquidity(... */\n    tag_150:\n        /* \"SimpleSwap.sol\":5194:5208  uint liquidity */\n      0x00\n        /* \"SimpleSwap.sol\":5243:5244  0 */\n      0x00\n        /* \"SimpleSwap.sol\":5225:5239  totalLiquidity */\n      dup3\n        /* \"SimpleSwap.sol\":5225:5244  totalLiquidity == 0 */\n      sub\n        /* \"SimpleSwap.sol\":5221:5493  if (totalLiquidity == 0) {... */\n      tag_194\n      jumpi\n        /* \"SimpleSwap.sol\":5273:5301  Math.sqrt(amountA * amountB) */\n      tag_195\n        /* \"SimpleSwap.sol\":5293:5300  amountB */\n      dup6\n        /* \"SimpleSwap.sol\":5283:5290  amountA */\n      dup8\n        /* \"SimpleSwap.sol\":5283:5300  amountA * amountB */\n      tag_196\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_196:\n        /* \"SimpleSwap.sol\":5273:5282  Math.sqrt */\n      tag_197\n        /* \"SimpleSwap.sol\":5273:5301  Math.sqrt(amountA * amountB) */\n      jump\t// in\n    tag_195:\n        /* \"SimpleSwap.sol\":5261:5301  liquidity = Math.sqrt(amountA * amountB) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":5221:5493  if (totalLiquidity == 0) {... */\n      jump(tag_198)\n    tag_194:\n        /* \"SimpleSwap.sol\":5346:5481  Math.min(... */\n      tag_199\n        /* \"SimpleSwap.sol\":5402:5410  reserveA */\n      dup5\n        /* \"SimpleSwap.sol\":5384:5398  totalLiquidity */\n      dup4\n        /* \"SimpleSwap.sol\":5374:5381  amountA */\n      dup9\n        /* \"SimpleSwap.sol\":5374:5398  amountA * totalLiquidity */\n      tag_200\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_200:\n        /* \"SimpleSwap.sol\":5373:5410  (amountA * totalLiquidity) / reserveA */\n      tag_201\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_201:\n        /* \"SimpleSwap.sol\":5458:5466  reserveB */\n      dup5\n        /* \"SimpleSwap.sol\":5440:5454  totalLiquidity */\n      dup5\n        /* \"SimpleSwap.sol\":5430:5437  amountB */\n      dup9\n        /* \"SimpleSwap.sol\":5430:5454  amountB * totalLiquidity */\n      tag_202\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_202:\n        /* \"SimpleSwap.sol\":5429:5466  (amountB * totalLiquidity) / reserveB */\n      tag_203\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_203:\n        /* \"SimpleSwap.sol\":5346:5354  Math.min */\n      tag_204\n        /* \"SimpleSwap.sol\":5346:5481  Math.min(... */\n      jump\t// in\n    tag_199:\n        /* \"SimpleSwap.sol\":5334:5481  liquidity = Math.min(... */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":5221:5493  if (totalLiquidity == 0) {... */\n    tag_198:\n        /* \"SimpleSwap.sol\":5011:5500  function _calculateLiquidity(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_208)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":1505:1677  function _sortTokens(address tokenA, address tokenB) private pure returns (address, address) {... */\n    tag_177:\n        /* \"SimpleSwap.sol\":1580:1587  address */\n      0x00\n        /* \"SimpleSwap.sol\":1589:1596  address */\n      0x00\n        /* \"SimpleSwap.sol\":1625:1631  tokenB */\n      dup3\n        /* \"SimpleSwap.sol\":1616:1631  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleSwap.sol\":1616:1622  tokenA */\n      dup5\n        /* \"SimpleSwap.sol\":1616:1631  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"SimpleSwap.sol\":1616:1669  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      tag_213\n      jumpi\n        /* \"SimpleSwap.sol\":1654:1660  tokenB */\n      dup3\n        /* \"SimpleSwap.sol\":1662:1668  tokenA */\n      dup5\n        /* \"SimpleSwap.sol\":1616:1669  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      jump(tag_214)\n    tag_213:\n        /* \"SimpleSwap.sol\":1635:1641  tokenA */\n      dup4\n        /* \"SimpleSwap.sol\":1643:1649  tokenB */\n      dup4\n        /* \"SimpleSwap.sol\":1616:1669  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n    tag_214:\n        /* \"SimpleSwap.sol\":1609:1669  return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":1505:1677  function _sortTokens(address tokenA, address tokenB) private pure returns (address, address) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20567:25748  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20615:20622  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20733:20734  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20728:20729  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20728:20734  a <= 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20724:20777  if (a <= 1) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20761:20762  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20754:20762  return a */\n      swap1\n      pop\n      jump(tag_215)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20724:20777  if (a <= 1) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21704:21714  uint256 aa */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21717:21718  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21704:21718  uint256 aa = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21732:21742  uint256 xn */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21745:21746  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21732:21746  uint256 xn = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21772:21780  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21765:21767  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21765:21781  aa >= (1 << 128) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21761:21853  if (aa >= (1 << 128)) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21808:21811  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21801:21811  aa >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21836:21838  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21829:21838  xn <<= 64 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21761:21853  if (aa >= (1 << 128)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21877:21884  1 << 64 */\n      0x010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21870:21872  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21870:21885  aa >= (1 << 64) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21866:21956  if (aa >= (1 << 64)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21912:21914  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21905:21914  aa >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21939:21941  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21932:21941  xn <<= 32 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21866:21956  if (aa >= (1 << 64)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21980:21987  1 << 32 */\n      0x0100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21973:21975  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21973:21988  aa >= (1 << 32) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21969:22059  if (aa >= (1 << 32)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22015:22017  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22008:22017  aa >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22042:22044  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22035:22044  xn <<= 16 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21969:22059  if (aa >= (1 << 32)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22083:22090  1 << 16 */\n      0x010000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22076:22078  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22076:22091  aa >= (1 << 16) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22072:22161  if (aa >= (1 << 16)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22118:22120  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22111:22120  aa >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22145:22146  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22138:22146  xn <<= 8 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22072:22161  if (aa >= (1 << 16)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22185:22191  1 << 8 */\n      0x0100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22178:22180  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22178:22192  aa >= (1 << 8) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22174:22261  if (aa >= (1 << 8)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22219:22220  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22212:22220  aa >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22245:22246  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22238:22246  xn <<= 4 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22174:22261  if (aa >= (1 << 8)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22285:22291  1 << 4 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22278:22280  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22278:22292  aa >= (1 << 4) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22274:22361  if (aa >= (1 << 4)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22319:22320  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22312:22320  aa >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22345:22346  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22338:22346  xn <<= 2 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22274:22361  if (aa >= (1 << 4)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22385:22391  1 << 2 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22378:22380  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22378:22392  aa >= (1 << 2) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22374:22435  if (aa >= (1 << 2)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22419:22420  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22412:22420  xn <<= 1 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22374:22435  if (aa >= (1 << 2)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22872:22873  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22865:22867  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22861:22862  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22861:22867  3 * xn */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22860:22873  (3 * xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22855:22873  xn = (3 * xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24782:24783  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24775:24777  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24771:24772  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24771:24777  a / xn */\n      dup2\n      tag_224\n      jumpi\n      tag_225\n      tag_226\n      jump\t// in\n    tag_225:\n    tag_224:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24766:24768  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24766:24777  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24765:24783  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24760:24783  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24891:24892  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24884:24886  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24880:24881  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24880:24886  a / xn */\n      dup2\n      tag_227\n      jumpi\n      tag_228\n      tag_226\n      jump\t// in\n    tag_228:\n    tag_227:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24875:24877  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24875:24886  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24874:24892  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24869:24892  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25002:25003  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24995:24997  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24991:24992  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24991:24997  a / xn */\n      dup2\n      tag_229\n      jumpi\n      tag_230\n      tag_226\n      jump\t// in\n    tag_230:\n    tag_229:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24986:24988  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24986:24997  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24985:25003  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24980:25003  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25111:25112  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25104:25106  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25100:25101  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25100:25106  a / xn */\n      dup2\n      tag_231\n      jumpi\n      tag_232\n      tag_226\n      jump\t// in\n    tag_232:\n    tag_231:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25095:25097  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25095:25106  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25094:25112  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25089:25112  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25221:25222  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25214:25216  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25210:25211  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25210:25216  a / xn */\n      dup2\n      tag_233\n      jumpi\n      tag_234\n      tag_226\n      jump\t// in\n    tag_234:\n    tag_233:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25205:25207  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25205:25216  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25204:25222  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25199:25222  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25331:25332  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25324:25326  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25320:25321  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25320:25326  a / xn */\n      dup2\n      tag_235\n      jumpi\n      tag_236\n      tag_226\n      jump\t// in\n    tag_236:\n    tag_235:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25315:25317  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25315:25326  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25314:25332  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25309:25332  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25731  SafeCast.toUint(xn > a / xn) */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25728:25730  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25724:25725  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25724:25730  a / xn */\n      dup2\n      tag_238\n      jumpi\n      tag_239\n      tag_226\n      jump\t// in\n    tag_239:\n    tag_238:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25719:25721  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25719:25730  xn > a / xn */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25718  SafeCast.toUint */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25731  SafeCast.toUint(xn > a / xn) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25698:25700  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25698:25731  xn - SafeCast.toUint(xn > a / xn) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25691:25731  return xn - SafeCast.toUint(xn > a / xn) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20567:25748  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_215:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5617:5728  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5675:5682  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5721  ternary(a < b, a, b) */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5713:5714  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5709:5710  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5709:5714  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5716:5717  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5719:5720  b */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5708  ternary */\n      tag_243\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5721  ternary(a < b, a, b) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5694:5721  return ternary(a < b, a, b) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5617:5728  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34842:34851  uint256 u */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34921:34922  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34914:34923  iszero(b) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34907:34924  iszero(iszero(b)) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34902:34924  u := iszero(iszero(b)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5149:5156  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      tag_246\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5337:5346  condition */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5336  SafeCast.toUint */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5316:5317  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5313  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5317  a ^ b */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5311:5347  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5307  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5348  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5299:5348  return b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_248:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_249:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_250:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_251:\n        /* \"#utility.yul\":490:514   */\n      tag_302\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_303:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_252:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_305\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_251\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_10:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_308\n      tag_248\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":800:919   */\n    tag_307:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_309\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_252\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_310\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_252\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_311\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_252\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_253:\n        /* \"#utility.yul\":1402:1426   */\n      tag_313\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_250\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_13:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_315\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_253\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1784   */\n    tag_254:\n        /* \"#utility.yul\":1776:1777   */\n      0x00\n        /* \"#utility.yul\":1773:1774   */\n      0x00\n        /* \"#utility.yul\":1766:1778   */\n      revert\n        /* \"#utility.yul\":1790:1907   */\n    tag_255:\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1913:2030   */\n    tag_256:\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      0x00\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":2053:2621   */\n    tag_257:\n        /* \"#utility.yul\":2126:2134   */\n      0x00\n        /* \"#utility.yul\":2136:2142   */\n      0x00\n        /* \"#utility.yul\":2186:2189   */\n      dup4\n        /* \"#utility.yul\":2179:2183   */\n      0x1f\n        /* \"#utility.yul\":2171:2177   */\n      dup5\n        /* \"#utility.yul\":2167:2184   */\n      add\n        /* \"#utility.yul\":2163:2190   */\n      slt\n        /* \"#utility.yul\":2153:2275   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2194:2273   */\n      tag_321\n      tag_254\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2153:2275   */\n    tag_320:\n        /* \"#utility.yul\":2307:2313   */\n      dup3\n        /* \"#utility.yul\":2294:2314   */\n      calldataload\n        /* \"#utility.yul\":2284:2314   */\n      swap1\n      pop\n        /* \"#utility.yul\":2337:2355   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2329:2335   */\n      dup2\n        /* \"#utility.yul\":2326:2356   */\n      gt\n        /* \"#utility.yul\":2323:2440   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2359:2438   */\n      tag_323\n      tag_255\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2323:2440   */\n    tag_322:\n        /* \"#utility.yul\":2473:2477   */\n      0x20\n        /* \"#utility.yul\":2465:2471   */\n      dup4\n        /* \"#utility.yul\":2461:2478   */\n      add\n        /* \"#utility.yul\":2449:2478   */\n      swap2\n      pop\n        /* \"#utility.yul\":2527:2530   */\n      dup4\n        /* \"#utility.yul\":2519:2523   */\n      0x20\n        /* \"#utility.yul\":2511:2517   */\n      dup3\n        /* \"#utility.yul\":2507:2524   */\n      mul\n        /* \"#utility.yul\":2497:2505   */\n      dup4\n        /* \"#utility.yul\":2493:2525   */\n      add\n        /* \"#utility.yul\":2490:2531   */\n      gt\n        /* \"#utility.yul\":2487:2615   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2534:2613   */\n      tag_325\n      tag_256\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2487:2615   */\n    tag_324:\n        /* \"#utility.yul\":2053:2621   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2627:2753   */\n    tag_258:\n        /* \"#utility.yul\":2664:2671   */\n      0x00\n        /* \"#utility.yul\":2704:2746   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2697:2702   */\n      dup3\n        /* \"#utility.yul\":2693:2747   */\n      and\n        /* \"#utility.yul\":2682:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2627:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2855   */\n    tag_259:\n        /* \"#utility.yul\":2796:2803   */\n      0x00\n        /* \"#utility.yul\":2825:2849   */\n      tag_328\n        /* \"#utility.yul\":2843:2848   */\n      dup3\n        /* \"#utility.yul\":2825:2849   */\n      tag_258\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2814:2849   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2983   */\n    tag_260:\n        /* \"#utility.yul\":2934:2958   */\n      tag_330\n        /* \"#utility.yul\":2952:2957   */\n      dup2\n        /* \"#utility.yul\":2934:2958   */\n      tag_259\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2924:2959   */\n      eq\n        /* \"#utility.yul\":2914:2977   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2970:2971   */\n      0x00\n        /* \"#utility.yul\":2963:2975   */\n      revert\n        /* \"#utility.yul\":2914:2977   */\n    tag_331:\n        /* \"#utility.yul\":2861:2983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2989:3128   */\n    tag_261:\n        /* \"#utility.yul\":3035:3040   */\n      0x00\n        /* \"#utility.yul\":3073:3079   */\n      dup2\n        /* \"#utility.yul\":3060:3080   */\n      calldataload\n        /* \"#utility.yul\":3051:3080   */\n      swap1\n      pop\n        /* \"#utility.yul\":3089:3122   */\n      tag_333\n        /* \"#utility.yul\":3116:3121   */\n      dup2\n        /* \"#utility.yul\":3089:3122   */\n      tag_260\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2989:3128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:4275   */\n    tag_16:\n        /* \"#utility.yul\":3256:3262   */\n      0x00\n        /* \"#utility.yul\":3264:3270   */\n      0x00\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3280:3286   */\n      0x00\n        /* \"#utility.yul\":3288:3294   */\n      0x00\n        /* \"#utility.yul\":3296:3302   */\n      0x00\n        /* \"#utility.yul\":3345:3348   */\n      0xa0\n        /* \"#utility.yul\":3333:3342   */\n      dup8\n        /* \"#utility.yul\":3324:3331   */\n      dup10\n        /* \"#utility.yul\":3320:3343   */\n      sub\n        /* \"#utility.yul\":3316:3349   */\n      slt\n        /* \"#utility.yul\":3313:3433   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3352:3431   */\n      tag_336\n      tag_248\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3313:3433   */\n    tag_335:\n        /* \"#utility.yul\":3472:3473   */\n      0x00\n        /* \"#utility.yul\":3497:3550   */\n      tag_337\n        /* \"#utility.yul\":3542:3549   */\n      dup10\n        /* \"#utility.yul\":3533:3539   */\n      dup3\n        /* \"#utility.yul\":3522:3531   */\n      dup11\n        /* \"#utility.yul\":3518:3540   */\n      add\n        /* \"#utility.yul\":3497:3550   */\n      tag_252\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3487:3550   */\n      swap7\n      pop\n        /* \"#utility.yul\":3443:3560   */\n      pop\n        /* \"#utility.yul\":3599:3601   */\n      0x20\n        /* \"#utility.yul\":3625:3678   */\n      tag_338\n        /* \"#utility.yul\":3670:3677   */\n      dup10\n        /* \"#utility.yul\":3661:3667   */\n      dup3\n        /* \"#utility.yul\":3650:3659   */\n      dup11\n        /* \"#utility.yul\":3646:3668   */\n      add\n        /* \"#utility.yul\":3625:3678   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3615:3678   */\n      swap6\n      pop\n        /* \"#utility.yul\":3570:3688   */\n      pop\n        /* \"#utility.yul\":3755:3757   */\n      0x40\n        /* \"#utility.yul\":3744:3753   */\n      dup8\n        /* \"#utility.yul\":3740:3758   */\n      add\n        /* \"#utility.yul\":3727:3759   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3778:3784   */\n      dup2\n        /* \"#utility.yul\":3775:3805   */\n      gt\n        /* \"#utility.yul\":3772:3889   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3808:3887   */\n      tag_340\n      tag_249\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3772:3889   */\n    tag_339:\n        /* \"#utility.yul\":3921:4001   */\n      tag_341\n        /* \"#utility.yul\":3993:4000   */\n      dup10\n        /* \"#utility.yul\":3984:3990   */\n      dup3\n        /* \"#utility.yul\":3973:3982   */\n      dup11\n        /* \"#utility.yul\":3969:3991   */\n      add\n        /* \"#utility.yul\":3921:4001   */\n      tag_257\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3903:4001   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3698:4011   */\n      pop\n        /* \"#utility.yul\":4050:4052   */\n      0x60\n        /* \"#utility.yul\":4076:4129   */\n      tag_342\n        /* \"#utility.yul\":4121:4128   */\n      dup10\n        /* \"#utility.yul\":4112:4118   */\n      dup3\n        /* \"#utility.yul\":4101:4110   */\n      dup11\n        /* \"#utility.yul\":4097:4119   */\n      add\n        /* \"#utility.yul\":4076:4129   */\n      tag_261\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4066:4129   */\n      swap3\n      pop\n        /* \"#utility.yul\":4021:4139   */\n      pop\n        /* \"#utility.yul\":4178:4181   */\n      0x80\n        /* \"#utility.yul\":4205:4258   */\n      tag_343\n        /* \"#utility.yul\":4250:4257   */\n      dup10\n        /* \"#utility.yul\":4241:4247   */\n      dup3\n        /* \"#utility.yul\":4230:4239   */\n      dup11\n        /* \"#utility.yul\":4226:4248   */\n      add\n        /* \"#utility.yul\":4205:4258   */\n      tag_252\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4195:4258   */\n      swap2\n      pop\n        /* \"#utility.yul\":4149:4268   */\n      pop\n        /* \"#utility.yul\":3134:4275   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4281:4395   */\n    tag_262:\n        /* \"#utility.yul\":4348:4354   */\n      0x00\n        /* \"#utility.yul\":4382:4387   */\n      dup2\n        /* \"#utility.yul\":4376:4388   */\n      mload\n        /* \"#utility.yul\":4366:4388   */\n      swap1\n      pop\n        /* \"#utility.yul\":4281:4395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4401:4585   */\n    tag_263:\n        /* \"#utility.yul\":4500:4511   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup3\n        /* \"#utility.yul\":4529:4532   */\n      dup3\n        /* \"#utility.yul\":4522:4541   */\n      mstore\n        /* \"#utility.yul\":4574:4578   */\n      0x20\n        /* \"#utility.yul\":4569:4572   */\n      dup3\n        /* \"#utility.yul\":4565:4579   */\n      add\n        /* \"#utility.yul\":4550:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4401:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4723   */\n    tag_264:\n        /* \"#utility.yul\":4658:4662   */\n      0x00\n        /* \"#utility.yul\":4681:4684   */\n      dup2\n        /* \"#utility.yul\":4673:4684   */\n      swap1\n      pop\n        /* \"#utility.yul\":4711:4715   */\n      0x20\n        /* \"#utility.yul\":4706:4709   */\n      dup3\n        /* \"#utility.yul\":4702:4716   */\n      add\n        /* \"#utility.yul\":4694:4716   */\n      swap1\n      pop\n        /* \"#utility.yul\":4591:4723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4729:4837   */\n    tag_265:\n        /* \"#utility.yul\":4806:4830   */\n      tag_348\n        /* \"#utility.yul\":4824:4829   */\n      dup2\n        /* \"#utility.yul\":4806:4830   */\n      tag_250\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4801:4804   */\n      dup3\n        /* \"#utility.yul\":4794:4831   */\n      mstore\n        /* \"#utility.yul\":4729:4837   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4843:5022   */\n    tag_266:\n        /* \"#utility.yul\":4912:4922   */\n      0x00\n        /* \"#utility.yul\":4933:4979   */\n      tag_350\n        /* \"#utility.yul\":4975:4978   */\n      dup4\n        /* \"#utility.yul\":4967:4973   */\n      dup4\n        /* \"#utility.yul\":4933:4979   */\n      tag_265\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5011:5015   */\n      0x20\n        /* \"#utility.yul\":5006:5009   */\n      dup4\n        /* \"#utility.yul\":5002:5016   */\n      add\n        /* \"#utility.yul\":4988:5016   */\n      swap1\n      pop\n        /* \"#utility.yul\":4843:5022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5028:5141   */\n    tag_267:\n        /* \"#utility.yul\":5098:5102   */\n      0x00\n        /* \"#utility.yul\":5130:5134   */\n      0x20\n        /* \"#utility.yul\":5125:5128   */\n      dup3\n        /* \"#utility.yul\":5121:5135   */\n      add\n        /* \"#utility.yul\":5113:5135   */\n      swap1\n      pop\n        /* \"#utility.yul\":5028:5141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5177:5909   */\n    tag_268:\n        /* \"#utility.yul\":5296:5299   */\n      0x00\n        /* \"#utility.yul\":5325:5379   */\n      tag_353\n        /* \"#utility.yul\":5373:5378   */\n      dup3\n        /* \"#utility.yul\":5325:5379   */\n      tag_262\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5395:5481   */\n      tag_354\n        /* \"#utility.yul\":5474:5480   */\n      dup2\n        /* \"#utility.yul\":5469:5472   */\n      dup6\n        /* \"#utility.yul\":5395:5481   */\n      tag_263\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5388:5481   */\n      swap4\n      pop\n        /* \"#utility.yul\":5505:5561   */\n      tag_355\n        /* \"#utility.yul\":5555:5560   */\n      dup4\n        /* \"#utility.yul\":5505:5561   */\n      tag_264\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5584:5591   */\n      dup1\n        /* \"#utility.yul\":5615:5616   */\n      0x00\n        /* \"#utility.yul\":5600:5884   */\n    tag_356:\n        /* \"#utility.yul\":5625:5631   */\n      dup4\n        /* \"#utility.yul\":5622:5623   */\n      dup2\n        /* \"#utility.yul\":5619:5632   */\n      lt\n        /* \"#utility.yul\":5600:5884   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5701:5707   */\n      dup2\n        /* \"#utility.yul\":5695:5708   */\n      mload\n        /* \"#utility.yul\":5728:5791   */\n      tag_359\n        /* \"#utility.yul\":5787:5790   */\n      dup9\n        /* \"#utility.yul\":5772:5785   */\n      dup3\n        /* \"#utility.yul\":5728:5791   */\n      tag_266\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5721:5791   */\n      swap8\n      pop\n        /* \"#utility.yul\":5814:5874   */\n      tag_360\n        /* \"#utility.yul\":5867:5873   */\n      dup4\n        /* \"#utility.yul\":5814:5874   */\n      tag_267\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5804:5874   */\n      swap3\n      pop\n        /* \"#utility.yul\":5660:5884   */\n      pop\n        /* \"#utility.yul\":5647:5648   */\n      0x01\n        /* \"#utility.yul\":5644:5645   */\n      dup2\n        /* \"#utility.yul\":5640:5649   */\n      add\n        /* \"#utility.yul\":5635:5649   */\n      swap1\n      pop\n        /* \"#utility.yul\":5600:5884   */\n      jump(tag_356)\n    tag_358:\n        /* \"#utility.yul\":5604:5618   */\n      pop\n        /* \"#utility.yul\":5900:5903   */\n      dup6\n        /* \"#utility.yul\":5893:5903   */\n      swap4\n      pop\n        /* \"#utility.yul\":5301:5909   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5177:5909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5915:6288   */\n    tag_19:\n        /* \"#utility.yul\":6058:6062   */\n      0x00\n        /* \"#utility.yul\":6096:6098   */\n      0x20\n        /* \"#utility.yul\":6085:6094   */\n      dup3\n        /* \"#utility.yul\":6081:6099   */\n      add\n        /* \"#utility.yul\":6073:6099   */\n      swap1\n      pop\n        /* \"#utility.yul\":6145:6154   */\n      dup2\n        /* \"#utility.yul\":6139:6143   */\n      dup2\n        /* \"#utility.yul\":6135:6155   */\n      sub\n        /* \"#utility.yul\":6131:6132   */\n      0x00\n        /* \"#utility.yul\":6120:6129   */\n      dup4\n        /* \"#utility.yul\":6116:6133   */\n      add\n        /* \"#utility.yul\":6109:6156   */\n      mstore\n        /* \"#utility.yul\":6173:6281   */\n      tag_362\n        /* \"#utility.yul\":6276:6280   */\n      dup2\n        /* \"#utility.yul\":6267:6273   */\n      dup5\n        /* \"#utility.yul\":6173:6281   */\n      tag_268\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6165:6281   */\n      swap1\n      pop\n        /* \"#utility.yul\":5915:6288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6294:6768   */\n    tag_22:\n        /* \"#utility.yul\":6362:6368   */\n      0x00\n        /* \"#utility.yul\":6370:6376   */\n      0x00\n        /* \"#utility.yul\":6419:6421   */\n      0x40\n        /* \"#utility.yul\":6407:6416   */\n      dup4\n        /* \"#utility.yul\":6398:6405   */\n      dup6\n        /* \"#utility.yul\":6394:6417   */\n      sub\n        /* \"#utility.yul\":6390:6422   */\n      slt\n        /* \"#utility.yul\":6387:6506   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":6425:6504   */\n      tag_365\n      tag_248\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6387:6506   */\n    tag_364:\n        /* \"#utility.yul\":6545:6546   */\n      0x00\n        /* \"#utility.yul\":6570:6623   */\n      tag_366\n        /* \"#utility.yul\":6615:6622   */\n      dup6\n        /* \"#utility.yul\":6606:6612   */\n      dup3\n        /* \"#utility.yul\":6595:6604   */\n      dup7\n        /* \"#utility.yul\":6591:6613   */\n      add\n        /* \"#utility.yul\":6570:6623   */\n      tag_261\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6560:6623   */\n      swap3\n      pop\n        /* \"#utility.yul\":6516:6633   */\n      pop\n        /* \"#utility.yul\":6672:6674   */\n      0x20\n        /* \"#utility.yul\":6698:6751   */\n      tag_367\n        /* \"#utility.yul\":6743:6750   */\n      dup6\n        /* \"#utility.yul\":6734:6740   */\n      dup3\n        /* \"#utility.yul\":6723:6732   */\n      dup7\n        /* \"#utility.yul\":6719:6741   */\n      add\n        /* \"#utility.yul\":6698:6751   */\n      tag_261\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6688:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6643:6761   */\n      pop\n        /* \"#utility.yul\":6294:6768   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6774:7977   */\n    tag_27:\n        /* \"#utility.yul\":6887:6893   */\n      0x00\n        /* \"#utility.yul\":6895:6901   */\n      0x00\n        /* \"#utility.yul\":6903:6909   */\n      0x00\n        /* \"#utility.yul\":6911:6917   */\n      0x00\n        /* \"#utility.yul\":6919:6925   */\n      0x00\n        /* \"#utility.yul\":6927:6933   */\n      0x00\n        /* \"#utility.yul\":6935:6941   */\n      0x00\n        /* \"#utility.yul\":6984:6987   */\n      0xe0\n        /* \"#utility.yul\":6972:6981   */\n      dup9\n        /* \"#utility.yul\":6963:6970   */\n      dup11\n        /* \"#utility.yul\":6959:6982   */\n      sub\n        /* \"#utility.yul\":6955:6988   */\n      slt\n        /* \"#utility.yul\":6952:7072   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6991:7070   */\n      tag_370\n      tag_248\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6952:7072   */\n    tag_369:\n        /* \"#utility.yul\":7111:7112   */\n      0x00\n        /* \"#utility.yul\":7136:7189   */\n      tag_371\n        /* \"#utility.yul\":7181:7188   */\n      dup11\n        /* \"#utility.yul\":7172:7178   */\n      dup3\n        /* \"#utility.yul\":7161:7170   */\n      dup12\n        /* \"#utility.yul\":7157:7179   */\n      add\n        /* \"#utility.yul\":7136:7189   */\n      tag_261\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7126:7189   */\n      swap8\n      pop\n        /* \"#utility.yul\":7082:7199   */\n      pop\n        /* \"#utility.yul\":7238:7240   */\n      0x20\n        /* \"#utility.yul\":7264:7317   */\n      tag_372\n        /* \"#utility.yul\":7309:7316   */\n      dup11\n        /* \"#utility.yul\":7300:7306   */\n      dup3\n        /* \"#utility.yul\":7289:7298   */\n      dup12\n        /* \"#utility.yul\":7285:7307   */\n      add\n        /* \"#utility.yul\":7264:7317   */\n      tag_261\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7254:7317   */\n      swap7\n      pop\n        /* \"#utility.yul\":7209:7327   */\n      pop\n        /* \"#utility.yul\":7366:7368   */\n      0x40\n        /* \"#utility.yul\":7392:7445   */\n      tag_373\n        /* \"#utility.yul\":7437:7444   */\n      dup11\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup12\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_252\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7382:7445   */\n      swap6\n      pop\n        /* \"#utility.yul\":7337:7455   */\n      pop\n        /* \"#utility.yul\":7494:7496   */\n      0x60\n        /* \"#utility.yul\":7520:7573   */\n      tag_374\n        /* \"#utility.yul\":7565:7572   */\n      dup11\n        /* \"#utility.yul\":7556:7562   */\n      dup3\n        /* \"#utility.yul\":7545:7554   */\n      dup12\n        /* \"#utility.yul\":7541:7563   */\n      add\n        /* \"#utility.yul\":7520:7573   */\n      tag_252\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7510:7573   */\n      swap5\n      pop\n        /* \"#utility.yul\":7465:7583   */\n      pop\n        /* \"#utility.yul\":7622:7625   */\n      0x80\n        /* \"#utility.yul\":7649:7702   */\n      tag_375\n        /* \"#utility.yul\":7694:7701   */\n      dup11\n        /* \"#utility.yul\":7685:7691   */\n      dup3\n        /* \"#utility.yul\":7674:7683   */\n      dup12\n        /* \"#utility.yul\":7670:7692   */\n      add\n        /* \"#utility.yul\":7649:7702   */\n      tag_252\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7639:7702   */\n      swap4\n      pop\n        /* \"#utility.yul\":7593:7712   */\n      pop\n        /* \"#utility.yul\":7751:7754   */\n      0xa0\n        /* \"#utility.yul\":7778:7831   */\n      tag_376\n        /* \"#utility.yul\":7823:7830   */\n      dup11\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7803:7812   */\n      dup12\n        /* \"#utility.yul\":7799:7821   */\n      add\n        /* \"#utility.yul\":7778:7831   */\n      tag_261\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7768:7831   */\n      swap3\n      pop\n        /* \"#utility.yul\":7722:7841   */\n      pop\n        /* \"#utility.yul\":7880:7883   */\n      0xc0\n        /* \"#utility.yul\":7907:7960   */\n      tag_377\n        /* \"#utility.yul\":7952:7959   */\n      dup11\n        /* \"#utility.yul\":7943:7949   */\n      dup3\n        /* \"#utility.yul\":7932:7941   */\n      dup12\n        /* \"#utility.yul\":7928:7950   */\n      add\n        /* \"#utility.yul\":7907:7960   */\n      tag_252\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7897:7960   */\n      swap2\n      pop\n        /* \"#utility.yul\":7851:7970   */\n      pop\n        /* \"#utility.yul\":6774:7977   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7983:8315   */\n    tag_30:\n        /* \"#utility.yul\":8104:8108   */\n      0x00\n        /* \"#utility.yul\":8142:8144   */\n      0x40\n        /* \"#utility.yul\":8131:8140   */\n      dup3\n        /* \"#utility.yul\":8127:8145   */\n      add\n        /* \"#utility.yul\":8119:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8226   */\n      tag_379\n        /* \"#utility.yul\":8223:8224   */\n      0x00\n        /* \"#utility.yul\":8212:8221   */\n      dup4\n        /* \"#utility.yul\":8208:8225   */\n      add\n        /* \"#utility.yul\":8199:8205   */\n      dup6\n        /* \"#utility.yul\":8155:8226   */\n      tag_253\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8236:8308   */\n      tag_380\n        /* \"#utility.yul\":8304:8306   */\n      0x20\n        /* \"#utility.yul\":8293:8302   */\n      dup4\n        /* \"#utility.yul\":8289:8307   */\n      add\n        /* \"#utility.yul\":8280:8286   */\n      dup5\n        /* \"#utility.yul\":8236:8308   */\n      tag_253\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7983:8315   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:9670   */\n    tag_33:\n        /* \"#utility.yul\":8443:8449   */\n      0x00\n        /* \"#utility.yul\":8451:8457   */\n      0x00\n        /* \"#utility.yul\":8459:8465   */\n      0x00\n        /* \"#utility.yul\":8467:8473   */\n      0x00\n        /* \"#utility.yul\":8475:8481   */\n      0x00\n        /* \"#utility.yul\":8483:8489   */\n      0x00\n        /* \"#utility.yul\":8491:8497   */\n      0x00\n        /* \"#utility.yul\":8499:8505   */\n      0x00\n        /* \"#utility.yul\":8548:8551   */\n      0x0100\n        /* \"#utility.yul\":8536:8545   */\n      dup10\n        /* \"#utility.yul\":8527:8534   */\n      dup12\n        /* \"#utility.yul\":8523:8546   */\n      sub\n        /* \"#utility.yul\":8519:8552   */\n      slt\n        /* \"#utility.yul\":8516:8636   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8555:8634   */\n      tag_383\n      tag_248\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8516:8636   */\n    tag_382:\n        /* \"#utility.yul\":8675:8676   */\n      0x00\n        /* \"#utility.yul\":8700:8753   */\n      tag_384\n        /* \"#utility.yul\":8745:8752   */\n      dup12\n        /* \"#utility.yul\":8736:8742   */\n      dup3\n        /* \"#utility.yul\":8725:8734   */\n      dup13\n        /* \"#utility.yul\":8721:8743   */\n      add\n        /* \"#utility.yul\":8700:8753   */\n      tag_261\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8690:8753   */\n      swap9\n      pop\n        /* \"#utility.yul\":8646:8763   */\n      pop\n        /* \"#utility.yul\":8802:8804   */\n      0x20\n        /* \"#utility.yul\":8828:8881   */\n      tag_385\n        /* \"#utility.yul\":8873:8880   */\n      dup12\n        /* \"#utility.yul\":8864:8870   */\n      dup3\n        /* \"#utility.yul\":8853:8862   */\n      dup13\n        /* \"#utility.yul\":8849:8871   */\n      add\n        /* \"#utility.yul\":8828:8881   */\n      tag_261\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8818:8881   */\n      swap8\n      pop\n        /* \"#utility.yul\":8773:8891   */\n      pop\n        /* \"#utility.yul\":8930:8932   */\n      0x40\n        /* \"#utility.yul\":8956:9009   */\n      tag_386\n        /* \"#utility.yul\":9001:9008   */\n      dup12\n        /* \"#utility.yul\":8992:8998   */\n      dup3\n        /* \"#utility.yul\":8981:8990   */\n      dup13\n        /* \"#utility.yul\":8977:8999   */\n      add\n        /* \"#utility.yul\":8956:9009   */\n      tag_252\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8946:9009   */\n      swap7\n      pop\n        /* \"#utility.yul\":8901:9019   */\n      pop\n        /* \"#utility.yul\":9058:9060   */\n      0x60\n        /* \"#utility.yul\":9084:9137   */\n      tag_387\n        /* \"#utility.yul\":9129:9136   */\n      dup12\n        /* \"#utility.yul\":9120:9126   */\n      dup3\n        /* \"#utility.yul\":9109:9118   */\n      dup13\n        /* \"#utility.yul\":9105:9127   */\n      add\n        /* \"#utility.yul\":9084:9137   */\n      tag_252\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9074:9137   */\n      swap6\n      pop\n        /* \"#utility.yul\":9029:9147   */\n      pop\n        /* \"#utility.yul\":9186:9189   */\n      0x80\n        /* \"#utility.yul\":9213:9266   */\n      tag_388\n        /* \"#utility.yul\":9258:9265   */\n      dup12\n        /* \"#utility.yul\":9249:9255   */\n      dup3\n        /* \"#utility.yul\":9238:9247   */\n      dup13\n        /* \"#utility.yul\":9234:9256   */\n      add\n        /* \"#utility.yul\":9213:9266   */\n      tag_252\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9203:9266   */\n      swap5\n      pop\n        /* \"#utility.yul\":9157:9276   */\n      pop\n        /* \"#utility.yul\":9315:9318   */\n      0xa0\n        /* \"#utility.yul\":9342:9395   */\n      tag_389\n        /* \"#utility.yul\":9387:9394   */\n      dup12\n        /* \"#utility.yul\":9378:9384   */\n      dup3\n        /* \"#utility.yul\":9367:9376   */\n      dup13\n        /* \"#utility.yul\":9363:9385   */\n      add\n        /* \"#utility.yul\":9342:9395   */\n      tag_252\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9332:9395   */\n      swap4\n      pop\n        /* \"#utility.yul\":9286:9405   */\n      pop\n        /* \"#utility.yul\":9444:9447   */\n      0xc0\n        /* \"#utility.yul\":9471:9524   */\n      tag_390\n        /* \"#utility.yul\":9516:9523   */\n      dup12\n        /* \"#utility.yul\":9507:9513   */\n      dup3\n        /* \"#utility.yul\":9496:9505   */\n      dup13\n        /* \"#utility.yul\":9492:9514   */\n      add\n        /* \"#utility.yul\":9471:9524   */\n      tag_261\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9461:9524   */\n      swap3\n      pop\n        /* \"#utility.yul\":9415:9534   */\n      pop\n        /* \"#utility.yul\":9573:9576   */\n      0xe0\n        /* \"#utility.yul\":9600:9653   */\n      tag_391\n        /* \"#utility.yul\":9645:9652   */\n      dup12\n        /* \"#utility.yul\":9636:9642   */\n      dup3\n        /* \"#utility.yul\":9625:9634   */\n      dup13\n        /* \"#utility.yul\":9621:9643   */\n      add\n        /* \"#utility.yul\":9600:9653   */\n      tag_252\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9590:9653   */\n      swap2\n      pop\n        /* \"#utility.yul\":9544:9663   */\n      pop\n        /* \"#utility.yul\":8321:9670   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9676:10118   */\n    tag_36:\n        /* \"#utility.yul\":9825:9829   */\n      0x00\n        /* \"#utility.yul\":9863:9865   */\n      0x60\n        /* \"#utility.yul\":9852:9861   */\n      dup3\n        /* \"#utility.yul\":9848:9866   */\n      add\n        /* \"#utility.yul\":9840:9866   */\n      swap1\n      pop\n        /* \"#utility.yul\":9876:9947   */\n      tag_393\n        /* \"#utility.yul\":9944:9945   */\n      0x00\n        /* \"#utility.yul\":9933:9942   */\n      dup4\n        /* \"#utility.yul\":9929:9946   */\n      add\n        /* \"#utility.yul\":9920:9926   */\n      dup7\n        /* \"#utility.yul\":9876:9947   */\n      tag_253\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9957:10029   */\n      tag_394\n        /* \"#utility.yul\":10025:10027   */\n      0x20\n        /* \"#utility.yul\":10014:10023   */\n      dup4\n        /* \"#utility.yul\":10010:10028   */\n      add\n        /* \"#utility.yul\":10001:10007   */\n      dup6\n        /* \"#utility.yul\":9957:10029   */\n      tag_253\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10039:10111   */\n      tag_395\n        /* \"#utility.yul\":10107:10109   */\n      0x40\n        /* \"#utility.yul\":10096:10105   */\n      dup4\n        /* \"#utility.yul\":10092:10110   */\n      add\n        /* \"#utility.yul\":10083:10089   */\n      dup5\n        /* \"#utility.yul\":10039:10111   */\n      tag_253\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9676:10118   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10124:10293   */\n    tag_269:\n        /* \"#utility.yul\":10208:10219   */\n      0x00\n        /* \"#utility.yul\":10242:10248   */\n      dup3\n        /* \"#utility.yul\":10237:10240   */\n      dup3\n        /* \"#utility.yul\":10230:10249   */\n      mstore\n        /* \"#utility.yul\":10282:10286   */\n      0x20\n        /* \"#utility.yul\":10277:10280   */\n      dup3\n        /* \"#utility.yul\":10273:10287   */\n      add\n        /* \"#utility.yul\":10258:10287   */\n      swap1\n      pop\n        /* \"#utility.yul\":10124:10293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10299:10467   */\n    tag_270:\n        /* \"#utility.yul\":10439:10459   */\n      0x496e73756666696369656e7420696e7075740000000000000000000000000000\n        /* \"#utility.yul\":10435:10436   */\n      0x00\n        /* \"#utility.yul\":10427:10433   */\n      dup3\n        /* \"#utility.yul\":10423:10437   */\n      add\n        /* \"#utility.yul\":10416:10460   */\n      mstore\n        /* \"#utility.yul\":10299:10467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10473:10839   */\n    tag_271:\n        /* \"#utility.yul\":10615:10618   */\n      0x00\n        /* \"#utility.yul\":10636:10703   */\n      tag_399\n        /* \"#utility.yul\":10700:10702   */\n      0x12\n        /* \"#utility.yul\":10695:10698   */\n      dup4\n        /* \"#utility.yul\":10636:10703   */\n      tag_269\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10629:10703   */\n      swap2\n      pop\n        /* \"#utility.yul\":10712:10805   */\n      tag_400\n        /* \"#utility.yul\":10801:10804   */\n      dup3\n        /* \"#utility.yul\":10712:10805   */\n      tag_270\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10830:10832   */\n      0x20\n        /* \"#utility.yul\":10825:10828   */\n      dup3\n        /* \"#utility.yul\":10821:10833   */\n      add\n        /* \"#utility.yul\":10814:10833   */\n      swap1\n      pop\n        /* \"#utility.yul\":10473:10839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10845:11264   */\n    tag_40:\n        /* \"#utility.yul\":11011:11015   */\n      0x00\n        /* \"#utility.yul\":11049:11051   */\n      0x20\n        /* \"#utility.yul\":11038:11047   */\n      dup3\n        /* \"#utility.yul\":11034:11052   */\n      add\n        /* \"#utility.yul\":11026:11052   */\n      swap1\n      pop\n        /* \"#utility.yul\":11098:11107   */\n      dup2\n        /* \"#utility.yul\":11092:11096   */\n      dup2\n        /* \"#utility.yul\":11088:11108   */\n      sub\n        /* \"#utility.yul\":11084:11085   */\n      0x00\n        /* \"#utility.yul\":11073:11082   */\n      dup4\n        /* \"#utility.yul\":11069:11086   */\n      add\n        /* \"#utility.yul\":11062:11109   */\n      mstore\n        /* \"#utility.yul\":11126:11257   */\n      tag_402\n        /* \"#utility.yul\":11252:11256   */\n      dup2\n        /* \"#utility.yul\":11126:11257   */\n      tag_271\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":11118:11257   */\n      swap1\n      pop\n        /* \"#utility.yul\":10845:11264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11270:11442   */\n    tag_272:\n        /* \"#utility.yul\":11410:11434   */\n      0x496e73756666696369656e74206c697175696469747900000000000000000000\n        /* \"#utility.yul\":11406:11407   */\n      0x00\n        /* \"#utility.yul\":11398:11404   */\n      dup3\n        /* \"#utility.yul\":11394:11408   */\n      add\n        /* \"#utility.yul\":11387:11435   */\n      mstore\n        /* \"#utility.yul\":11270:11442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11448:11814   */\n    tag_273:\n        /* \"#utility.yul\":11590:11593   */\n      0x00\n        /* \"#utility.yul\":11611:11678   */\n      tag_405\n        /* \"#utility.yul\":11675:11677   */\n      0x16\n        /* \"#utility.yul\":11670:11673   */\n      dup4\n        /* \"#utility.yul\":11611:11678   */\n      tag_269\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11604:11678   */\n      swap2\n      pop\n        /* \"#utility.yul\":11687:11780   */\n      tag_406\n        /* \"#utility.yul\":11776:11779   */\n      dup3\n        /* \"#utility.yul\":11687:11780   */\n      tag_272\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11805:11807   */\n      0x20\n        /* \"#utility.yul\":11800:11803   */\n      dup3\n        /* \"#utility.yul\":11796:11808   */\n      add\n        /* \"#utility.yul\":11789:11808   */\n      swap1\n      pop\n        /* \"#utility.yul\":11448:11814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11820:12239   */\n    tag_44:\n        /* \"#utility.yul\":11986:11990   */\n      0x00\n        /* \"#utility.yul\":12024:12026   */\n      0x20\n        /* \"#utility.yul\":12013:12022   */\n      dup3\n        /* \"#utility.yul\":12009:12027   */\n      add\n        /* \"#utility.yul\":12001:12027   */\n      swap1\n      pop\n        /* \"#utility.yul\":12073:12082   */\n      dup2\n        /* \"#utility.yul\":12067:12071   */\n      dup2\n        /* \"#utility.yul\":12063:12083   */\n      sub\n        /* \"#utility.yul\":12059:12060   */\n      0x00\n        /* \"#utility.yul\":12048:12057   */\n      dup4\n        /* \"#utility.yul\":12044:12061   */\n      add\n        /* \"#utility.yul\":12037:12084   */\n      mstore\n        /* \"#utility.yul\":12101:12232   */\n      tag_408\n        /* \"#utility.yul\":12227:12231   */\n      dup2\n        /* \"#utility.yul\":12101:12232   */\n      tag_273\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12093:12232   */\n      swap1\n      pop\n        /* \"#utility.yul\":11820:12239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12425   */\n    tag_274:\n        /* \"#utility.yul\":12293:12370   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12290:12291   */\n      0x00\n        /* \"#utility.yul\":12283:12371   */\n      mstore\n        /* \"#utility.yul\":12390:12394   */\n      0x11\n        /* \"#utility.yul\":12387:12388   */\n      0x04\n        /* \"#utility.yul\":12380:12395   */\n      mstore\n        /* \"#utility.yul\":12414:12418   */\n      0x24\n        /* \"#utility.yul\":12411:12412   */\n      0x00\n        /* \"#utility.yul\":12404:12419   */\n      revert\n        /* \"#utility.yul\":12431:12841   */\n    tag_46:\n        /* \"#utility.yul\":12471:12478   */\n      0x00\n        /* \"#utility.yul\":12494:12514   */\n      tag_411\n        /* \"#utility.yul\":12512:12513   */\n      dup3\n        /* \"#utility.yul\":12494:12514   */\n      tag_250\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12489:12514   */\n      swap2\n      pop\n        /* \"#utility.yul\":12528:12548   */\n      tag_412\n        /* \"#utility.yul\":12546:12547   */\n      dup4\n        /* \"#utility.yul\":12528:12548   */\n      tag_250\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12523:12548   */\n      swap3\n      pop\n        /* \"#utility.yul\":12583:12584   */\n      dup3\n        /* \"#utility.yul\":12580:12581   */\n      dup3\n        /* \"#utility.yul\":12576:12585   */\n      mul\n        /* \"#utility.yul\":12605:12635   */\n      tag_413\n        /* \"#utility.yul\":12623:12634   */\n      dup2\n        /* \"#utility.yul\":12605:12635   */\n      tag_250\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12594:12635   */\n      swap2\n      pop\n        /* \"#utility.yul\":12784:12785   */\n      dup3\n        /* \"#utility.yul\":12775:12782   */\n      dup3\n        /* \"#utility.yul\":12771:12786   */\n      div\n        /* \"#utility.yul\":12768:12769   */\n      dup5\n        /* \"#utility.yul\":12765:12787   */\n      eq\n        /* \"#utility.yul\":12745:12746   */\n      dup4\n        /* \"#utility.yul\":12738:12747   */\n      iszero\n        /* \"#utility.yul\":12718:12801   */\n      or\n        /* \"#utility.yul\":12695:12834   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":12814:12832   */\n      tag_415\n      tag_274\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12695:12834   */\n    tag_414:\n        /* \"#utility.yul\":12479:12841   */\n      pop\n        /* \"#utility.yul\":12431:12841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12847:13038   */\n    tag_50:\n        /* \"#utility.yul\":12887:12890   */\n      0x00\n        /* \"#utility.yul\":12906:12926   */\n      tag_417\n        /* \"#utility.yul\":12924:12925   */\n      dup3\n        /* \"#utility.yul\":12906:12926   */\n      tag_250\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12901:12926   */\n      swap2\n      pop\n        /* \"#utility.yul\":12940:12960   */\n      tag_418\n        /* \"#utility.yul\":12958:12959   */\n      dup4\n        /* \"#utility.yul\":12940:12960   */\n      tag_250\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12935:12960   */\n      swap3\n      pop\n        /* \"#utility.yul\":12983:12984   */\n      dup3\n        /* \"#utility.yul\":12980:12981   */\n      dup3\n        /* \"#utility.yul\":12976:12985   */\n      add\n        /* \"#utility.yul\":12969:12985   */\n      swap1\n      pop\n        /* \"#utility.yul\":13004:13007   */\n      dup1\n        /* \"#utility.yul\":13001:13002   */\n      dup3\n        /* \"#utility.yul\":12998:13008   */\n      gt\n        /* \"#utility.yul\":12995:13031   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":13011:13029   */\n      tag_420\n      tag_274\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12995:13031   */\n    tag_419:\n        /* \"#utility.yul\":12847:13038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13044:13224   */\n    tag_226:\n        /* \"#utility.yul\":13092:13169   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13089:13090   */\n      0x00\n        /* \"#utility.yul\":13082:13170   */\n      mstore\n        /* \"#utility.yul\":13189:13193   */\n      0x12\n        /* \"#utility.yul\":13186:13187   */\n      0x04\n        /* \"#utility.yul\":13179:13194   */\n      mstore\n        /* \"#utility.yul\":13213:13217   */\n      0x24\n        /* \"#utility.yul\":13210:13211   */\n      0x00\n        /* \"#utility.yul\":13203:13218   */\n      revert\n        /* \"#utility.yul\":13230:13415   */\n    tag_52:\n        /* \"#utility.yul\":13270:13271   */\n      0x00\n        /* \"#utility.yul\":13287:13307   */\n      tag_423\n        /* \"#utility.yul\":13305:13306   */\n      dup3\n        /* \"#utility.yul\":13287:13307   */\n      tag_250\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13282:13307   */\n      swap2\n      pop\n        /* \"#utility.yul\":13321:13341   */\n      tag_424\n        /* \"#utility.yul\":13339:13340   */\n      dup4\n        /* \"#utility.yul\":13321:13341   */\n      tag_250\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13316:13341   */\n      swap3\n      pop\n        /* \"#utility.yul\":13360:13361   */\n      dup3\n        /* \"#utility.yul\":13350:13385   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":13365:13383   */\n      tag_426\n      tag_226\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13350:13385   */\n    tag_425:\n        /* \"#utility.yul\":13407:13408   */\n      dup3\n        /* \"#utility.yul\":13404:13405   */\n      dup3\n        /* \"#utility.yul\":13400:13409   */\n      div\n        /* \"#utility.yul\":13395:13409   */\n      swap1\n      pop\n        /* \"#utility.yul\":13230:13415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13421:13590   */\n    tag_275:\n        /* \"#utility.yul\":13561:13582   */\n      0x5472616e73616374696f6e206578706972656400000000000000000000000000\n        /* \"#utility.yul\":13557:13558   */\n      0x00\n        /* \"#utility.yul\":13549:13555   */\n      dup3\n        /* \"#utility.yul\":13545:13559   */\n      add\n        /* \"#utility.yul\":13538:13583   */\n      mstore\n        /* \"#utility.yul\":13421:13590   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13596:13962   */\n    tag_276:\n        /* \"#utility.yul\":13738:13741   */\n      0x00\n        /* \"#utility.yul\":13759:13826   */\n      tag_429\n        /* \"#utility.yul\":13823:13825   */\n      0x13\n        /* \"#utility.yul\":13818:13821   */\n      dup4\n        /* \"#utility.yul\":13759:13826   */\n      tag_269\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13752:13826   */\n      swap2\n      pop\n        /* \"#utility.yul\":13835:13928   */\n      tag_430\n        /* \"#utility.yul\":13924:13927   */\n      dup3\n        /* \"#utility.yul\":13835:13928   */\n      tag_275\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13953:13955   */\n      0x20\n        /* \"#utility.yul\":13948:13951   */\n      dup3\n        /* \"#utility.yul\":13944:13956   */\n      add\n        /* \"#utility.yul\":13937:13956   */\n      swap1\n      pop\n        /* \"#utility.yul\":13596:13962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13968:14387   */\n    tag_56:\n        /* \"#utility.yul\":14134:14138   */\n      0x00\n        /* \"#utility.yul\":14172:14174   */\n      0x20\n        /* \"#utility.yul\":14161:14170   */\n      dup3\n        /* \"#utility.yul\":14157:14175   */\n      add\n        /* \"#utility.yul\":14149:14175   */\n      swap1\n      pop\n        /* \"#utility.yul\":14221:14230   */\n      dup2\n        /* \"#utility.yul\":14215:14219   */\n      dup2\n        /* \"#utility.yul\":14211:14231   */\n      sub\n        /* \"#utility.yul\":14207:14208   */\n      0x00\n        /* \"#utility.yul\":14196:14205   */\n      dup4\n        /* \"#utility.yul\":14192:14209   */\n      add\n        /* \"#utility.yul\":14185:14232   */\n      mstore\n        /* \"#utility.yul\":14249:14380   */\n      tag_432\n        /* \"#utility.yul\":14375:14379   */\n      dup2\n        /* \"#utility.yul\":14249:14380   */\n      tag_276\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14241:14380   */\n      swap1\n      pop\n        /* \"#utility.yul\":13968:14387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14393:14555   */\n    tag_277:\n        /* \"#utility.yul\":14533:14547   */\n      0x4f6e6c7920322d746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":14529:14530   */\n      0x00\n        /* \"#utility.yul\":14521:14527   */\n      dup3\n        /* \"#utility.yul\":14517:14531   */\n      add\n        /* \"#utility.yul\":14510:14548   */\n      mstore\n        /* \"#utility.yul\":14393:14555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14561:14927   */\n    tag_278:\n        /* \"#utility.yul\":14703:14706   */\n      0x00\n        /* \"#utility.yul\":14724:14791   */\n      tag_435\n        /* \"#utility.yul\":14788:14790   */\n      0x0c\n        /* \"#utility.yul\":14783:14786   */\n      dup4\n        /* \"#utility.yul\":14724:14791   */\n      tag_269\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14717:14791   */\n      swap2\n      pop\n        /* \"#utility.yul\":14800:14893   */\n      tag_436\n        /* \"#utility.yul\":14889:14892   */\n      dup3\n        /* \"#utility.yul\":14800:14893   */\n      tag_277\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14918:14920   */\n      0x20\n        /* \"#utility.yul\":14913:14916   */\n      dup3\n        /* \"#utility.yul\":14909:14921   */\n      add\n        /* \"#utility.yul\":14902:14921   */\n      swap1\n      pop\n        /* \"#utility.yul\":14561:14927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14933:15352   */\n    tag_60:\n        /* \"#utility.yul\":15099:15103   */\n      0x00\n        /* \"#utility.yul\":15137:15139   */\n      0x20\n        /* \"#utility.yul\":15126:15135   */\n      dup3\n        /* \"#utility.yul\":15122:15140   */\n      add\n        /* \"#utility.yul\":15114:15140   */\n      swap1\n      pop\n        /* \"#utility.yul\":15186:15195   */\n      dup2\n        /* \"#utility.yul\":15180:15184   */\n      dup2\n        /* \"#utility.yul\":15176:15196   */\n      sub\n        /* \"#utility.yul\":15172:15173   */\n      0x00\n        /* \"#utility.yul\":15161:15170   */\n      dup4\n        /* \"#utility.yul\":15157:15174   */\n      add\n        /* \"#utility.yul\":15150:15197   */\n      mstore\n        /* \"#utility.yul\":15214:15345   */\n      tag_438\n        /* \"#utility.yul\":15340:15344   */\n      dup2\n        /* \"#utility.yul\":15214:15345   */\n      tag_278\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15206:15345   */\n      swap1\n      pop\n        /* \"#utility.yul\":14933:15352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15358:15538   */\n    tag_63:\n        /* \"#utility.yul\":15406:15483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15403:15404   */\n      0x00\n        /* \"#utility.yul\":15396:15484   */\n      mstore\n        /* \"#utility.yul\":15503:15507   */\n      0x32\n        /* \"#utility.yul\":15500:15501   */\n      0x04\n        /* \"#utility.yul\":15493:15508   */\n      mstore\n        /* \"#utility.yul\":15527:15531   */\n      0x24\n        /* \"#utility.yul\":15524:15525   */\n      0x00\n        /* \"#utility.yul\":15517:15532   */\n      revert\n        /* \"#utility.yul\":15544:15873   */\n    tag_65:\n        /* \"#utility.yul\":15603:15609   */\n      0x00\n        /* \"#utility.yul\":15652:15654   */\n      0x20\n        /* \"#utility.yul\":15640:15649   */\n      dup3\n        /* \"#utility.yul\":15631:15638   */\n      dup5\n        /* \"#utility.yul\":15627:15650   */\n      sub\n        /* \"#utility.yul\":15623:15655   */\n      slt\n        /* \"#utility.yul\":15620:15739   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":15658:15737   */\n      tag_442\n      tag_248\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15620:15739   */\n    tag_441:\n        /* \"#utility.yul\":15778:15779   */\n      0x00\n        /* \"#utility.yul\":15803:15856   */\n      tag_443\n        /* \"#utility.yul\":15848:15855   */\n      dup5\n        /* \"#utility.yul\":15839:15845   */\n      dup3\n        /* \"#utility.yul\":15828:15837   */\n      dup6\n        /* \"#utility.yul\":15824:15846   */\n      add\n        /* \"#utility.yul\":15803:15856   */\n      tag_261\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15793:15856   */\n      swap2\n      pop\n        /* \"#utility.yul\":15749:15866   */\n      pop\n        /* \"#utility.yul\":15544:15873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15879:16048   */\n    tag_279:\n        /* \"#utility.yul\":16019:16040   */\n      0x496e73756666696369656e74206f757470757400000000000000000000000000\n        /* \"#utility.yul\":16015:16016   */\n      0x00\n        /* \"#utility.yul\":16007:16013   */\n      dup3\n        /* \"#utility.yul\":16003:16017   */\n      add\n        /* \"#utility.yul\":15996:16041   */\n      mstore\n        /* \"#utility.yul\":15879:16048   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16054:16420   */\n    tag_280:\n        /* \"#utility.yul\":16196:16199   */\n      0x00\n        /* \"#utility.yul\":16217:16284   */\n      tag_446\n        /* \"#utility.yul\":16281:16283   */\n      0x13\n        /* \"#utility.yul\":16276:16279   */\n      dup4\n        /* \"#utility.yul\":16217:16284   */\n      tag_269\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16210:16284   */\n      swap2\n      pop\n        /* \"#utility.yul\":16293:16386   */\n      tag_447\n        /* \"#utility.yul\":16382:16385   */\n      dup3\n        /* \"#utility.yul\":16293:16386   */\n      tag_279\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16411:16413   */\n      0x20\n        /* \"#utility.yul\":16406:16409   */\n      dup3\n        /* \"#utility.yul\":16402:16414   */\n      add\n        /* \"#utility.yul\":16395:16414   */\n      swap1\n      pop\n        /* \"#utility.yul\":16054:16420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16426:16845   */\n    tag_78:\n        /* \"#utility.yul\":16592:16596   */\n      0x00\n        /* \"#utility.yul\":16630:16632   */\n      0x20\n        /* \"#utility.yul\":16619:16628   */\n      dup3\n        /* \"#utility.yul\":16615:16633   */\n      add\n        /* \"#utility.yul\":16607:16633   */\n      swap1\n      pop\n        /* \"#utility.yul\":16679:16688   */\n      dup2\n        /* \"#utility.yul\":16673:16677   */\n      dup2\n        /* \"#utility.yul\":16669:16689   */\n      sub\n        /* \"#utility.yul\":16665:16666   */\n      0x00\n        /* \"#utility.yul\":16654:16663   */\n      dup4\n        /* \"#utility.yul\":16650:16667   */\n      add\n        /* \"#utility.yul\":16643:16690   */\n      mstore\n        /* \"#utility.yul\":16707:16838   */\n      tag_449\n        /* \"#utility.yul\":16833:16837   */\n      dup2\n        /* \"#utility.yul\":16707:16838   */\n      tag_280\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16699:16838   */\n      swap1\n      pop\n        /* \"#utility.yul\":16426:16845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16851:17045   */\n    tag_82:\n        /* \"#utility.yul\":16891:16895   */\n      0x00\n        /* \"#utility.yul\":16911:16931   */\n      tag_451\n        /* \"#utility.yul\":16929:16930   */\n      dup3\n        /* \"#utility.yul\":16911:16931   */\n      tag_250\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16906:16931   */\n      swap2\n      pop\n        /* \"#utility.yul\":16945:16965   */\n      tag_452\n        /* \"#utility.yul\":16963:16964   */\n      dup4\n        /* \"#utility.yul\":16945:16965   */\n      tag_250\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16940:16965   */\n      swap3\n      pop\n        /* \"#utility.yul\":16989:16990   */\n      dup3\n        /* \"#utility.yul\":16986:16987   */\n      dup3\n        /* \"#utility.yul\":16982:16991   */\n      sub\n        /* \"#utility.yul\":16974:16991   */\n      swap1\n      pop\n        /* \"#utility.yul\":17013:17014   */\n      dup2\n        /* \"#utility.yul\":17007:17011   */\n      dup2\n        /* \"#utility.yul\":17004:17015   */\n      gt\n        /* \"#utility.yul\":17001:17038   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":17018:17036   */\n      tag_454\n      tag_274\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17001:17038   */\n    tag_453:\n        /* \"#utility.yul\":16851:17045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17051:17231   */\n    tag_90:\n        /* \"#utility.yul\":17099:17176   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17096:17097   */\n      0x00\n        /* \"#utility.yul\":17089:17177   */\n      mstore\n        /* \"#utility.yul\":17196:17200   */\n      0x41\n        /* \"#utility.yul\":17193:17194   */\n      0x04\n        /* \"#utility.yul\":17186:17201   */\n      mstore\n        /* \"#utility.yul\":17220:17224   */\n      0x24\n        /* \"#utility.yul\":17217:17218   */\n      0x00\n        /* \"#utility.yul\":17210:17225   */\n      revert\n        /* \"#utility.yul\":17237:17355   */\n    tag_281:\n        /* \"#utility.yul\":17324:17348   */\n      tag_457\n        /* \"#utility.yul\":17342:17347   */\n      dup2\n        /* \"#utility.yul\":17324:17348   */\n      tag_259\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17319:17322   */\n      dup3\n        /* \"#utility.yul\":17312:17349   */\n      mstore\n        /* \"#utility.yul\":17237:17355   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17361:17914   */\n    tag_101:\n        /* \"#utility.yul\":17538:17542   */\n      0x00\n        /* \"#utility.yul\":17576:17579   */\n      0x80\n        /* \"#utility.yul\":17565:17574   */\n      dup3\n        /* \"#utility.yul\":17561:17580   */\n      add\n        /* \"#utility.yul\":17553:17580   */\n      swap1\n      pop\n        /* \"#utility.yul\":17590:17661   */\n      tag_459\n        /* \"#utility.yul\":17658:17659   */\n      0x00\n        /* \"#utility.yul\":17647:17656   */\n      dup4\n        /* \"#utility.yul\":17643:17660   */\n      add\n        /* \"#utility.yul\":17634:17640   */\n      dup8\n        /* \"#utility.yul\":17590:17661   */\n      tag_281\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17671:17743   */\n      tag_460\n        /* \"#utility.yul\":17739:17741   */\n      0x20\n        /* \"#utility.yul\":17728:17737   */\n      dup4\n        /* \"#utility.yul\":17724:17742   */\n      add\n        /* \"#utility.yul\":17715:17721   */\n      dup7\n        /* \"#utility.yul\":17671:17743   */\n      tag_281\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":17753:17825   */\n      tag_461\n        /* \"#utility.yul\":17821:17823   */\n      0x40\n        /* \"#utility.yul\":17810:17819   */\n      dup4\n        /* \"#utility.yul\":17806:17824   */\n      add\n        /* \"#utility.yul\":17797:17803   */\n      dup6\n        /* \"#utility.yul\":17753:17825   */\n      tag_253\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17835:17907   */\n      tag_462\n        /* \"#utility.yul\":17903:17905   */\n      0x60\n        /* \"#utility.yul\":17892:17901   */\n      dup4\n        /* \"#utility.yul\":17888:17906   */\n      add\n        /* \"#utility.yul\":17879:17885   */\n      dup5\n        /* \"#utility.yul\":17835:17907   */\n      tag_253\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":17361:17914   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17920:18081   */\n    tag_282:\n        /* \"#utility.yul\":18060:18073   */\n      0x4e6f207265736572766573000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18056:18057   */\n      0x00\n        /* \"#utility.yul\":18048:18054   */\n      dup3\n        /* \"#utility.yul\":18044:18058   */\n      add\n        /* \"#utility.yul\":18037:18074   */\n      mstore\n        /* \"#utility.yul\":17920:18081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18087:18453   */\n    tag_283:\n        /* \"#utility.yul\":18229:18232   */\n      0x00\n        /* \"#utility.yul\":18250:18317   */\n      tag_465\n        /* \"#utility.yul\":18314:18316   */\n      0x0b\n        /* \"#utility.yul\":18309:18312   */\n      dup4\n        /* \"#utility.yul\":18250:18317   */\n      tag_269\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18243:18317   */\n      swap2\n      pop\n        /* \"#utility.yul\":18326:18419   */\n      tag_466\n        /* \"#utility.yul\":18415:18418   */\n      dup3\n        /* \"#utility.yul\":18326:18419   */\n      tag_282\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18444:18446   */\n      0x20\n        /* \"#utility.yul\":18439:18442   */\n      dup3\n        /* \"#utility.yul\":18435:18447   */\n      add\n        /* \"#utility.yul\":18428:18447   */\n      swap1\n      pop\n        /* \"#utility.yul\":18087:18453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18459:18878   */\n    tag_109:\n        /* \"#utility.yul\":18625:18629   */\n      0x00\n        /* \"#utility.yul\":18663:18665   */\n      0x20\n        /* \"#utility.yul\":18652:18661   */\n      dup3\n        /* \"#utility.yul\":18648:18666   */\n      add\n        /* \"#utility.yul\":18640:18666   */\n      swap1\n      pop\n        /* \"#utility.yul\":18712:18721   */\n      dup2\n        /* \"#utility.yul\":18706:18710   */\n      dup2\n        /* \"#utility.yul\":18702:18722   */\n      sub\n        /* \"#utility.yul\":18698:18699   */\n      0x00\n        /* \"#utility.yul\":18687:18696   */\n      dup4\n        /* \"#utility.yul\":18683:18700   */\n      add\n        /* \"#utility.yul\":18676:18723   */\n      mstore\n        /* \"#utility.yul\":18740:18871   */\n      tag_468\n        /* \"#utility.yul\":18866:18870   */\n      dup2\n        /* \"#utility.yul\":18740:18871   */\n      tag_283\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":18732:18871   */\n      swap1\n      pop\n        /* \"#utility.yul\":18459:18878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18884:19048   */\n    tag_284:\n        /* \"#utility.yul\":19024:19040   */\n      0x496e73756666696369656e742041000000000000000000000000000000000000\n        /* \"#utility.yul\":19020:19021   */\n      0x00\n        /* \"#utility.yul\":19012:19018   */\n      dup3\n        /* \"#utility.yul\":19008:19022   */\n      add\n        /* \"#utility.yul\":19001:19041   */\n      mstore\n        /* \"#utility.yul\":18884:19048   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19054:19420   */\n    tag_285:\n        /* \"#utility.yul\":19196:19199   */\n      0x00\n        /* \"#utility.yul\":19217:19284   */\n      tag_471\n        /* \"#utility.yul\":19281:19283   */\n      0x0e\n        /* \"#utility.yul\":19276:19279   */\n      dup4\n        /* \"#utility.yul\":19217:19284   */\n      tag_269\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19210:19284   */\n      swap2\n      pop\n        /* \"#utility.yul\":19293:19386   */\n      tag_472\n        /* \"#utility.yul\":19382:19385   */\n      dup3\n        /* \"#utility.yul\":19293:19386   */\n      tag_284\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":19411:19413   */\n      0x20\n        /* \"#utility.yul\":19406:19409   */\n      dup3\n        /* \"#utility.yul\":19402:19414   */\n      add\n        /* \"#utility.yul\":19395:19414   */\n      swap1\n      pop\n        /* \"#utility.yul\":19054:19420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19426:19845   */\n    tag_125:\n        /* \"#utility.yul\":19592:19596   */\n      0x00\n        /* \"#utility.yul\":19630:19632   */\n      0x20\n        /* \"#utility.yul\":19619:19628   */\n      dup3\n        /* \"#utility.yul\":19615:19633   */\n      add\n        /* \"#utility.yul\":19607:19633   */\n      swap1\n      pop\n        /* \"#utility.yul\":19679:19688   */\n      dup2\n        /* \"#utility.yul\":19673:19677   */\n      dup2\n        /* \"#utility.yul\":19669:19689   */\n      sub\n        /* \"#utility.yul\":19665:19666   */\n      0x00\n        /* \"#utility.yul\":19654:19663   */\n      dup4\n        /* \"#utility.yul\":19650:19667   */\n      add\n        /* \"#utility.yul\":19643:19690   */\n      mstore\n        /* \"#utility.yul\":19707:19838   */\n      tag_474\n        /* \"#utility.yul\":19833:19837   */\n      dup2\n        /* \"#utility.yul\":19707:19838   */\n      tag_285\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":19699:19838   */\n      swap1\n      pop\n        /* \"#utility.yul\":19426:19845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19851:20015   */\n    tag_286:\n        /* \"#utility.yul\":19991:20007   */\n      0x496e73756666696369656e742042000000000000000000000000000000000000\n        /* \"#utility.yul\":19987:19988   */\n      0x00\n        /* \"#utility.yul\":19979:19985   */\n      dup3\n        /* \"#utility.yul\":19975:19989   */\n      add\n        /* \"#utility.yul\":19968:20008   */\n      mstore\n        /* \"#utility.yul\":19851:20015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20021:20387   */\n    tag_287:\n        /* \"#utility.yul\":20163:20166   */\n      0x00\n        /* \"#utility.yul\":20184:20251   */\n      tag_477\n        /* \"#utility.yul\":20248:20250   */\n      0x0e\n        /* \"#utility.yul\":20243:20246   */\n      dup4\n        /* \"#utility.yul\":20184:20251   */\n      tag_269\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20177:20251   */\n      swap2\n      pop\n        /* \"#utility.yul\":20260:20353   */\n      tag_478\n        /* \"#utility.yul\":20349:20352   */\n      dup3\n        /* \"#utility.yul\":20260:20353   */\n      tag_286\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20378:20380   */\n      0x20\n        /* \"#utility.yul\":20373:20376   */\n      dup3\n        /* \"#utility.yul\":20369:20381   */\n      add\n        /* \"#utility.yul\":20362:20381   */\n      swap1\n      pop\n        /* \"#utility.yul\":20021:20387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20393:20812   */\n    tag_128:\n        /* \"#utility.yul\":20559:20563   */\n      0x00\n        /* \"#utility.yul\":20597:20599   */\n      0x20\n        /* \"#utility.yul\":20586:20595   */\n      dup3\n        /* \"#utility.yul\":20582:20600   */\n      add\n        /* \"#utility.yul\":20574:20600   */\n      swap1\n      pop\n        /* \"#utility.yul\":20646:20655   */\n      dup2\n        /* \"#utility.yul\":20640:20644   */\n      dup2\n        /* \"#utility.yul\":20636:20656   */\n      sub\n        /* \"#utility.yul\":20632:20633   */\n      0x00\n        /* \"#utility.yul\":20621:20630   */\n      dup4\n        /* \"#utility.yul\":20617:20634   */\n      add\n        /* \"#utility.yul\":20610:20657   */\n      mstore\n        /* \"#utility.yul\":20674:20805   */\n      tag_480\n        /* \"#utility.yul\":20800:20804   */\n      dup2\n        /* \"#utility.yul\":20674:20805   */\n      tag_287\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":20666:20805   */\n      swap1\n      pop\n        /* \"#utility.yul\":20393:20812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20818:21482   */\n    tag_136:\n        /* \"#utility.yul\":21023:21027   */\n      0x00\n        /* \"#utility.yul\":21061:21064   */\n      0xa0\n        /* \"#utility.yul\":21050:21059   */\n      dup3\n        /* \"#utility.yul\":21046:21065   */\n      add\n        /* \"#utility.yul\":21038:21065   */\n      swap1\n      pop\n        /* \"#utility.yul\":21075:21146   */\n      tag_482\n        /* \"#utility.yul\":21143:21144   */\n      0x00\n        /* \"#utility.yul\":21132:21141   */\n      dup4\n        /* \"#utility.yul\":21128:21145   */\n      add\n        /* \"#utility.yul\":21119:21125   */\n      dup9\n        /* \"#utility.yul\":21075:21146   */\n      tag_281\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":21156:21228   */\n      tag_483\n        /* \"#utility.yul\":21224:21226   */\n      0x20\n        /* \"#utility.yul\":21213:21222   */\n      dup4\n        /* \"#utility.yul\":21209:21227   */\n      add\n        /* \"#utility.yul\":21200:21206   */\n      dup8\n        /* \"#utility.yul\":21156:21228   */\n      tag_281\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21238:21310   */\n      tag_484\n        /* \"#utility.yul\":21306:21308   */\n      0x40\n        /* \"#utility.yul\":21295:21304   */\n      dup4\n        /* \"#utility.yul\":21291:21309   */\n      add\n        /* \"#utility.yul\":21282:21288   */\n      dup7\n        /* \"#utility.yul\":21238:21310   */\n      tag_253\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":21320:21392   */\n      tag_485\n        /* \"#utility.yul\":21388:21390   */\n      0x60\n        /* \"#utility.yul\":21377:21386   */\n      dup4\n        /* \"#utility.yul\":21373:21391   */\n      add\n        /* \"#utility.yul\":21364:21370   */\n      dup6\n        /* \"#utility.yul\":21320:21392   */\n      tag_253\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21402:21475   */\n      tag_486\n        /* \"#utility.yul\":21470:21473   */\n      0x80\n        /* \"#utility.yul\":21459:21468   */\n      dup4\n        /* \"#utility.yul\":21455:21474   */\n      add\n        /* \"#utility.yul\":21446:21452   */\n      dup5\n        /* \"#utility.yul\":21402:21475   */\n      tag_253\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":20818:21482   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21488:21654   */\n    tag_288:\n        /* \"#utility.yul\":21628:21646   */\n      0x4964656e746963616c20746f6b656e7300000000000000000000000000000000\n        /* \"#utility.yul\":21624:21625   */\n      0x00\n        /* \"#utility.yul\":21616:21622   */\n      dup3\n        /* \"#utility.yul\":21612:21626   */\n      add\n        /* \"#utility.yul\":21605:21647   */\n      mstore\n        /* \"#utility.yul\":21488:21654   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21660:22026   */\n    tag_289:\n        /* \"#utility.yul\":21802:21805   */\n      0x00\n        /* \"#utility.yul\":21823:21890   */\n      tag_489\n        /* \"#utility.yul\":21887:21889   */\n      0x10\n        /* \"#utility.yul\":21882:21885   */\n      dup4\n        /* \"#utility.yul\":21823:21890   */\n      tag_269\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":21816:21890   */\n      swap2\n      pop\n        /* \"#utility.yul\":21899:21992   */\n      tag_490\n        /* \"#utility.yul\":21988:21991   */\n      dup3\n        /* \"#utility.yul\":21899:21992   */\n      tag_288\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":22017:22019   */\n      0x20\n        /* \"#utility.yul\":22012:22015   */\n      dup3\n        /* \"#utility.yul\":22008:22020   */\n      add\n        /* \"#utility.yul\":22001:22020   */\n      swap1\n      pop\n        /* \"#utility.yul\":21660:22026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22032:22451   */\n    tag_143:\n        /* \"#utility.yul\":22198:22202   */\n      0x00\n        /* \"#utility.yul\":22236:22238   */\n      0x20\n        /* \"#utility.yul\":22225:22234   */\n      dup3\n        /* \"#utility.yul\":22221:22239   */\n      add\n        /* \"#utility.yul\":22213:22239   */\n      swap1\n      pop\n        /* \"#utility.yul\":22285:22294   */\n      dup2\n        /* \"#utility.yul\":22279:22283   */\n      dup2\n        /* \"#utility.yul\":22275:22295   */\n      sub\n        /* \"#utility.yul\":22271:22272   */\n      0x00\n        /* \"#utility.yul\":22260:22269   */\n      dup4\n        /* \"#utility.yul\":22256:22273   */\n      add\n        /* \"#utility.yul\":22249:22296   */\n      mstore\n        /* \"#utility.yul\":22313:22444   */\n      tag_492\n        /* \"#utility.yul\":22439:22443   */\n      dup2\n        /* \"#utility.yul\":22313:22444   */\n      tag_289\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":22305:22444   */\n      swap1\n      pop\n        /* \"#utility.yul\":22032:22451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22457:22619   */\n    tag_290:\n        /* \"#utility.yul\":22597:22611   */\n      0x496e73756666696369656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":22593:22594   */\n      0x00\n        /* \"#utility.yul\":22585:22591   */\n      dup3\n        /* \"#utility.yul\":22581:22595   */\n      add\n        /* \"#utility.yul\":22574:22612   */\n      mstore\n        /* \"#utility.yul\":22457:22619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22625:22991   */\n    tag_291:\n        /* \"#utility.yul\":22767:22770   */\n      0x00\n        /* \"#utility.yul\":22788:22855   */\n      tag_495\n        /* \"#utility.yul\":22852:22854   */\n      0x0c\n        /* \"#utility.yul\":22847:22850   */\n      dup4\n        /* \"#utility.yul\":22788:22855   */\n      tag_269\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":22781:22855   */\n      swap2\n      pop\n        /* \"#utility.yul\":22864:22957   */\n      tag_496\n        /* \"#utility.yul\":22953:22956   */\n      dup3\n        /* \"#utility.yul\":22864:22957   */\n      tag_290\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":22982:22984   */\n      0x20\n        /* \"#utility.yul\":22977:22980   */\n      dup3\n        /* \"#utility.yul\":22973:22985   */\n      add\n        /* \"#utility.yul\":22966:22985   */\n      swap1\n      pop\n        /* \"#utility.yul\":22625:22991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22997:23416   */\n    tag_153:\n        /* \"#utility.yul\":23163:23167   */\n      0x00\n        /* \"#utility.yul\":23201:23203   */\n      0x20\n        /* \"#utility.yul\":23190:23199   */\n      dup3\n        /* \"#utility.yul\":23186:23204   */\n      add\n        /* \"#utility.yul\":23178:23204   */\n      swap1\n      pop\n        /* \"#utility.yul\":23250:23259   */\n      dup2\n        /* \"#utility.yul\":23244:23248   */\n      dup2\n        /* \"#utility.yul\":23240:23260   */\n      sub\n        /* \"#utility.yul\":23236:23237   */\n      0x00\n        /* \"#utility.yul\":23225:23234   */\n      dup4\n        /* \"#utility.yul\":23221:23238   */\n      add\n        /* \"#utility.yul\":23214:23261   */\n      mstore\n        /* \"#utility.yul\":23278:23409   */\n      tag_498\n        /* \"#utility.yul\":23404:23408   */\n      dup2\n        /* \"#utility.yul\":23278:23409   */\n      tag_291\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":23270:23409   */\n      swap1\n      pop\n        /* \"#utility.yul\":22997:23416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23422:23516   */\n    tag_292:\n        /* \"#utility.yul\":23455:23463   */\n      0x00\n        /* \"#utility.yul\":23503:23508   */\n      dup2\n        /* \"#utility.yul\":23499:23501   */\n      0x60\n        /* \"#utility.yul\":23495:23509   */\n      shl\n        /* \"#utility.yul\":23474:23509   */\n      swap1\n      pop\n        /* \"#utility.yul\":23422:23516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23522:23616   */\n    tag_293:\n        /* \"#utility.yul\":23561:23568   */\n      0x00\n        /* \"#utility.yul\":23590:23610   */\n      tag_501\n        /* \"#utility.yul\":23604:23609   */\n      dup3\n        /* \"#utility.yul\":23590:23610   */\n      tag_292\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":23579:23610   */\n      swap1\n      pop\n        /* \"#utility.yul\":23522:23616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23622:23722   */\n    tag_294:\n        /* \"#utility.yul\":23661:23668   */\n      0x00\n        /* \"#utility.yul\":23690:23716   */\n      tag_503\n        /* \"#utility.yul\":23710:23715   */\n      dup3\n        /* \"#utility.yul\":23690:23716   */\n      tag_293\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23679:23716   */\n      swap1\n      pop\n        /* \"#utility.yul\":23622:23722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23728:23885   */\n    tag_295:\n        /* \"#utility.yul\":23833:23878   */\n      tag_505\n        /* \"#utility.yul\":23853:23877   */\n      tag_506\n        /* \"#utility.yul\":23871:23876   */\n      dup3\n        /* \"#utility.yul\":23853:23877   */\n      tag_259\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":23833:23878   */\n      tag_294\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":23828:23831   */\n      dup3\n        /* \"#utility.yul\":23821:23879   */\n      mstore\n        /* \"#utility.yul\":23728:23885   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23891:24288   */\n    tag_162:\n        /* \"#utility.yul\":24031:24034   */\n      0x00\n        /* \"#utility.yul\":24046:24121   */\n      tag_508\n        /* \"#utility.yul\":24117:24120   */\n      dup3\n        /* \"#utility.yul\":24108:24114   */\n      dup6\n        /* \"#utility.yul\":24046:24121   */\n      tag_295\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24146:24148   */\n      0x14\n        /* \"#utility.yul\":24141:24144   */\n      dup3\n        /* \"#utility.yul\":24137:24149   */\n      add\n        /* \"#utility.yul\":24130:24149   */\n      swap2\n      pop\n        /* \"#utility.yul\":24159:24234   */\n      tag_509\n        /* \"#utility.yul\":24230:24233   */\n      dup3\n        /* \"#utility.yul\":24221:24227   */\n      dup5\n        /* \"#utility.yul\":24159:24234   */\n      tag_295\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":24259:24261   */\n      0x14\n        /* \"#utility.yul\":24254:24257   */\n      dup3\n        /* \"#utility.yul\":24250:24262   */\n      add\n        /* \"#utility.yul\":24243:24262   */\n      swap2\n      pop\n        /* \"#utility.yul\":24279:24282   */\n      dup2\n        /* \"#utility.yul\":24272:24282   */\n      swap1\n      pop\n        /* \"#utility.yul\":23891:24288   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24294:24736   */\n    tag_168:\n        /* \"#utility.yul\":24443:24447   */\n      0x00\n        /* \"#utility.yul\":24481:24483   */\n      0x60\n        /* \"#utility.yul\":24470:24479   */\n      dup3\n        /* \"#utility.yul\":24466:24484   */\n      add\n        /* \"#utility.yul\":24458:24484   */\n      swap1\n      pop\n        /* \"#utility.yul\":24494:24565   */\n      tag_511\n        /* \"#utility.yul\":24562:24563   */\n      0x00\n        /* \"#utility.yul\":24551:24560   */\n      dup4\n        /* \"#utility.yul\":24547:24564   */\n      add\n        /* \"#utility.yul\":24538:24544   */\n      dup7\n        /* \"#utility.yul\":24494:24565   */\n      tag_281\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":24575:24647   */\n      tag_512\n        /* \"#utility.yul\":24643:24645   */\n      0x20\n        /* \"#utility.yul\":24632:24641   */\n      dup4\n        /* \"#utility.yul\":24628:24646   */\n      add\n        /* \"#utility.yul\":24619:24625   */\n      dup6\n        /* \"#utility.yul\":24575:24647   */\n      tag_281\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":24657:24729   */\n      tag_513\n        /* \"#utility.yul\":24725:24727   */\n      0x40\n        /* \"#utility.yul\":24714:24723   */\n      dup4\n        /* \"#utility.yul\":24710:24728   */\n      add\n        /* \"#utility.yul\":24701:24707   */\n      dup5\n        /* \"#utility.yul\":24657:24729   */\n      tag_253\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":24294:24736   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24742:25074   */\n    tag_173:\n        /* \"#utility.yul\":24863:24867   */\n      0x00\n        /* \"#utility.yul\":24901:24903   */\n      0x40\n        /* \"#utility.yul\":24890:24899   */\n      dup3\n        /* \"#utility.yul\":24886:24904   */\n      add\n        /* \"#utility.yul\":24878:24904   */\n      swap1\n      pop\n        /* \"#utility.yul\":24914:24985   */\n      tag_515\n        /* \"#utility.yul\":24982:24983   */\n      0x00\n        /* \"#utility.yul\":24971:24980   */\n      dup4\n        /* \"#utility.yul\":24967:24984   */\n      add\n        /* \"#utility.yul\":24958:24964   */\n      dup6\n        /* \"#utility.yul\":24914:24985   */\n      tag_281\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":24995:25067   */\n      tag_516\n        /* \"#utility.yul\":25063:25065   */\n      0x20\n        /* \"#utility.yul\":25052:25061   */\n      dup4\n        /* \"#utility.yul\":25048:25066   */\n      add\n        /* \"#utility.yul\":25039:25045   */\n      dup5\n        /* \"#utility.yul\":24995:25067   */\n      tag_253\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":24742:25074   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25080:25302   */\n    tag_211:\n        /* \"#utility.yul\":25173:25177   */\n      0x00\n        /* \"#utility.yul\":25211:25213   */\n      0x20\n        /* \"#utility.yul\":25200:25209   */\n      dup3\n        /* \"#utility.yul\":25196:25214   */\n      add\n        /* \"#utility.yul\":25188:25214   */\n      swap1\n      pop\n        /* \"#utility.yul\":25224:25295   */\n      tag_518\n        /* \"#utility.yul\":25292:25293   */\n      0x00\n        /* \"#utility.yul\":25281:25290   */\n      dup4\n        /* \"#utility.yul\":25277:25294   */\n      add\n        /* \"#utility.yul\":25268:25274   */\n      dup5\n        /* \"#utility.yul\":25224:25295   */\n      tag_281\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":25080:25302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a45c9c4154c788383953756d8e89aaccd4c84f90d0e8a62513e9dd1f0d0f02564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50611f0e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063054d50d41461005957806338ed173914610089578063ac41865a146100b9578063baa2abde146100e9578063e8e337001461011a575b5f5ffd5b610073600480360381019061006e91906112f2565b61014c565b6040516100809190611351565b60405180910390f35b6100a3600480360381019061009e9190611425565b610230565b6040516100b09190611572565b60405180910390f35b6100d360048036038101906100ce9190611592565b6105f5565b6040516100e09190611351565b60405180910390f35b61010360048036038101906100fe91906115d0565b6106df565b60405161011192919061166d565b60405180910390f35b610134600480360381019061012f9190611694565b6109eb565b60405161014393929190611745565b60405180910390f35b5f5f841161018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906117d4565b60405180910390fd5b5f8311801561019d57505f82115b6101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d39061183c565b60405180910390fd5b5f6103e5856101eb9190611887565b90505f83826101fa9190611887565b90505f826103e88761020c9190611887565b61021691906118c8565b905080826102249190611928565b93505050509392505050565b60608180421115610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d906119a2565b60405180910390fd5b600286869050146102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390611a0a565b60405180910390fd5b5f86865f8181106102d0576102cf611a28565b5b90506020020160208101906102e59190611a55565b90505f878760018181106102fc576102fb611a28565b5b90506020020160208101906103119190611a55565b90505f61031e8383610c55565b90505f5f5f8381526020019081526020015f20905061036033308e8773ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b5f5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16106103a3578260010154835f01546103ad565b825f015483600101545b915091505f6103bd8f848461014c565b90508d811015610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990611aca565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16101561046e578e845f015f82825461044891906118c8565b9250508190555080846001015f8282546104629190611ae8565b925050819055506104a2565b8e846001015f82825461048191906118c8565b9250508190555080845f015f82825461049a9190611ae8565b925050819055505b6104cd8b828873ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b600267ffffffffffffffff8111156104e8576104e7611b1b565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b5098508e895f8151811061052d5761052c611a28565b5b602002602001018181525050808960018151811061054e5761054d611a28565b5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e4606288888c5f815181106105a7576105a6611a28565b5b60200260200101518d6001815181106105c3576105c2611a28565b5b60200260200101516040516105db9493929190611b57565b60405180910390a250505050505050509695505050505050565b5f5f6106018484610c55565b90505f5f5f8381526020019081526020015f2090505f5f8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1610610659578260010154835f0154610663565b825f015483600101545b915091505f8211801561067557505f81115b6106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90611be4565b60405180910390fd5b81670de0b6b3a7640000826106c99190611887565b6106d39190611928565b94505050505092915050565b5f5f8280421115610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c906119a2565b60405180910390fd5b5f6107308b8b610c55565b90505f5f5f8381526020019081526020015f20905089816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be9061183c565b60405180910390fd5b8060020154815f01548b6107db9190611887565b6107e59190611928565b9450806002015481600101548b6107fc9190611887565b6108069190611928565b93508885101561084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611c4c565b60405180910390fd5b8784101561088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088590611cb4565b60405180910390fd5b84815f015f8282546108a09190611ae8565b9250508190555083816001015f8282546108ba9190611ae8565b9250508190555089816002015f8282546108d49190611ae8565b9250508190555089816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109299190611ae8565b9250508190555061095b87868e73ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b61098687858d73ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c18d8d88888f6040516109d4959493929190611cd2565b60405180910390a250505097509795505050505050565b5f5f5f8380421115610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906119a2565b60405180910390fd5b8a73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1603610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9790611d6d565b60405180910390fd5b5f610aab8d8d610c55565b90505f5f5f8381526020019081526020015f209050610adc8e8e8e8e8e8e875f015488600101548960020154610dea565b8096508197505050610af08e8e8888610f39565b610b088686835f015484600101548560020154610f99565b93505f8411610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4390611dd5565b60405180910390fd5b85815f015f828254610b5e91906118c8565b9250508190555084816001015f828254610b7891906118c8565b9250508190555083816002015f828254610b9291906118c8565b9250508190555083816003015f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610be791906118c8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b708f8f898989604051610c3c959493929190611cd2565b60405180910390a2505050985098509895505050505050565b5f8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610610cb7578183604051602001610c9c929190611e38565b60405160208183030381529060405280519060200120610ce1565b8282604051602001610cca929190611e38565b604051602081830303815290604052805190602001205b905092915050565b610d65848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d1e93929190611e63565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ffe565b50505050565b610de5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d9e929190611e98565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ffe565b505050565b5f5f5f8303610dfe57888891509150610f2b565b5f610e098c8c611099565b5090505f5f8273ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff1614610e48578688610e4b565b87875b915091505f82828e610e5d9190611887565b610e679190611928565b90508b8111610ec25789811015610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611cb4565b60405180910390fd5b8c819550955050505050610f2b565b5f82848e610ed09190611887565b610eda9190611928565b90508b811015610f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1690611c4c565b60405180910390fd5b808d9650965050505050505b995099975050505050505050565b610f663330848773ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b610f933330838673ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b50505050565b5f5f8203610fbc57610fb58587610fb09190611887565b6110e3565b9050610ff5565b610ff2848388610fcc9190611887565b610fd69190611928565b848488610fe39190611887565b610fed9190611928565b61127d565b90505b95945050505050565b5f5f60205f8451602086015f885af18061101d576040513d5f823e3d81fd5b3d92505f519150505f8214611036576001811415611051565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109357836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161108a9190611ebf565b60405180910390fd5b50505050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106110d55782846110d8565b83835b915091509250929050565b5f600182116110f457819050611278565b5f8290505f60019050700100000000000000000000000000000000821061112457608082901c9150604081901b90505b68010000000000000000821061114357604082901c9150602081901b90505b640100000000821061115e57602082901c9150601081901b90505b62010000821061117757601082901c9150600881901b90505b610100821061118f57600882901c9150600481901b90505b601082106111a657600482901c9150600281901b90505b600482106111b657600181901b90505b600181600302901c905060018185816111d2576111d16118fb565b5b048201901c905060018185816111eb576111ea6118fb565b5b048201901c90506001818581611204576112036118fb565b5b048201901c9050600181858161121d5761121c6118fb565b5b048201901c90506001818581611236576112356118fb565b5b048201901c9050600181858161124f5761124e6118fb565b5b048201901c9050611271818581611269576112686118fb565b5b048211611293565b8103925050505b919050565b5f61128b828410848461129e565b905092915050565b5f8115159050919050565b5f6112a884611293565b82841802821890509392505050565b5f5ffd5b5f5ffd5b5f819050919050565b6112d1816112bf565b81146112db575f5ffd5b50565b5f813590506112ec816112c8565b92915050565b5f5f5f60608486031215611309576113086112b7565b5b5f611316868287016112de565b9350506020611327868287016112de565b9250506040611338868287016112de565b9150509250925092565b61134b816112bf565b82525050565b5f6020820190506113645f830184611342565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261138b5761138a61136a565b5b8235905067ffffffffffffffff8111156113a8576113a761136e565b5b6020830191508360208202830111156113c4576113c3611372565b5b9250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113f4826113cb565b9050919050565b611404816113ea565b811461140e575f5ffd5b50565b5f8135905061141f816113fb565b92915050565b5f5f5f5f5f5f60a0878903121561143f5761143e6112b7565b5b5f61144c89828a016112de565b965050602061145d89828a016112de565b955050604087013567ffffffffffffffff81111561147e5761147d6112bb565b5b61148a89828a01611376565b9450945050606061149d89828a01611411565b92505060806114ae89828a016112de565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6114ed816112bf565b82525050565b5f6114fe83836114e4565b60208301905092915050565b5f602082019050919050565b5f611520826114bb565b61152a81856114c5565b9350611535836114d5565b805f5b8381101561156557815161154c88826114f3565b97506115578361150a565b925050600181019050611538565b5085935050505092915050565b5f6020820190508181035f83015261158a8184611516565b905092915050565b5f5f604083850312156115a8576115a76112b7565b5b5f6115b585828601611411565b92505060206115c685828601611411565b9150509250929050565b5f5f5f5f5f5f5f60e0888a0312156115eb576115ea6112b7565b5b5f6115f88a828b01611411565b97505060206116098a828b01611411565b965050604061161a8a828b016112de565b955050606061162b8a828b016112de565b945050608061163c8a828b016112de565b93505060a061164d8a828b01611411565b92505060c061165e8a828b016112de565b91505092959891949750929550565b5f6040820190506116805f830185611342565b61168d6020830184611342565b9392505050565b5f5f5f5f5f5f5f5f610100898b0312156116b1576116b06112b7565b5b5f6116be8b828c01611411565b98505060206116cf8b828c01611411565b97505060406116e08b828c016112de565b96505060606116f18b828c016112de565b95505060806117028b828c016112de565b94505060a06117138b828c016112de565b93505060c06117248b828c01611411565b92505060e06117358b828c016112de565b9150509295985092959890939650565b5f6060820190506117585f830186611342565b6117656020830185611342565b6117726040830184611342565b949350505050565b5f82825260208201905092915050565b7f496e73756666696369656e7420696e70757400000000000000000000000000005f82015250565b5f6117be60128361177a565b91506117c98261178a565b602082019050919050565b5f6020820190508181035f8301526117eb816117b2565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f61182660168361177a565b9150611831826117f2565b602082019050919050565b5f6020820190508181035f8301526118538161181a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611891826112bf565b915061189c836112bf565b92508282026118aa816112bf565b915082820484148315176118c1576118c061185a565b5b5092915050565b5f6118d2826112bf565b91506118dd836112bf565b92508282019050808211156118f5576118f461185a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611932826112bf565b915061193d836112bf565b92508261194d5761194c6118fb565b5b828204905092915050565b7f5472616e73616374696f6e2065787069726564000000000000000000000000005f82015250565b5f61198c60138361177a565b915061199782611958565b602082019050919050565b5f6020820190508181035f8301526119b981611980565b9050919050565b7f4f6e6c7920322d746f6b656e00000000000000000000000000000000000000005f82015250565b5f6119f4600c8361177a565b91506119ff826119c0565b602082019050919050565b5f6020820190508181035f830152611a21816119e8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611a6a57611a696112b7565b5b5f611a7784828501611411565b91505092915050565b7f496e73756666696369656e74206f7574707574000000000000000000000000005f82015250565b5f611ab460138361177a565b9150611abf82611a80565b602082019050919050565b5f6020820190508181035f830152611ae181611aa8565b9050919050565b5f611af2826112bf565b9150611afd836112bf565b9250828203905081811115611b1557611b1461185a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b51816113ea565b82525050565b5f608082019050611b6a5f830187611b48565b611b776020830186611b48565b611b846040830185611342565b611b916060830184611342565b95945050505050565b7f4e6f2072657365727665730000000000000000000000000000000000000000005f82015250565b5f611bce600b8361177a565b9150611bd982611b9a565b602082019050919050565b5f6020820190508181035f830152611bfb81611bc2565b9050919050565b7f496e73756666696369656e7420410000000000000000000000000000000000005f82015250565b5f611c36600e8361177a565b9150611c4182611c02565b602082019050919050565b5f6020820190508181035f830152611c6381611c2a565b9050919050565b7f496e73756666696369656e7420420000000000000000000000000000000000005f82015250565b5f611c9e600e8361177a565b9150611ca982611c6a565b602082019050919050565b5f6020820190508181035f830152611ccb81611c92565b9050919050565b5f60a082019050611ce55f830188611b48565b611cf26020830187611b48565b611cff6040830186611342565b611d0c6060830185611342565b611d196080830184611342565b9695505050505050565b7f4964656e746963616c20746f6b656e73000000000000000000000000000000005f82015250565b5f611d5760108361177a565b9150611d6282611d23565b602082019050919050565b5f6020820190508181035f830152611d8481611d4b565b9050919050565b7f496e73756666696369656e7400000000000000000000000000000000000000005f82015250565b5f611dbf600c8361177a565b9150611dca82611d8b565b602082019050919050565b5f6020820190508181035f830152611dec81611db3565b9050919050565b5f8160601b9050919050565b5f611e0982611df3565b9050919050565b5f611e1a82611dff565b9050919050565b611e32611e2d826113ea565b611e10565b82525050565b5f611e438285611e21565b601482019150611e538284611e21565b6014820191508190509392505050565b5f606082019050611e765f830186611b48565b611e836020830185611b48565b611e906040830184611342565b949350505050565b5f604082019050611eab5f830185611b48565b611eb86020830184611342565b9392505050565b5f602082019050611ed25f830184611b48565b9291505056fea26469706673582212205a45c9c4154c788383953756d8e89aaccd4c84f90d0e8a62513e9dd1f0d0f02564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F0E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP3 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP5 GT PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x19D JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP7 DUP7 SWAP1 POP EQ PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B3 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 DUP7 PUSH0 DUP2 DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP PUSH0 DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x31E DUP4 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x360 CALLER ADDRESS DUP15 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x3A3 JUMPI DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x3AD JUMP JUMPDEST DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x3BD DUP16 DUP5 DUP5 PUSH2 0x14C JUMP JUMPDEST SWAP1 POP DUP14 DUP2 LT ISZERO PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x46E JUMPI DUP15 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4A2 JUMP JUMPDEST DUP15 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x4CD DUP12 DUP3 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x1B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x516 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP9 POP DUP15 DUP10 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP9 DUP9 DUP13 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5C3 JUMPI PUSH2 0x5C2 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x601 DUP5 DUP5 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x659 JUMPI DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x663 JUMP JUMPDEST DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x675 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP1 TIMESTAMP GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x730 DUP12 DUP12 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP10 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH0 ADD SLOAD DUP12 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD DUP12 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 LT ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x885 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x95B DUP8 DUP7 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x986 DUP8 DUP6 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 DUP14 DUP14 DUP9 DUP9 DUP16 PUSH1 0x40 MLOAD PUSH2 0x9D4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP1 TIMESTAMP GT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAAB DUP14 DUP14 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xADC DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP8 PUSH0 ADD SLOAD DUP9 PUSH1 0x1 ADD SLOAD DUP10 PUSH1 0x2 ADD SLOAD PUSH2 0xDEA JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP PUSH2 0xAF0 DUP15 DUP15 DUP9 DUP9 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0xB08 DUP7 DUP7 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE7 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 DUP16 DUP16 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xCB7 JUMPI DUP2 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9C SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xCE1 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCA SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD65 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDE5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD9E SWAP3 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 SUB PUSH2 0xDFE JUMPI DUP9 DUP9 SWAP2 POP SWAP2 POP PUSH2 0xF2B JUMP JUMPDEST PUSH0 PUSH2 0xE09 DUP13 DUP13 PUSH2 0x1099 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE48 JUMPI DUP7 DUP9 PUSH2 0xE4B JUMP JUMPDEST DUP8 DUP8 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 DUP3 DUP15 PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP DUP12 DUP2 GT PUSH2 0xEC2 JUMPI DUP10 DUP2 LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAA SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP13 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xF2B JUMP JUMPDEST PUSH0 DUP3 DUP5 DUP15 PUSH2 0xED0 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP DUP12 DUP2 LT ISZERO PUSH2 0xF1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF16 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP14 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP10 POP SWAP10 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF66 CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF93 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0xFBC JUMPI PUSH2 0xFB5 DUP6 DUP8 PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0xFF2 DUP5 DUP4 DUP9 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xFD6 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST DUP5 DUP5 DUP9 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x127D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1036 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1051 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1093 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x10D5 JUMPI DUP3 DUP5 PUSH2 0x10D8 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0x10F4 JUMPI DUP2 SWAP1 POP PUSH2 0x1278 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1124 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1143 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x115E JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1177 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118F JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x11A6 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x11B6 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x121D JUMPI PUSH2 0x121C PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1271 DUP2 DUP6 DUP2 PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1293 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP5 PUSH2 0x1293 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP2 EQ PUSH2 0x12DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12EC DUP2 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1316 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1338 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x134B DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1364 PUSH0 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x136A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x1372 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13F4 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1404 DUP2 PUSH2 0x13EA JUMP JUMPDEST DUP2 EQ PUSH2 0x140E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141F DUP2 PUSH2 0x13FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x145D DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x12BB JUMP JUMPDEST JUMPDEST PUSH2 0x148A DUP10 DUP3 DUP11 ADD PUSH2 0x1376 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x149D DUP10 DUP3 DUP11 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x14AE DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14ED DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14FE DUP4 DUP4 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 DUP3 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x152A DUP2 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1535 DUP4 PUSH2 0x14D5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1565 JUMPI DUP2 MLOAD PUSH2 0x154C DUP9 DUP3 PUSH2 0x14F3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1557 DUP4 PUSH2 0x150A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1538 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158A DUP2 DUP5 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH2 0x15A7 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1609 DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x161A DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x162B DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x163C DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x164D DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x165E DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1680 PUSH0 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x168D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BE DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x16CF DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x16E0 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x16F1 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1702 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1713 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1724 DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1735 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1758 PUSH0 DUP4 ADD DUP7 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1765 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1772 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420696E7075740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BE PUSH1 0x12 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x17C9 DUP3 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17EB DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1826 PUSH1 0x16 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1831 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1853 DUP2 PUSH2 0x181A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1891 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x189C DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18AA DUP2 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x185A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D2 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x18DD DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x185A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1932 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x193D DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x194D JUMPI PUSH2 0x194C PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73616374696F6E206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198C PUSH1 0x13 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1997 DUP3 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B9 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F4 PUSH1 0xC DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x19FF DUP3 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A21 DUP2 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP5 DUP3 DUP6 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x13 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF2 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFD DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x185A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x13EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP8 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1B84 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH1 0xB DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP3 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BFB DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742041000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 PUSH1 0xE DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP3 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C63 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9E PUSH1 0xE DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA9 DUP3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCB DUP2 PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CE5 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1CF2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1CFF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4964656E746963616C20746F6B656E7300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 PUSH1 0x10 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP3 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBF PUSH1 0xC DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCA DUP3 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E09 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 PUSH2 0x1E2D DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x1E10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E43 DUP3 DUP6 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E53 DUP3 DUP5 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E76 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1E83 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1E90 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EAB PUSH0 DUP4 ADD DUP6 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1EB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS GASLIMIT 0xC9 0xC4 ISZERO 0x4C PUSH25 0x8383953756D8E89AACCD4C84F90D0E8A62513E9DD1F0D0F025 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "371:9751:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateLiquidity_4541": {
									"entryPoint": 3993,
									"id": 4541,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 4094,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getPairKey_4191": {
									"entryPoint": 3157,
									"id": 4191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_quoteAddLiquidity_4452": {
									"entryPoint": 3562,
									"id": 4452,
									"parameterSlots": 9,
									"returnSlots": 2
								},
								"@_sortTokens_4215": {
									"entryPoint": 4249,
									"id": 4215,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_transferTokens_4491": {
									"entryPoint": 3897,
									"id": 4491,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addLiquidity_4348": {
									"entryPoint": 2539,
									"id": 4348,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@getAmountOut_4972": {
									"entryPoint": 332,
									"id": 4972,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPrice_4917": {
									"entryPoint": 1525,
									"id": 4917,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@min_1022": {
									"entryPoint": 4733,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeLiquidity_4681": {
									"entryPoint": 1759,
									"id": 4681,
									"parameterSlots": 7,
									"returnSlots": 2
								},
								"@safeTransferFrom_239": {
									"entryPoint": 3305,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 3435,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sqrt_1860": {
									"entryPoint": 4323,
									"id": 1860,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactTokensForTokens_4855": {
									"entryPoint": 560,
									"id": 4855,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@ternary_984": {
									"entryPoint": 4766,
									"id": 984,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@toUint_4080": {
									"entryPoint": 4755,
									"id": 4080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d": {
									"entryPoint": 7459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25305:10",
										"nodeType": "YulBlock",
										"src": "0:25305:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "790:519:10",
													"nodeType": "YulBlock",
													"src": "790:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:10",
																"nodeType": "YulBlock",
																"src": "836:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:10"
																			},
																			"nativeSrc": "838:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:10"
																		},
																		"nativeSrc": "838:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:10"
																		},
																		"nativeSrc": "807:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:10",
																		"nodeType": "YulLiteral",
																		"src": "832:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:10"
																},
																"nativeSrc": "803:32:10",
																"nodeType": "YulFunctionCall",
																"src": "803:32:10"
															},
															"nativeSrc": "800:119:10",
															"nodeType": "YulIf",
															"src": "800:119:10"
														},
														{
															"nativeSrc": "929:117:10",
															"nodeType": "YulBlock",
															"src": "929:117:10",
															"statements": [
																{
																	"nativeSrc": "944:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:10",
																		"nodeType": "YulLiteral",
																		"src": "958:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:10",
																			"nodeType": "YulTypedName",
																			"src": "948:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:10",
																	"nodeType": "YulAssignment",
																	"src": "973:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:10"
																				},
																				"nativeSrc": "1004:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:10"
																		},
																		"nativeSrc": "983:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:10",
															"nodeType": "YulBlock",
															"src": "1056:118:10",
															"statements": [
																{
																	"nativeSrc": "1071:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:10"
																				},
																				"nativeSrc": "1132:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:10"
																		},
																		"nativeSrc": "1111:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:10",
															"nodeType": "YulBlock",
															"src": "1184:118:10",
															"statements": [
																{
																	"nativeSrc": "1199:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:10"
																				},
																				"nativeSrc": "1260:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:10"
																		},
																		"nativeSrc": "1239:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:10",
														"nodeType": "YulTypedName",
														"src": "744:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:10",
														"nodeType": "YulTypedName",
														"src": "755:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:10",
														"nodeType": "YulTypedName",
														"src": "767:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:10",
														"nodeType": "YulTypedName",
														"src": "775:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:10",
														"nodeType": "YulTypedName",
														"src": "783:6:10",
														"type": ""
													}
												],
												"src": "690:619:10"
											},
											{
												"body": {
													"nativeSrc": "1380:53:10",
													"nodeType": "YulBlock",
													"src": "1380:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:10"
																		},
																		"nativeSrc": "1402:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:10"
																},
																"nativeSrc": "1390:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:10"
															},
															"nativeSrc": "1390:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:10",
														"nodeType": "YulTypedName",
														"src": "1368:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:10",
														"nodeType": "YulTypedName",
														"src": "1375:3:10",
														"type": ""
													}
												],
												"src": "1315:118:10"
											},
											{
												"body": {
													"nativeSrc": "1537:124:10",
													"nodeType": "YulBlock",
													"src": "1537:124:10",
													"statements": [
														{
															"nativeSrc": "1547:26:10",
															"nodeType": "YulAssignment",
															"src": "1547:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:10"
																},
																"nativeSrc": "1555:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:10"
																		},
																		"nativeSrc": "1636:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:10"
																},
																"nativeSrc": "1583:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:10"
															},
															"nativeSrc": "1583:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:10",
														"nodeType": "YulTypedName",
														"src": "1509:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:10",
														"nodeType": "YulTypedName",
														"src": "1521:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:10",
														"nodeType": "YulTypedName",
														"src": "1532:4:10",
														"type": ""
													}
												],
												"src": "1439:222:10"
											},
											{
												"body": {
													"nativeSrc": "1756:28:10",
													"nodeType": "YulBlock",
													"src": "1756:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1773:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1776:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1766:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:10"
																},
																"nativeSrc": "1766:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1766:12:10"
															},
															"nativeSrc": "1766:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1766:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1667:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:117:10"
											},
											{
												"body": {
													"nativeSrc": "1879:28:10",
													"nodeType": "YulBlock",
													"src": "1879:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1896:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1899:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1889:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:10"
																},
																"nativeSrc": "1889:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1889:12:10"
															},
															"nativeSrc": "1889:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1889:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1790:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1790:117:10"
											},
											{
												"body": {
													"nativeSrc": "2002:28:10",
													"nodeType": "YulBlock",
													"src": "2002:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2022:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:10"
																},
																"nativeSrc": "2012:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2012:12:10"
															},
															"nativeSrc": "2012:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2012:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1913:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1913:117:10"
											},
											{
												"body": {
													"nativeSrc": "2143:478:10",
													"nodeType": "YulBlock",
													"src": "2143:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2192:83:10",
																"nodeType": "YulBlock",
																"src": "2192:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2194:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2194:77:10"
																			},
																			"nativeSrc": "2194:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2194:79:10"
																		},
																		"nativeSrc": "2194:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2171:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2171:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2179:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2179:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:10"
																				},
																				"nativeSrc": "2167:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2186:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2186:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2163:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:10"
																		},
																		"nativeSrc": "2163:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2163:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2156:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:10"
																},
																"nativeSrc": "2156:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2156:35:10"
															},
															"nativeSrc": "2153:122:10",
															"nodeType": "YulIf",
															"src": "2153:122:10"
														},
														{
															"nativeSrc": "2284:30:10",
															"nodeType": "YulAssignment",
															"src": "2284:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2307:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2307:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2294:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2294:12:10"
																},
																"nativeSrc": "2294:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2294:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2284:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2357:83:10",
																"nodeType": "YulBlock",
																"src": "2357:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2359:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2359:77:10"
																			},
																			"nativeSrc": "2359:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2359:79:10"
																		},
																		"nativeSrc": "2359:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2359:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2329:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2329:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2337:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2337:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2326:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2326:2:10"
																},
																"nativeSrc": "2326:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2326:30:10"
															},
															"nativeSrc": "2323:117:10",
															"nodeType": "YulIf",
															"src": "2323:117:10"
														},
														{
															"nativeSrc": "2449:29:10",
															"nodeType": "YulAssignment",
															"src": "2449:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2465:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2465:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2473:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2473:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2461:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:10"
																},
																"nativeSrc": "2461:17:10",
																"nodeType": "YulFunctionCall",
																"src": "2461:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2449:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2449:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2532:83:10",
																"nodeType": "YulBlock",
																"src": "2532:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2534:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2534:77:10"
																			},
																			"nativeSrc": "2534:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2534:79:10"
																		},
																		"nativeSrc": "2534:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2534:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2497:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2497:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2511:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2511:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2519:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2519:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2507:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2507:3:10"
																				},
																				"nativeSrc": "2507:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2507:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:10"
																		},
																		"nativeSrc": "2493:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2527:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2527:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2490:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2490:2:10"
																},
																"nativeSrc": "2490:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2490:41:10"
															},
															"nativeSrc": "2487:128:10",
															"nodeType": "YulIf",
															"src": "2487:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "2053:568:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2110:6:10",
														"nodeType": "YulTypedName",
														"src": "2110:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2118:3:10",
														"nodeType": "YulTypedName",
														"src": "2118:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2126:8:10",
														"nodeType": "YulTypedName",
														"src": "2126:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2136:6:10",
														"nodeType": "YulTypedName",
														"src": "2136:6:10",
														"type": ""
													}
												],
												"src": "2053:568:10"
											},
											{
												"body": {
													"nativeSrc": "2672:81:10",
													"nodeType": "YulBlock",
													"src": "2672:81:10",
													"statements": [
														{
															"nativeSrc": "2682:65:10",
															"nodeType": "YulAssignment",
															"src": "2682:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2697:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2704:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2704:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2693:3:10"
																},
																"nativeSrc": "2693:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2693:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2682:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2682:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2627:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:10",
														"nodeType": "YulTypedName",
														"src": "2654:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2664:7:10",
														"nodeType": "YulTypedName",
														"src": "2664:7:10",
														"type": ""
													}
												],
												"src": "2627:126:10"
											},
											{
												"body": {
													"nativeSrc": "2804:51:10",
													"nodeType": "YulBlock",
													"src": "2804:51:10",
													"statements": [
														{
															"nativeSrc": "2814:35:10",
															"nodeType": "YulAssignment",
															"src": "2814:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2843:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2843:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2825:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2825:17:10"
																},
																"nativeSrc": "2825:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2825:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2814:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2814:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2759:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2786:5:10",
														"nodeType": "YulTypedName",
														"src": "2786:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2796:7:10",
														"nodeType": "YulTypedName",
														"src": "2796:7:10",
														"type": ""
													}
												],
												"src": "2759:96:10"
											},
											{
												"body": {
													"nativeSrc": "2904:79:10",
													"nodeType": "YulBlock",
													"src": "2904:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2961:16:10",
																"nodeType": "YulBlock",
																"src": "2961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2970:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2973:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2963:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:10"
																			},
																			"nativeSrc": "2963:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2963:12:10"
																		},
																		"nativeSrc": "2963:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2927:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2927:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2952:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2952:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2934:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2934:17:10"
																				},
																				"nativeSrc": "2934:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2934:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2924:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2924:2:10"
																		},
																		"nativeSrc": "2924:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2917:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2917:6:10"
																},
																"nativeSrc": "2917:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2917:43:10"
															},
															"nativeSrc": "2914:63:10",
															"nodeType": "YulIf",
															"src": "2914:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2861:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2897:5:10",
														"nodeType": "YulTypedName",
														"src": "2897:5:10",
														"type": ""
													}
												],
												"src": "2861:122:10"
											},
											{
												"body": {
													"nativeSrc": "3041:87:10",
													"nodeType": "YulBlock",
													"src": "3041:87:10",
													"statements": [
														{
															"nativeSrc": "3051:29:10",
															"nodeType": "YulAssignment",
															"src": "3051:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3073:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3073:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3060:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3060:12:10"
																},
																"nativeSrc": "3060:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3060:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3051:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3051:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3116:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3116:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3089:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3089:26:10"
																},
																"nativeSrc": "3089:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3089:33:10"
															},
															"nativeSrc": "3089:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3089:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2989:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3019:6:10",
														"nodeType": "YulTypedName",
														"src": "3019:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3027:3:10",
														"nodeType": "YulTypedName",
														"src": "3027:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3035:5:10",
														"nodeType": "YulTypedName",
														"src": "3035:5:10",
														"type": ""
													}
												],
												"src": "2989:139:10"
											},
											{
												"body": {
													"nativeSrc": "3303:972:10",
													"nodeType": "YulBlock",
													"src": "3303:972:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3350:83:10",
																"nodeType": "YulBlock",
																"src": "3350:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3352:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3352:77:10"
																			},
																			"nativeSrc": "3352:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3352:79:10"
																		},
																		"nativeSrc": "3352:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3352:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3324:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3324:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3333:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3333:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3320:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:10"
																		},
																		"nativeSrc": "3320:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3345:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3345:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3316:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:10"
																},
																"nativeSrc": "3316:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3316:33:10"
															},
															"nativeSrc": "3313:120:10",
															"nodeType": "YulIf",
															"src": "3313:120:10"
														},
														{
															"nativeSrc": "3443:117:10",
															"nodeType": "YulBlock",
															"src": "3443:117:10",
															"statements": [
																{
																	"nativeSrc": "3458:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3458:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3472:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3472:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3462:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3462:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3487:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3487:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3522:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3522:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3533:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3533:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3518:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3518:3:10"
																				},
																				"nativeSrc": "3518:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3518:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3542:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3542:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3497:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3497:20:10"
																		},
																		"nativeSrc": "3497:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3497:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3487:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3487:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3570:118:10",
															"nodeType": "YulBlock",
															"src": "3570:118:10",
															"statements": [
																{
																	"nativeSrc": "3585:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3585:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3599:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3599:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3589:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3589:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3615:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3615:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3650:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3650:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3661:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3661:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3646:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3646:3:10"
																				},
																				"nativeSrc": "3646:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3646:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3670:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3670:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3625:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3625:20:10"
																		},
																		"nativeSrc": "3625:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3615:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3615:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3698:313:10",
															"nodeType": "YulBlock",
															"src": "3698:313:10",
															"statements": [
																{
																	"nativeSrc": "3713:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3713:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3744:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3744:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3755:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3755:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3740:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3740:3:10"
																				},
																				"nativeSrc": "3740:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3740:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3727:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3727:12:10"
																		},
																		"nativeSrc": "3727:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3717:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3717:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3806:83:10",
																		"nodeType": "YulBlock",
																		"src": "3806:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3808:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3808:77:10"
																					},
																					"nativeSrc": "3808:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3808:79:10"
																				},
																				"nativeSrc": "3808:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3808:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3778:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3786:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3786:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3775:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3775:2:10"
																		},
																		"nativeSrc": "3775:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:30:10"
																	},
																	"nativeSrc": "3772:117:10",
																	"nodeType": "YulIf",
																	"src": "3772:117:10"
																},
																{
																	"nativeSrc": "3903:98:10",
																	"nodeType": "YulAssignment",
																	"src": "3903:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3973:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3973:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3984:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3969:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3969:3:10"
																				},
																				"nativeSrc": "3969:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3993:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "3921:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "3921:47:10"
																		},
																		"nativeSrc": "3921:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3903:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3903:6:10"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "3911:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3911:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4021:118:10",
															"nodeType": "YulBlock",
															"src": "4021:118:10",
															"statements": [
																{
																	"nativeSrc": "4036:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4036:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4050:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4050:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4040:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4066:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4066:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4101:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4101:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4112:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4112:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4097:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4097:3:10"
																				},
																				"nativeSrc": "4097:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4097:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4121:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4121:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4076:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4076:20:10"
																		},
																		"nativeSrc": "4076:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4066:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4066:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4149:119:10",
															"nodeType": "YulBlock",
															"src": "4149:119:10",
															"statements": [
																{
																	"nativeSrc": "4164:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4164:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4178:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4178:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4168:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4168:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4195:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4195:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:10"
																				},
																				"nativeSrc": "4226:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4205:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4205:20:10"
																		},
																		"nativeSrc": "4205:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4205:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "4195:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4195:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "3134:1141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3233:9:10",
														"nodeType": "YulTypedName",
														"src": "3233:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3244:7:10",
														"nodeType": "YulTypedName",
														"src": "3244:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3256:6:10",
														"nodeType": "YulTypedName",
														"src": "3256:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3264:6:10",
														"nodeType": "YulTypedName",
														"src": "3264:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3272:6:10",
														"nodeType": "YulTypedName",
														"src": "3272:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3280:6:10",
														"nodeType": "YulTypedName",
														"src": "3280:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3288:6:10",
														"nodeType": "YulTypedName",
														"src": "3288:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3296:6:10",
														"nodeType": "YulTypedName",
														"src": "3296:6:10",
														"type": ""
													}
												],
												"src": "3134:1141:10"
											},
											{
												"body": {
													"nativeSrc": "4355:40:10",
													"nodeType": "YulBlock",
													"src": "4355:40:10",
													"statements": [
														{
															"nativeSrc": "4366:22:10",
															"nodeType": "YulAssignment",
															"src": "4366:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4382:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4382:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4376:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4376:5:10"
																},
																"nativeSrc": "4376:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4376:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4366:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4281:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4338:5:10",
														"nodeType": "YulTypedName",
														"src": "4338:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4348:6:10",
														"nodeType": "YulTypedName",
														"src": "4348:6:10",
														"type": ""
													}
												],
												"src": "4281:114:10"
											},
											{
												"body": {
													"nativeSrc": "4512:73:10",
													"nodeType": "YulBlock",
													"src": "4512:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4529:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4534:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4534:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:10"
																},
																"nativeSrc": "4522:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4522:19:10"
															},
															"nativeSrc": "4522:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "4522:19:10"
														},
														{
															"nativeSrc": "4550:29:10",
															"nodeType": "YulAssignment",
															"src": "4550:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4569:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4574:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4565:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4565:3:10"
																},
																"nativeSrc": "4565:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4565:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4550:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4550:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4401:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4484:3:10",
														"nodeType": "YulTypedName",
														"src": "4484:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4489:6:10",
														"nodeType": "YulTypedName",
														"src": "4489:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4500:11:10",
														"nodeType": "YulTypedName",
														"src": "4500:11:10",
														"type": ""
													}
												],
												"src": "4401:184:10"
											},
											{
												"body": {
													"nativeSrc": "4663:60:10",
													"nodeType": "YulBlock",
													"src": "4663:60:10",
													"statements": [
														{
															"nativeSrc": "4673:11:10",
															"nodeType": "YulAssignment",
															"src": "4673:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4681:3:10",
																"nodeType": "YulIdentifier",
																"src": "4681:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4673:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:10"
																}
															]
														},
														{
															"nativeSrc": "4694:22:10",
															"nodeType": "YulAssignment",
															"src": "4694:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4706:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4711:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4711:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4702:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:10"
																},
																"nativeSrc": "4702:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4702:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4694:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4694:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4591:132:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4650:3:10",
														"nodeType": "YulTypedName",
														"src": "4650:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4658:4:10",
														"nodeType": "YulTypedName",
														"src": "4658:4:10",
														"type": ""
													}
												],
												"src": "4591:132:10"
											},
											{
												"body": {
													"nativeSrc": "4784:53:10",
													"nodeType": "YulBlock",
													"src": "4784:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4801:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4824:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4824:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4806:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4806:17:10"
																		},
																		"nativeSrc": "4806:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4794:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:10"
																},
																"nativeSrc": "4794:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4794:37:10"
															},
															"nativeSrc": "4794:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4794:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4729:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4772:5:10",
														"nodeType": "YulTypedName",
														"src": "4772:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4779:3:10",
														"nodeType": "YulTypedName",
														"src": "4779:3:10",
														"type": ""
													}
												],
												"src": "4729:108:10"
											},
											{
												"body": {
													"nativeSrc": "4923:99:10",
													"nodeType": "YulBlock",
													"src": "4923:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4967:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4967:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4975:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "4933:33:10",
																	"nodeType": "YulIdentifier",
																	"src": "4933:33:10"
																},
																"nativeSrc": "4933:46:10",
																"nodeType": "YulFunctionCall",
																"src": "4933:46:10"
															},
															"nativeSrc": "4933:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "4933:46:10"
														},
														{
															"nativeSrc": "4988:28:10",
															"nodeType": "YulAssignment",
															"src": "4988:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5006:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5006:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5011:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5011:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5002:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:10"
																},
																"nativeSrc": "5002:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5002:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "4988:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "4988:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "4843:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "4896:6:10",
														"nodeType": "YulTypedName",
														"src": "4896:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4904:3:10",
														"nodeType": "YulTypedName",
														"src": "4904:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "4912:10:10",
														"nodeType": "YulTypedName",
														"src": "4912:10:10",
														"type": ""
													}
												],
												"src": "4843:179:10"
											},
											{
												"body": {
													"nativeSrc": "5103:38:10",
													"nodeType": "YulBlock",
													"src": "5103:38:10",
													"statements": [
														{
															"nativeSrc": "5113:22:10",
															"nodeType": "YulAssignment",
															"src": "5113:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5125:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5125:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5130:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5130:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5121:3:10"
																},
																"nativeSrc": "5121:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5121:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "5113:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5113:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5028:113:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5090:3:10",
														"nodeType": "YulTypedName",
														"src": "5090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "5098:4:10",
														"nodeType": "YulTypedName",
														"src": "5098:4:10",
														"type": ""
													}
												],
												"src": "5028:113:10"
											},
											{
												"body": {
													"nativeSrc": "5301:608:10",
													"nodeType": "YulBlock",
													"src": "5301:608:10",
													"statements": [
														{
															"nativeSrc": "5311:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5311:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5373:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5373:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "5325:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "5325:47:10"
																},
																"nativeSrc": "5325:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5325:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5315:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5315:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5388:93:10",
															"nodeType": "YulAssignment",
															"src": "5388:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5469:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5469:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5474:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5474:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5395:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "5395:73:10"
																},
																"nativeSrc": "5395:86:10",
																"nodeType": "YulFunctionCall",
																"src": "5395:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5388:3:10"
																}
															]
														},
														{
															"nativeSrc": "5490:71:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5490:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5555:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5555:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "5505:49:10",
																	"nodeType": "YulIdentifier",
																	"src": "5505:49:10"
																},
																"nativeSrc": "5505:56:10",
																"nodeType": "YulFunctionCall",
																"src": "5505:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "5494:7:10",
																	"nodeType": "YulTypedName",
																	"src": "5494:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5570:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5570:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "5584:7:10",
																"nodeType": "YulIdentifier",
																"src": "5584:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5574:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5574:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5660:224:10",
																"nodeType": "YulBlock",
																"src": "5660:224:10",
																"statements": [
																	{
																		"nativeSrc": "5674:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5674:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5701:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5701:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5695:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5695:5:10"
																			},
																			"nativeSrc": "5695:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5695:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "5678:13:10",
																				"nodeType": "YulTypedName",
																				"src": "5678:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5721:70:10",
																		"nodeType": "YulAssignment",
																		"src": "5721:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5772:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "5772:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "5787:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5787:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "5728:43:10",
																				"nodeType": "YulIdentifier",
																				"src": "5728:43:10"
																			},
																			"nativeSrc": "5728:63:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5728:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5721:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5721:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5804:70:10",
																		"nodeType": "YulAssignment",
																		"src": "5804:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5867:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5867:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "5814:52:10",
																				"nodeType": "YulIdentifier",
																				"src": "5814:52:10"
																			},
																			"nativeSrc": "5814:60:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5814:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5804:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5804:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5622:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5622:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5625:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5625:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5619:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5619:2:10"
																},
																"nativeSrc": "5619:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5619:13:10"
															},
															"nativeSrc": "5600:284:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5633:18:10",
																"nodeType": "YulBlock",
																"src": "5633:18:10",
																"statements": [
																	{
																		"nativeSrc": "5635:14:10",
																		"nodeType": "YulAssignment",
																		"src": "5635:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5644:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "5644:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5647:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5647:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5640:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5640:3:10"
																			},
																			"nativeSrc": "5640:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5640:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5635:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5635:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5604:14:10",
																"nodeType": "YulBlock",
																"src": "5604:14:10",
																"statements": [
																	{
																		"nativeSrc": "5606:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5606:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5615:1:10",
																			"nodeType": "YulLiteral",
																			"src": "5615:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "5610:1:10",
																				"nodeType": "YulTypedName",
																				"src": "5610:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5600:284:10"
														},
														{
															"nativeSrc": "5893:10:10",
															"nodeType": "YulAssignment",
															"src": "5893:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "5900:3:10",
																"nodeType": "YulIdentifier",
																"src": "5900:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5893:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5893:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5177:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5280:5:10",
														"nodeType": "YulTypedName",
														"src": "5280:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5287:3:10",
														"nodeType": "YulTypedName",
														"src": "5287:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5296:3:10",
														"nodeType": "YulTypedName",
														"src": "5296:3:10",
														"type": ""
													}
												],
												"src": "5177:732:10"
											},
											{
												"body": {
													"nativeSrc": "6063:225:10",
													"nodeType": "YulBlock",
													"src": "6063:225:10",
													"statements": [
														{
															"nativeSrc": "6073:26:10",
															"nodeType": "YulAssignment",
															"src": "6073:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6085:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6085:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6096:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6096:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:10"
																},
																"nativeSrc": "6081:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6081:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6073:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6073:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6120:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6120:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6131:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6131:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:10"
																		},
																		"nativeSrc": "6116:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6139:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6139:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6145:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6145:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6135:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6135:3:10"
																		},
																		"nativeSrc": "6135:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6135:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6109:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6109:6:10"
																},
																"nativeSrc": "6109:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6109:47:10"
															},
															"nativeSrc": "6109:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6109:47:10"
														},
														{
															"nativeSrc": "6165:116:10",
															"nodeType": "YulAssignment",
															"src": "6165:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6267:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6267:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6276:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6276:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6173:93:10",
																	"nodeType": "YulIdentifier",
																	"src": "6173:93:10"
																},
																"nativeSrc": "6173:108:10",
																"nodeType": "YulFunctionCall",
																"src": "6173:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6165:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6165:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5915:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6035:9:10",
														"nodeType": "YulTypedName",
														"src": "6035:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6047:6:10",
														"nodeType": "YulTypedName",
														"src": "6047:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6058:4:10",
														"nodeType": "YulTypedName",
														"src": "6058:4:10",
														"type": ""
													}
												],
												"src": "5915:373:10"
											},
											{
												"body": {
													"nativeSrc": "6377:391:10",
													"nodeType": "YulBlock",
													"src": "6377:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6423:83:10",
																"nodeType": "YulBlock",
																"src": "6423:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6425:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6425:77:10"
																			},
																			"nativeSrc": "6425:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6425:79:10"
																		},
																		"nativeSrc": "6425:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6425:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6398:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6398:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:10"
																		},
																		"nativeSrc": "6394:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6394:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6419:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6419:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:10"
																},
																"nativeSrc": "6390:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6390:32:10"
															},
															"nativeSrc": "6387:119:10",
															"nodeType": "YulIf",
															"src": "6387:119:10"
														},
														{
															"nativeSrc": "6516:117:10",
															"nodeType": "YulBlock",
															"src": "6516:117:10",
															"statements": [
																{
																	"nativeSrc": "6531:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6531:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6545:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6545:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6535:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6535:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6560:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6560:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6595:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6595:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6606:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6606:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6591:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6591:3:10"
																				},
																				"nativeSrc": "6591:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6591:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6615:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6615:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6570:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6570:20:10"
																		},
																		"nativeSrc": "6570:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6570:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6560:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6560:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6643:118:10",
															"nodeType": "YulBlock",
															"src": "6643:118:10",
															"statements": [
																{
																	"nativeSrc": "6658:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6658:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6672:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6662:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6662:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6688:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6688:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6723:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6723:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6734:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6734:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6719:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6719:3:10"
																				},
																				"nativeSrc": "6719:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6719:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6743:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6743:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6698:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6698:20:10"
																		},
																		"nativeSrc": "6698:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6698:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6688:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6688:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6294:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6339:9:10",
														"nodeType": "YulTypedName",
														"src": "6339:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6350:7:10",
														"nodeType": "YulTypedName",
														"src": "6350:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6362:6:10",
														"nodeType": "YulTypedName",
														"src": "6362:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6370:6:10",
														"nodeType": "YulTypedName",
														"src": "6370:6:10",
														"type": ""
													}
												],
												"src": "6294:474:10"
											},
											{
												"body": {
													"nativeSrc": "6942:1035:10",
													"nodeType": "YulBlock",
													"src": "6942:1035:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6989:83:10",
																"nodeType": "YulBlock",
																"src": "6989:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6991:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6991:77:10"
																			},
																			"nativeSrc": "6991:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6991:79:10"
																		},
																		"nativeSrc": "6991:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6991:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6963:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6963:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6972:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6972:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6959:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:10"
																		},
																		"nativeSrc": "6959:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6959:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6984:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6984:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6955:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:10"
																},
																"nativeSrc": "6955:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6955:33:10"
															},
															"nativeSrc": "6952:120:10",
															"nodeType": "YulIf",
															"src": "6952:120:10"
														},
														{
															"nativeSrc": "7082:117:10",
															"nodeType": "YulBlock",
															"src": "7082:117:10",
															"statements": [
																{
																	"nativeSrc": "7097:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7097:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7111:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7111:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7101:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7101:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7126:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7126:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7161:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7161:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7172:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7172:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7157:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7157:3:10"
																				},
																				"nativeSrc": "7157:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7157:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7181:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7181:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7136:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7136:20:10"
																		},
																		"nativeSrc": "7136:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7136:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7126:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7126:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7209:118:10",
															"nodeType": "YulBlock",
															"src": "7209:118:10",
															"statements": [
																{
																	"nativeSrc": "7224:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7224:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7238:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7238:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7228:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7228:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7254:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7254:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7289:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7289:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7300:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7300:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7285:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7285:3:10"
																				},
																				"nativeSrc": "7285:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7285:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7309:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7309:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7264:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7264:20:10"
																		},
																		"nativeSrc": "7264:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7264:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7254:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7254:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7337:118:10",
															"nodeType": "YulBlock",
															"src": "7337:118:10",
															"statements": [
																{
																	"nativeSrc": "7352:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7352:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7366:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7366:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7356:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7356:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:10"
																				},
																				"nativeSrc": "7413:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7392:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:10"
																		},
																		"nativeSrc": "7392:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7382:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7465:118:10",
															"nodeType": "YulBlock",
															"src": "7465:118:10",
															"statements": [
																{
																	"nativeSrc": "7480:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7480:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7494:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7494:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7484:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7484:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7510:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7510:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7545:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7545:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7556:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7556:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7541:3:10"
																				},
																				"nativeSrc": "7541:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7541:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7565:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7565:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7520:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7520:20:10"
																		},
																		"nativeSrc": "7520:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7520:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7510:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7510:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7593:119:10",
															"nodeType": "YulBlock",
															"src": "7593:119:10",
															"statements": [
																{
																	"nativeSrc": "7608:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7608:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7622:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7622:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7612:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7612:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7639:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7639:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7674:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7674:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7685:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7685:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7670:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7670:3:10"
																				},
																				"nativeSrc": "7670:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7670:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7694:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7694:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7649:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7649:20:10"
																		},
																		"nativeSrc": "7649:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7649:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7639:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7639:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7722:119:10",
															"nodeType": "YulBlock",
															"src": "7722:119:10",
															"statements": [
																{
																	"nativeSrc": "7737:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7737:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7751:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7751:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7741:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7741:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7768:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7768:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7803:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7803:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7814:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7814:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7799:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7799:3:10"
																				},
																				"nativeSrc": "7799:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7799:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7823:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7823:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7778:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7778:20:10"
																		},
																		"nativeSrc": "7778:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "7768:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7768:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7851:119:10",
															"nodeType": "YulBlock",
															"src": "7851:119:10",
															"statements": [
																{
																	"nativeSrc": "7866:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7866:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7880:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7880:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7870:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7870:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7897:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7897:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7932:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7932:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7943:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7943:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7928:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7928:3:10"
																				},
																				"nativeSrc": "7928:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7928:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7952:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7952:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7907:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7907:20:10"
																		},
																		"nativeSrc": "7907:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7907:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "7897:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7897:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "6774:1203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6864:9:10",
														"nodeType": "YulTypedName",
														"src": "6864:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6875:7:10",
														"nodeType": "YulTypedName",
														"src": "6875:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6887:6:10",
														"nodeType": "YulTypedName",
														"src": "6887:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6895:6:10",
														"nodeType": "YulTypedName",
														"src": "6895:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6903:6:10",
														"nodeType": "YulTypedName",
														"src": "6903:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6911:6:10",
														"nodeType": "YulTypedName",
														"src": "6911:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6919:6:10",
														"nodeType": "YulTypedName",
														"src": "6919:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6927:6:10",
														"nodeType": "YulTypedName",
														"src": "6927:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6935:6:10",
														"nodeType": "YulTypedName",
														"src": "6935:6:10",
														"type": ""
													}
												],
												"src": "6774:1203:10"
											},
											{
												"body": {
													"nativeSrc": "8109:206:10",
													"nodeType": "YulBlock",
													"src": "8109:206:10",
													"statements": [
														{
															"nativeSrc": "8119:26:10",
															"nodeType": "YulAssignment",
															"src": "8119:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8131:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8142:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:10"
																},
																"nativeSrc": "8127:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8127:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8119:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8199:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8199:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8212:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8223:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8223:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8208:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:10"
																		},
																		"nativeSrc": "8208:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8208:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8155:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8155:43:10"
																},
																"nativeSrc": "8155:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8155:71:10"
															},
															"nativeSrc": "8155:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8155:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8280:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8280:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8293:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8293:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8304:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8304:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:10"
																		},
																		"nativeSrc": "8289:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8289:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8236:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8236:43:10"
																},
																"nativeSrc": "8236:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8236:72:10"
															},
															"nativeSrc": "8236:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8236:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7983:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8073:9:10",
														"nodeType": "YulTypedName",
														"src": "8073:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8085:6:10",
														"nodeType": "YulTypedName",
														"src": "8085:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8093:6:10",
														"nodeType": "YulTypedName",
														"src": "8093:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8104:4:10",
														"nodeType": "YulTypedName",
														"src": "8104:4:10",
														"type": ""
													}
												],
												"src": "7983:332:10"
											},
											{
												"body": {
													"nativeSrc": "8506:1164:10",
													"nodeType": "YulBlock",
													"src": "8506:1164:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8553:83:10",
																"nodeType": "YulBlock",
																"src": "8553:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8555:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8555:77:10"
																			},
																			"nativeSrc": "8555:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8555:79:10"
																		},
																		"nativeSrc": "8555:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8555:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8527:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8527:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8536:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:10"
																		},
																		"nativeSrc": "8523:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8523:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8548:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8548:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8519:3:10"
																},
																"nativeSrc": "8519:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8519:33:10"
															},
															"nativeSrc": "8516:120:10",
															"nodeType": "YulIf",
															"src": "8516:120:10"
														},
														{
															"nativeSrc": "8646:117:10",
															"nodeType": "YulBlock",
															"src": "8646:117:10",
															"statements": [
																{
																	"nativeSrc": "8661:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8661:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8675:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8675:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8665:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8665:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8690:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8690:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8725:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8725:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8736:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8736:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8721:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8721:3:10"
																				},
																				"nativeSrc": "8721:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8721:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8745:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8745:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8700:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8700:20:10"
																		},
																		"nativeSrc": "8700:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8700:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8690:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8690:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8773:118:10",
															"nodeType": "YulBlock",
															"src": "8773:118:10",
															"statements": [
																{
																	"nativeSrc": "8788:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8788:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8792:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8792:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8818:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8818:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8853:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8853:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8864:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8864:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8849:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8849:3:10"
																				},
																				"nativeSrc": "8849:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8849:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8873:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8873:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8828:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8828:20:10"
																		},
																		"nativeSrc": "8828:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8818:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8818:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8901:118:10",
															"nodeType": "YulBlock",
															"src": "8901:118:10",
															"statements": [
																{
																	"nativeSrc": "8916:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8916:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8930:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8930:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8920:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8920:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8946:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8946:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8981:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8981:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8992:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8992:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8977:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8977:3:10"
																				},
																				"nativeSrc": "8977:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8977:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9001:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9001:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8956:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8956:20:10"
																		},
																		"nativeSrc": "8956:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8956:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8946:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8946:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9029:118:10",
															"nodeType": "YulBlock",
															"src": "9029:118:10",
															"statements": [
																{
																	"nativeSrc": "9044:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9044:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9058:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9058:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9048:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9048:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9074:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9074:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9109:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9109:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9120:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9120:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9105:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9105:3:10"
																				},
																				"nativeSrc": "9105:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9105:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9129:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9129:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9084:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9084:20:10"
																		},
																		"nativeSrc": "9084:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9084:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9074:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9074:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9157:119:10",
															"nodeType": "YulBlock",
															"src": "9157:119:10",
															"statements": [
																{
																	"nativeSrc": "9172:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9172:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9186:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9186:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9176:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9176:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9203:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9203:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9238:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9249:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9249:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9234:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:10"
																				},
																				"nativeSrc": "9234:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9234:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9258:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9258:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9213:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9213:20:10"
																		},
																		"nativeSrc": "9213:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9203:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9203:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9286:119:10",
															"nodeType": "YulBlock",
															"src": "9286:119:10",
															"statements": [
																{
																	"nativeSrc": "9301:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9301:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9315:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9315:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9305:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9305:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9332:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9332:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9367:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9367:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9378:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9378:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9363:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9363:3:10"
																				},
																				"nativeSrc": "9363:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9363:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9387:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9387:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9342:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9342:20:10"
																		},
																		"nativeSrc": "9342:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9342:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "9332:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9332:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9415:119:10",
															"nodeType": "YulBlock",
															"src": "9415:119:10",
															"statements": [
																{
																	"nativeSrc": "9430:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9430:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9444:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9444:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9434:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9434:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9461:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9461:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9496:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9496:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9507:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9507:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9492:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9492:3:10"
																				},
																				"nativeSrc": "9492:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9492:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9516:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9516:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9471:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9471:20:10"
																		},
																		"nativeSrc": "9471:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9471:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "9461:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9461:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9544:119:10",
															"nodeType": "YulBlock",
															"src": "9544:119:10",
															"statements": [
																{
																	"nativeSrc": "9559:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9559:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9573:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9573:3:10",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9563:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9563:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9590:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9590:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9625:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9625:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9636:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9636:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9621:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9621:3:10"
																				},
																				"nativeSrc": "9621:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9621:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9645:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9645:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9600:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9600:20:10"
																		},
																		"nativeSrc": "9600:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9600:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "9590:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9590:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "8321:1349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8420:9:10",
														"nodeType": "YulTypedName",
														"src": "8420:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8431:7:10",
														"nodeType": "YulTypedName",
														"src": "8431:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8443:6:10",
														"nodeType": "YulTypedName",
														"src": "8443:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8451:6:10",
														"nodeType": "YulTypedName",
														"src": "8451:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8459:6:10",
														"nodeType": "YulTypedName",
														"src": "8459:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8467:6:10",
														"nodeType": "YulTypedName",
														"src": "8467:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8475:6:10",
														"nodeType": "YulTypedName",
														"src": "8475:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8483:6:10",
														"nodeType": "YulTypedName",
														"src": "8483:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8491:6:10",
														"nodeType": "YulTypedName",
														"src": "8491:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "8499:6:10",
														"nodeType": "YulTypedName",
														"src": "8499:6:10",
														"type": ""
													}
												],
												"src": "8321:1349:10"
											},
											{
												"body": {
													"nativeSrc": "9830:288:10",
													"nodeType": "YulBlock",
													"src": "9830:288:10",
													"statements": [
														{
															"nativeSrc": "9840:26:10",
															"nodeType": "YulAssignment",
															"src": "9840:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9852:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9852:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9863:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9863:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:10"
																},
																"nativeSrc": "9848:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9848:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9840:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9920:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9933:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9933:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9944:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9944:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9929:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9929:3:10"
																		},
																		"nativeSrc": "9929:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9929:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9876:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9876:43:10"
																},
																"nativeSrc": "9876:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9876:71:10"
															},
															"nativeSrc": "9876:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9876:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10001:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10001:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10014:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10014:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10025:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10025:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10010:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10010:3:10"
																		},
																		"nativeSrc": "10010:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9957:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9957:43:10"
																},
																"nativeSrc": "9957:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9957:72:10"
															},
															"nativeSrc": "9957:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9957:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10083:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10083:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10096:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10107:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10107:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10092:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:10"
																		},
																		"nativeSrc": "10092:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10092:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10039:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10039:43:10"
																},
																"nativeSrc": "10039:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10039:72:10"
															},
															"nativeSrc": "10039:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10039:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9676:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9786:9:10",
														"nodeType": "YulTypedName",
														"src": "9786:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9798:6:10",
														"nodeType": "YulTypedName",
														"src": "9798:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9806:6:10",
														"nodeType": "YulTypedName",
														"src": "9806:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9814:6:10",
														"nodeType": "YulTypedName",
														"src": "9814:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9825:4:10",
														"nodeType": "YulTypedName",
														"src": "9825:4:10",
														"type": ""
													}
												],
												"src": "9676:442:10"
											},
											{
												"body": {
													"nativeSrc": "10220:73:10",
													"nodeType": "YulBlock",
													"src": "10220:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10237:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10237:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10242:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10242:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10230:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:10"
																},
																"nativeSrc": "10230:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10230:19:10"
															},
															"nativeSrc": "10230:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "10230:19:10"
														},
														{
															"nativeSrc": "10258:29:10",
															"nodeType": "YulAssignment",
															"src": "10258:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10277:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10282:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10282:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:10"
																},
																"nativeSrc": "10273:14:10",
																"nodeType": "YulFunctionCall",
																"src": "10273:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10258:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "10258:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10124:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10192:3:10",
														"nodeType": "YulTypedName",
														"src": "10192:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10197:6:10",
														"nodeType": "YulTypedName",
														"src": "10197:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10208:11:10",
														"nodeType": "YulTypedName",
														"src": "10208:11:10",
														"type": ""
													}
												],
												"src": "10124:169:10"
											},
											{
												"body": {
													"nativeSrc": "10405:62:10",
													"nodeType": "YulBlock",
													"src": "10405:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10427:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10427:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10435:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10435:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10423:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10423:3:10"
																		},
																		"nativeSrc": "10423:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10423:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420696e707574",
																		"kind": "string",
																		"nativeSrc": "10439:20:10",
																		"nodeType": "YulLiteral",
																		"src": "10439:20:10",
																		"type": "",
																		"value": "Insufficient input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10416:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10416:6:10"
																},
																"nativeSrc": "10416:44:10",
																"nodeType": "YulFunctionCall",
																"src": "10416:44:10"
															},
															"nativeSrc": "10416:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "10416:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848",
												"nativeSrc": "10299:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10397:6:10",
														"nodeType": "YulTypedName",
														"src": "10397:6:10",
														"type": ""
													}
												],
												"src": "10299:168:10"
											},
											{
												"body": {
													"nativeSrc": "10619:220:10",
													"nodeType": "YulBlock",
													"src": "10619:220:10",
													"statements": [
														{
															"nativeSrc": "10629:74:10",
															"nodeType": "YulAssignment",
															"src": "10629:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10695:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10695:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10700:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10700:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10636:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10636:58:10"
																},
																"nativeSrc": "10636:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10636:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10629:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10629:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10801:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848",
																	"nativeSrc": "10712:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10712:88:10"
																},
																"nativeSrc": "10712:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10712:93:10"
															},
															"nativeSrc": "10712:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10712:93:10"
														},
														{
															"nativeSrc": "10814:19:10",
															"nodeType": "YulAssignment",
															"src": "10814:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10825:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10825:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10830:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10830:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10821:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10821:3:10"
																},
																"nativeSrc": "10821:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10821:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10814:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10473:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10607:3:10",
														"nodeType": "YulTypedName",
														"src": "10607:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10615:3:10",
														"nodeType": "YulTypedName",
														"src": "10615:3:10",
														"type": ""
													}
												],
												"src": "10473:366:10"
											},
											{
												"body": {
													"nativeSrc": "11016:248:10",
													"nodeType": "YulBlock",
													"src": "11016:248:10",
													"statements": [
														{
															"nativeSrc": "11026:26:10",
															"nodeType": "YulAssignment",
															"src": "11026:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11038:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11038:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11034:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:10"
																},
																"nativeSrc": "11034:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11034:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11026:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11026:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11073:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11073:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11084:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11069:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11069:3:10"
																		},
																		"nativeSrc": "11069:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11069:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11092:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11092:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11098:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11088:3:10"
																		},
																		"nativeSrc": "11088:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11088:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11062:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11062:6:10"
																},
																"nativeSrc": "11062:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11062:47:10"
															},
															"nativeSrc": "11062:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11062:47:10"
														},
														{
															"nativeSrc": "11118:139:10",
															"nodeType": "YulAssignment",
															"src": "11118:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11252:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11252:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11126:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11126:124:10"
																},
																"nativeSrc": "11126:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11126:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11118:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11118:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10845:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10996:9:10",
														"nodeType": "YulTypedName",
														"src": "10996:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11011:4:10",
														"nodeType": "YulTypedName",
														"src": "11011:4:10",
														"type": ""
													}
												],
												"src": "10845:419:10"
											},
											{
												"body": {
													"nativeSrc": "11376:66:10",
													"nodeType": "YulBlock",
													"src": "11376:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11398:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11398:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11406:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11406:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11394:3:10"
																		},
																		"nativeSrc": "11394:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11394:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "11410:24:10",
																		"nodeType": "YulLiteral",
																		"src": "11410:24:10",
																		"type": "",
																		"value": "Insufficient liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11387:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11387:6:10"
																},
																"nativeSrc": "11387:48:10",
																"nodeType": "YulFunctionCall",
																"src": "11387:48:10"
															},
															"nativeSrc": "11387:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "11387:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
												"nativeSrc": "11270:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11368:6:10",
														"nodeType": "YulTypedName",
														"src": "11368:6:10",
														"type": ""
													}
												],
												"src": "11270:172:10"
											},
											{
												"body": {
													"nativeSrc": "11594:220:10",
													"nodeType": "YulBlock",
													"src": "11594:220:10",
													"statements": [
														{
															"nativeSrc": "11604:74:10",
															"nodeType": "YulAssignment",
															"src": "11604:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11670:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11670:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11675:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11675:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11611:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11611:58:10"
																},
																"nativeSrc": "11611:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11611:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11604:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11776:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11776:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																	"nativeSrc": "11687:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11687:88:10"
																},
																"nativeSrc": "11687:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11687:93:10"
															},
															"nativeSrc": "11687:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11687:93:10"
														},
														{
															"nativeSrc": "11789:19:10",
															"nodeType": "YulAssignment",
															"src": "11789:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11800:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11800:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11805:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11805:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11796:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11796:3:10"
																},
																"nativeSrc": "11796:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11796:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11789:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11448:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11582:3:10",
														"nodeType": "YulTypedName",
														"src": "11582:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11590:3:10",
														"nodeType": "YulTypedName",
														"src": "11590:3:10",
														"type": ""
													}
												],
												"src": "11448:366:10"
											},
											{
												"body": {
													"nativeSrc": "11991:248:10",
													"nodeType": "YulBlock",
													"src": "11991:248:10",
													"statements": [
														{
															"nativeSrc": "12001:26:10",
															"nodeType": "YulAssignment",
															"src": "12001:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12013:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12013:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12024:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12024:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12009:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:10"
																},
																"nativeSrc": "12009:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12009:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12001:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12001:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12048:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12048:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12059:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12059:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12044:3:10"
																		},
																		"nativeSrc": "12044:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12044:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12067:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12067:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12073:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12073:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12063:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12063:3:10"
																		},
																		"nativeSrc": "12063:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12063:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12037:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12037:6:10"
																},
																"nativeSrc": "12037:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12037:47:10"
															},
															"nativeSrc": "12037:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12037:47:10"
														},
														{
															"nativeSrc": "12093:139:10",
															"nodeType": "YulAssignment",
															"src": "12093:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12227:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12227:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12101:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12101:124:10"
																},
																"nativeSrc": "12101:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12101:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12093:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12093:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11820:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11971:9:10",
														"nodeType": "YulTypedName",
														"src": "11971:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11986:4:10",
														"nodeType": "YulTypedName",
														"src": "11986:4:10",
														"type": ""
													}
												],
												"src": "11820:419:10"
											},
											{
												"body": {
													"nativeSrc": "12273:152:10",
													"nodeType": "YulBlock",
													"src": "12273:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12290:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12290:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12293:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12293:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12283:6:10"
																},
																"nativeSrc": "12283:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12283:88:10"
															},
															"nativeSrc": "12283:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12283:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12387:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12387:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12390:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12390:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12380:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12380:6:10"
																},
																"nativeSrc": "12380:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12380:15:10"
															},
															"nativeSrc": "12380:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12380:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12411:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12411:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12414:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12414:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12404:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12404:6:10"
																},
																"nativeSrc": "12404:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12404:15:10"
															},
															"nativeSrc": "12404:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12404:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12245:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12245:180:10"
											},
											{
												"body": {
													"nativeSrc": "12479:362:10",
													"nodeType": "YulBlock",
													"src": "12479:362:10",
													"statements": [
														{
															"nativeSrc": "12489:25:10",
															"nodeType": "YulAssignment",
															"src": "12489:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12512:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12512:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12494:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12494:17:10"
																},
																"nativeSrc": "12494:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12494:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12489:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12489:1:10"
																}
															]
														},
														{
															"nativeSrc": "12523:25:10",
															"nodeType": "YulAssignment",
															"src": "12523:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12546:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12546:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12528:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12528:17:10"
																},
																"nativeSrc": "12528:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12528:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12523:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12523:1:10"
																}
															]
														},
														{
															"nativeSrc": "12557:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12557:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12580:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12580:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12583:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12583:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:10"
																},
																"nativeSrc": "12576:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12576:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12561:11:10",
																	"nodeType": "YulTypedName",
																	"src": "12561:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12594:41:10",
															"nodeType": "YulAssignment",
															"src": "12594:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12623:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "12623:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12605:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12605:17:10"
																},
																"nativeSrc": "12605:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12605:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12594:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12594:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12812:22:10",
																"nodeType": "YulBlock",
																"src": "12812:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12814:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12814:16:10"
																			},
																			"nativeSrc": "12814:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12814:18:10"
																		},
																		"nativeSrc": "12814:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12814:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12745:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "12745:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12738:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "12738:6:10"
																				},
																				"nativeSrc": "12738:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12738:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12768:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "12768:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12775:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "12775:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12784:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "12784:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12771:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12771:3:10"
																						},
																						"nativeSrc": "12771:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "12771:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12765:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12765:2:10"
																				},
																				"nativeSrc": "12765:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12765:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12718:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "12718:2:10"
																		},
																		"nativeSrc": "12718:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12698:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12698:6:10"
																},
																"nativeSrc": "12698:113:10",
																"nodeType": "YulFunctionCall",
																"src": "12698:113:10"
															},
															"nativeSrc": "12695:139:10",
															"nodeType": "YulIf",
															"src": "12695:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12431:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12462:1:10",
														"nodeType": "YulTypedName",
														"src": "12462:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12465:1:10",
														"nodeType": "YulTypedName",
														"src": "12465:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12471:7:10",
														"nodeType": "YulTypedName",
														"src": "12471:7:10",
														"type": ""
													}
												],
												"src": "12431:410:10"
											},
											{
												"body": {
													"nativeSrc": "12891:147:10",
													"nodeType": "YulBlock",
													"src": "12891:147:10",
													"statements": [
														{
															"nativeSrc": "12901:25:10",
															"nodeType": "YulAssignment",
															"src": "12901:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12924:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12924:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12906:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12906:17:10"
																},
																"nativeSrc": "12906:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12906:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12901:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12901:1:10"
																}
															]
														},
														{
															"nativeSrc": "12935:25:10",
															"nodeType": "YulAssignment",
															"src": "12935:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12958:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12958:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12940:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12940:17:10"
																},
																"nativeSrc": "12940:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12940:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12935:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12935:1:10"
																}
															]
														},
														{
															"nativeSrc": "12969:16:10",
															"nodeType": "YulAssignment",
															"src": "12969:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12980:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12980:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12983:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12983:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12976:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12976:3:10"
																},
																"nativeSrc": "12976:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12976:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12969:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13009:22:10",
																"nodeType": "YulBlock",
																"src": "13009:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13011:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13011:16:10"
																			},
																			"nativeSrc": "13011:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13011:18:10"
																		},
																		"nativeSrc": "13011:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13011:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13001:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13001:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13004:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13004:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12998:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12998:2:10"
																},
																"nativeSrc": "12998:10:10",
																"nodeType": "YulFunctionCall",
																"src": "12998:10:10"
															},
															"nativeSrc": "12995:36:10",
															"nodeType": "YulIf",
															"src": "12995:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12847:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12878:1:10",
														"nodeType": "YulTypedName",
														"src": "12878:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12881:1:10",
														"nodeType": "YulTypedName",
														"src": "12881:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12887:3:10",
														"nodeType": "YulTypedName",
														"src": "12887:3:10",
														"type": ""
													}
												],
												"src": "12847:191:10"
											},
											{
												"body": {
													"nativeSrc": "13072:152:10",
													"nodeType": "YulBlock",
													"src": "13072:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13089:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13089:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13092:77:10",
																		"nodeType": "YulLiteral",
																		"src": "13092:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13082:6:10"
																},
																"nativeSrc": "13082:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13082:88:10"
															},
															"nativeSrc": "13082:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "13082:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13186:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13186:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13189:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13189:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13179:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13179:6:10"
																},
																"nativeSrc": "13179:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13179:15:10"
															},
															"nativeSrc": "13179:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13179:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13210:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13210:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13213:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13213:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13203:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13203:6:10"
																},
																"nativeSrc": "13203:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13203:15:10"
															},
															"nativeSrc": "13203:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13203:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13044:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "13044:180:10"
											},
											{
												"body": {
													"nativeSrc": "13272:143:10",
													"nodeType": "YulBlock",
													"src": "13272:143:10",
													"statements": [
														{
															"nativeSrc": "13282:25:10",
															"nodeType": "YulAssignment",
															"src": "13282:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13305:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13305:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13287:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13287:17:10"
																},
																"nativeSrc": "13287:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13287:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13282:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13282:1:10"
																}
															]
														},
														{
															"nativeSrc": "13316:25:10",
															"nodeType": "YulAssignment",
															"src": "13316:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13339:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13339:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13321:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13321:17:10"
																},
																"nativeSrc": "13321:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13321:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13316:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13316:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13363:22:10",
																"nodeType": "YulBlock",
																"src": "13363:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13365:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13365:16:10"
																			},
																			"nativeSrc": "13365:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13365:18:10"
																		},
																		"nativeSrc": "13365:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13365:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13360:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13360:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13353:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13353:6:10"
																},
																"nativeSrc": "13353:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13353:9:10"
															},
															"nativeSrc": "13350:35:10",
															"nodeType": "YulIf",
															"src": "13350:35:10"
														},
														{
															"nativeSrc": "13395:14:10",
															"nodeType": "YulAssignment",
															"src": "13395:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13404:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13404:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13407:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13407:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13400:3:10"
																},
																"nativeSrc": "13400:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13400:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13395:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13395:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13230:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13261:1:10",
														"nodeType": "YulTypedName",
														"src": "13261:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13264:1:10",
														"nodeType": "YulTypedName",
														"src": "13264:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13270:1:10",
														"nodeType": "YulTypedName",
														"src": "13270:1:10",
														"type": ""
													}
												],
												"src": "13230:185:10"
											},
											{
												"body": {
													"nativeSrc": "13527:63:10",
													"nodeType": "YulBlock",
													"src": "13527:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13549:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13549:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13557:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13557:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13545:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:10"
																		},
																		"nativeSrc": "13545:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13545:14:10"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e2065787069726564",
																		"kind": "string",
																		"nativeSrc": "13561:21:10",
																		"nodeType": "YulLiteral",
																		"src": "13561:21:10",
																		"type": "",
																		"value": "Transaction expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13538:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13538:6:10"
																},
																"nativeSrc": "13538:45:10",
																"nodeType": "YulFunctionCall",
																"src": "13538:45:10"
															},
															"nativeSrc": "13538:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "13538:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551",
												"nativeSrc": "13421:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13519:6:10",
														"nodeType": "YulTypedName",
														"src": "13519:6:10",
														"type": ""
													}
												],
												"src": "13421:169:10"
											},
											{
												"body": {
													"nativeSrc": "13742:220:10",
													"nodeType": "YulBlock",
													"src": "13742:220:10",
													"statements": [
														{
															"nativeSrc": "13752:74:10",
															"nodeType": "YulAssignment",
															"src": "13752:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13818:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13818:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13823:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13823:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13759:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13759:58:10"
																},
																"nativeSrc": "13759:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13759:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13752:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13924:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13924:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551",
																	"nativeSrc": "13835:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13835:88:10"
																},
																"nativeSrc": "13835:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13835:93:10"
															},
															"nativeSrc": "13835:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13835:93:10"
														},
														{
															"nativeSrc": "13937:19:10",
															"nodeType": "YulAssignment",
															"src": "13937:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13948:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13948:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13953:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13953:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13944:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13944:3:10"
																},
																"nativeSrc": "13944:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13944:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13937:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13596:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13730:3:10",
														"nodeType": "YulTypedName",
														"src": "13730:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13738:3:10",
														"nodeType": "YulTypedName",
														"src": "13738:3:10",
														"type": ""
													}
												],
												"src": "13596:366:10"
											},
											{
												"body": {
													"nativeSrc": "14139:248:10",
													"nodeType": "YulBlock",
													"src": "14139:248:10",
													"statements": [
														{
															"nativeSrc": "14149:26:10",
															"nodeType": "YulAssignment",
															"src": "14149:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14161:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14161:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14172:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14172:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14157:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:10"
																},
																"nativeSrc": "14157:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14157:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14149:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14149:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14196:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14196:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14207:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14207:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14192:3:10"
																		},
																		"nativeSrc": "14192:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14192:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14215:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14215:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14221:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14221:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14211:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14211:3:10"
																		},
																		"nativeSrc": "14211:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14211:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14185:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14185:6:10"
																},
																"nativeSrc": "14185:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14185:47:10"
															},
															"nativeSrc": "14185:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14185:47:10"
														},
														{
															"nativeSrc": "14241:139:10",
															"nodeType": "YulAssignment",
															"src": "14241:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14375:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14375:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14249:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14249:124:10"
																},
																"nativeSrc": "14249:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14249:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14241:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14241:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13968:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14119:9:10",
														"nodeType": "YulTypedName",
														"src": "14119:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14134:4:10",
														"nodeType": "YulTypedName",
														"src": "14134:4:10",
														"type": ""
													}
												],
												"src": "13968:419:10"
											},
											{
												"body": {
													"nativeSrc": "14499:56:10",
													"nodeType": "YulBlock",
													"src": "14499:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14521:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14521:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14529:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14529:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14517:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14517:3:10"
																		},
																		"nativeSrc": "14517:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14517:14:10"
																	},
																	{
																		"hexValue": "4f6e6c7920322d746f6b656e",
																		"kind": "string",
																		"nativeSrc": "14533:14:10",
																		"nodeType": "YulLiteral",
																		"src": "14533:14:10",
																		"type": "",
																		"value": "Only 2-token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14510:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14510:6:10"
																},
																"nativeSrc": "14510:38:10",
																"nodeType": "YulFunctionCall",
																"src": "14510:38:10"
															},
															"nativeSrc": "14510:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "14510:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a",
												"nativeSrc": "14393:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14491:6:10",
														"nodeType": "YulTypedName",
														"src": "14491:6:10",
														"type": ""
													}
												],
												"src": "14393:162:10"
											},
											{
												"body": {
													"nativeSrc": "14707:220:10",
													"nodeType": "YulBlock",
													"src": "14707:220:10",
													"statements": [
														{
															"nativeSrc": "14717:74:10",
															"nodeType": "YulAssignment",
															"src": "14717:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14788:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14724:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14724:58:10"
																},
																"nativeSrc": "14724:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14724:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14717:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14717:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14889:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14889:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a",
																	"nativeSrc": "14800:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14800:88:10"
																},
																"nativeSrc": "14800:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14800:93:10"
															},
															"nativeSrc": "14800:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14800:93:10"
														},
														{
															"nativeSrc": "14902:19:10",
															"nodeType": "YulAssignment",
															"src": "14902:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14913:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14913:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14918:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14918:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14909:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14909:3:10"
																},
																"nativeSrc": "14909:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14909:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14902:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14902:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14561:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14695:3:10",
														"nodeType": "YulTypedName",
														"src": "14695:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14703:3:10",
														"nodeType": "YulTypedName",
														"src": "14703:3:10",
														"type": ""
													}
												],
												"src": "14561:366:10"
											},
											{
												"body": {
													"nativeSrc": "15104:248:10",
													"nodeType": "YulBlock",
													"src": "15104:248:10",
													"statements": [
														{
															"nativeSrc": "15114:26:10",
															"nodeType": "YulAssignment",
															"src": "15114:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15126:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15126:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15122:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15122:3:10"
																},
																"nativeSrc": "15122:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15122:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15114:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15114:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15161:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15161:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15172:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15172:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15157:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15157:3:10"
																		},
																		"nativeSrc": "15157:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15157:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15180:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15180:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15186:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15186:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15176:3:10"
																		},
																		"nativeSrc": "15176:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15176:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15150:6:10"
																},
																"nativeSrc": "15150:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15150:47:10"
															},
															"nativeSrc": "15150:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15150:47:10"
														},
														{
															"nativeSrc": "15206:139:10",
															"nodeType": "YulAssignment",
															"src": "15206:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15340:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15340:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15214:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15214:124:10"
																},
																"nativeSrc": "15214:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15214:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15206:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15206:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14933:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15084:9:10",
														"nodeType": "YulTypedName",
														"src": "15084:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15099:4:10",
														"nodeType": "YulTypedName",
														"src": "15099:4:10",
														"type": ""
													}
												],
												"src": "14933:419:10"
											},
											{
												"body": {
													"nativeSrc": "15386:152:10",
													"nodeType": "YulBlock",
													"src": "15386:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15403:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15406:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15406:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15396:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15396:6:10"
																},
																"nativeSrc": "15396:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15396:88:10"
															},
															"nativeSrc": "15396:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15396:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15500:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15500:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15503:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15503:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15493:6:10"
																},
																"nativeSrc": "15493:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15493:15:10"
															},
															"nativeSrc": "15493:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15493:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15524:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15524:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15527:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15527:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15517:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15517:6:10"
																},
																"nativeSrc": "15517:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15517:15:10"
															},
															"nativeSrc": "15517:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15517:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15358:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15358:180:10"
											},
											{
												"body": {
													"nativeSrc": "15610:263:10",
													"nodeType": "YulBlock",
													"src": "15610:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "15656:83:10",
																"nodeType": "YulBlock",
																"src": "15656:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15658:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "15658:77:10"
																			},
																			"nativeSrc": "15658:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15658:79:10"
																		},
																		"nativeSrc": "15658:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15658:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15631:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "15631:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15640:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15627:3:10"
																		},
																		"nativeSrc": "15627:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15627:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15652:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15652:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15623:3:10"
																},
																"nativeSrc": "15623:32:10",
																"nodeType": "YulFunctionCall",
																"src": "15623:32:10"
															},
															"nativeSrc": "15620:119:10",
															"nodeType": "YulIf",
															"src": "15620:119:10"
														},
														{
															"nativeSrc": "15749:117:10",
															"nodeType": "YulBlock",
															"src": "15749:117:10",
															"statements": [
																{
																	"nativeSrc": "15764:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15764:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15778:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15778:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15768:6:10",
																			"nodeType": "YulTypedName",
																			"src": "15768:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15793:63:10",
																	"nodeType": "YulAssignment",
																	"src": "15793:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15828:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "15828:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15839:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "15839:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15824:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "15824:3:10"
																				},
																				"nativeSrc": "15824:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15824:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15848:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "15848:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15803:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "15803:20:10"
																		},
																		"nativeSrc": "15803:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15803:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15793:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "15793:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "15544:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15580:9:10",
														"nodeType": "YulTypedName",
														"src": "15580:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15591:7:10",
														"nodeType": "YulTypedName",
														"src": "15591:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15603:6:10",
														"nodeType": "YulTypedName",
														"src": "15603:6:10",
														"type": ""
													}
												],
												"src": "15544:329:10"
											},
											{
												"body": {
													"nativeSrc": "15985:63:10",
													"nodeType": "YulBlock",
													"src": "15985:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16007:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16007:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16015:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16015:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16003:3:10"
																		},
																		"nativeSrc": "16003:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16003:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f7574707574",
																		"kind": "string",
																		"nativeSrc": "16019:21:10",
																		"nodeType": "YulLiteral",
																		"src": "16019:21:10",
																		"type": "",
																		"value": "Insufficient output"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15996:6:10"
																},
																"nativeSrc": "15996:45:10",
																"nodeType": "YulFunctionCall",
																"src": "15996:45:10"
															},
															"nativeSrc": "15996:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "15996:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
												"nativeSrc": "15879:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15977:6:10",
														"nodeType": "YulTypedName",
														"src": "15977:6:10",
														"type": ""
													}
												],
												"src": "15879:169:10"
											},
											{
												"body": {
													"nativeSrc": "16200:220:10",
													"nodeType": "YulBlock",
													"src": "16200:220:10",
													"statements": [
														{
															"nativeSrc": "16210:74:10",
															"nodeType": "YulAssignment",
															"src": "16210:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16276:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16281:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16281:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16217:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16217:58:10"
																},
																"nativeSrc": "16217:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16217:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16382:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16382:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																	"nativeSrc": "16293:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16293:88:10"
																},
																"nativeSrc": "16293:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16293:93:10"
															},
															"nativeSrc": "16293:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16293:93:10"
														},
														{
															"nativeSrc": "16395:19:10",
															"nodeType": "YulAssignment",
															"src": "16395:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16406:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16406:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16411:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16411:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16402:3:10"
																},
																"nativeSrc": "16402:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16402:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16395:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16054:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16188:3:10",
														"nodeType": "YulTypedName",
														"src": "16188:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16196:3:10",
														"nodeType": "YulTypedName",
														"src": "16196:3:10",
														"type": ""
													}
												],
												"src": "16054:366:10"
											},
											{
												"body": {
													"nativeSrc": "16597:248:10",
													"nodeType": "YulBlock",
													"src": "16597:248:10",
													"statements": [
														{
															"nativeSrc": "16607:26:10",
															"nodeType": "YulAssignment",
															"src": "16607:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16619:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16619:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16630:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16630:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:10"
																},
																"nativeSrc": "16615:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16615:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16607:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16607:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16654:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16650:3:10"
																		},
																		"nativeSrc": "16650:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16650:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16673:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16673:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16679:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16669:3:10"
																		},
																		"nativeSrc": "16669:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16669:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16643:6:10"
																},
																"nativeSrc": "16643:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16643:47:10"
															},
															"nativeSrc": "16643:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16643:47:10"
														},
														{
															"nativeSrc": "16699:139:10",
															"nodeType": "YulAssignment",
															"src": "16699:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16833:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16833:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16707:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16707:124:10"
																},
																"nativeSrc": "16707:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16707:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16699:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16699:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16426:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16577:9:10",
														"nodeType": "YulTypedName",
														"src": "16577:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16592:4:10",
														"nodeType": "YulTypedName",
														"src": "16592:4:10",
														"type": ""
													}
												],
												"src": "16426:419:10"
											},
											{
												"body": {
													"nativeSrc": "16896:149:10",
													"nodeType": "YulBlock",
													"src": "16896:149:10",
													"statements": [
														{
															"nativeSrc": "16906:25:10",
															"nodeType": "YulAssignment",
															"src": "16906:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16929:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16929:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16911:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16911:17:10"
																},
																"nativeSrc": "16911:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16911:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16906:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16906:1:10"
																}
															]
														},
														{
															"nativeSrc": "16940:25:10",
															"nodeType": "YulAssignment",
															"src": "16940:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16963:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16963:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16945:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16945:17:10"
																},
																"nativeSrc": "16945:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16945:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16940:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16940:1:10"
																}
															]
														},
														{
															"nativeSrc": "16974:17:10",
															"nodeType": "YulAssignment",
															"src": "16974:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16986:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16986:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16989:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16989:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16982:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16982:3:10"
																},
																"nativeSrc": "16982:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16982:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16974:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16974:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17016:22:10",
																"nodeType": "YulBlock",
																"src": "17016:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17018:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17018:16:10"
																			},
																			"nativeSrc": "17018:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17018:18:10"
																		},
																		"nativeSrc": "17018:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17018:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17007:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17007:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17013:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17013:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17004:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17004:2:10"
																},
																"nativeSrc": "17004:11:10",
																"nodeType": "YulFunctionCall",
																"src": "17004:11:10"
															},
															"nativeSrc": "17001:37:10",
															"nodeType": "YulIf",
															"src": "17001:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16851:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16882:1:10",
														"nodeType": "YulTypedName",
														"src": "16882:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16885:1:10",
														"nodeType": "YulTypedName",
														"src": "16885:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16891:4:10",
														"nodeType": "YulTypedName",
														"src": "16891:4:10",
														"type": ""
													}
												],
												"src": "16851:194:10"
											},
											{
												"body": {
													"nativeSrc": "17079:152:10",
													"nodeType": "YulBlock",
													"src": "17079:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17096:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17096:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17099:77:10",
																		"nodeType": "YulLiteral",
																		"src": "17099:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17089:6:10"
																},
																"nativeSrc": "17089:88:10",
																"nodeType": "YulFunctionCall",
																"src": "17089:88:10"
															},
															"nativeSrc": "17089:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "17089:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17193:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17193:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17196:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17196:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17186:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17186:6:10"
																},
																"nativeSrc": "17186:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17186:15:10"
															},
															"nativeSrc": "17186:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17186:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17217:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17217:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17220:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17220:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17210:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17210:6:10"
																},
																"nativeSrc": "17210:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17210:15:10"
															},
															"nativeSrc": "17210:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17210:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "17051:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "17051:180:10"
											},
											{
												"body": {
													"nativeSrc": "17302:53:10",
													"nodeType": "YulBlock",
													"src": "17302:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17319:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17319:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17342:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "17342:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17324:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "17324:17:10"
																		},
																		"nativeSrc": "17324:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17324:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17312:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17312:6:10"
																},
																"nativeSrc": "17312:37:10",
																"nodeType": "YulFunctionCall",
																"src": "17312:37:10"
															},
															"nativeSrc": "17312:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "17312:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "17237:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17290:5:10",
														"nodeType": "YulTypedName",
														"src": "17290:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17297:3:10",
														"nodeType": "YulTypedName",
														"src": "17297:3:10",
														"type": ""
													}
												],
												"src": "17237:118:10"
											},
											{
												"body": {
													"nativeSrc": "17543:371:10",
													"nodeType": "YulBlock",
													"src": "17543:371:10",
													"statements": [
														{
															"nativeSrc": "17553:27:10",
															"nodeType": "YulAssignment",
															"src": "17553:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17565:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17565:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17576:3:10",
																		"nodeType": "YulLiteral",
																		"src": "17576:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17561:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17561:3:10"
																},
																"nativeSrc": "17561:19:10",
																"nodeType": "YulFunctionCall",
																"src": "17561:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17553:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17553:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17634:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17634:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17647:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17658:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17658:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17643:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17643:3:10"
																		},
																		"nativeSrc": "17643:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17643:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17590:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17590:43:10"
																},
																"nativeSrc": "17590:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17590:71:10"
															},
															"nativeSrc": "17590:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17590:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17715:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17715:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17728:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17728:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17739:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17739:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17724:3:10"
																		},
																		"nativeSrc": "17724:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17724:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17671:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17671:43:10"
																},
																"nativeSrc": "17671:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17671:72:10"
															},
															"nativeSrc": "17671:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17671:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17797:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17797:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17810:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17821:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17821:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17806:3:10"
																		},
																		"nativeSrc": "17806:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17806:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17753:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17753:43:10"
																},
																"nativeSrc": "17753:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17753:72:10"
															},
															"nativeSrc": "17753:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17753:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17879:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17879:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17892:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17892:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17903:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17903:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17888:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17888:3:10"
																		},
																		"nativeSrc": "17888:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17888:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17835:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17835:43:10"
																},
																"nativeSrc": "17835:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17835:72:10"
															},
															"nativeSrc": "17835:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17835:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17361:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17491:9:10",
														"nodeType": "YulTypedName",
														"src": "17491:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17503:6:10",
														"nodeType": "YulTypedName",
														"src": "17503:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17511:6:10",
														"nodeType": "YulTypedName",
														"src": "17511:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17519:6:10",
														"nodeType": "YulTypedName",
														"src": "17519:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17527:6:10",
														"nodeType": "YulTypedName",
														"src": "17527:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17538:4:10",
														"nodeType": "YulTypedName",
														"src": "17538:4:10",
														"type": ""
													}
												],
												"src": "17361:553:10"
											},
											{
												"body": {
													"nativeSrc": "18026:55:10",
													"nodeType": "YulBlock",
													"src": "18026:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18048:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18048:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18056:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18056:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18044:3:10"
																		},
																		"nativeSrc": "18044:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18044:14:10"
																	},
																	{
																		"hexValue": "4e6f207265736572766573",
																		"kind": "string",
																		"nativeSrc": "18060:13:10",
																		"nodeType": "YulLiteral",
																		"src": "18060:13:10",
																		"type": "",
																		"value": "No reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18037:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18037:6:10"
																},
																"nativeSrc": "18037:37:10",
																"nodeType": "YulFunctionCall",
																"src": "18037:37:10"
															},
															"nativeSrc": "18037:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "18037:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
												"nativeSrc": "17920:161:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18018:6:10",
														"nodeType": "YulTypedName",
														"src": "18018:6:10",
														"type": ""
													}
												],
												"src": "17920:161:10"
											},
											{
												"body": {
													"nativeSrc": "18233:220:10",
													"nodeType": "YulBlock",
													"src": "18233:220:10",
													"statements": [
														{
															"nativeSrc": "18243:74:10",
															"nodeType": "YulAssignment",
															"src": "18243:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18309:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18314:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18250:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18250:58:10"
																},
																"nativeSrc": "18250:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18250:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18243:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18415:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18415:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																	"nativeSrc": "18326:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18326:88:10"
																},
																"nativeSrc": "18326:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18326:93:10"
															},
															"nativeSrc": "18326:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18326:93:10"
														},
														{
															"nativeSrc": "18428:19:10",
															"nodeType": "YulAssignment",
															"src": "18428:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18439:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18439:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18444:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18444:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18435:3:10"
																},
																"nativeSrc": "18435:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18435:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18428:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18087:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18221:3:10",
														"nodeType": "YulTypedName",
														"src": "18221:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18229:3:10",
														"nodeType": "YulTypedName",
														"src": "18229:3:10",
														"type": ""
													}
												],
												"src": "18087:366:10"
											},
											{
												"body": {
													"nativeSrc": "18630:248:10",
													"nodeType": "YulBlock",
													"src": "18630:248:10",
													"statements": [
														{
															"nativeSrc": "18640:26:10",
															"nodeType": "YulAssignment",
															"src": "18640:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18652:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18652:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18663:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18663:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18648:3:10"
																},
																"nativeSrc": "18648:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18648:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18640:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18640:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18687:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18687:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18698:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18698:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18683:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18683:3:10"
																		},
																		"nativeSrc": "18683:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18683:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18706:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18706:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18712:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18712:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18702:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18702:3:10"
																		},
																		"nativeSrc": "18702:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18702:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18676:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18676:6:10"
																},
																"nativeSrc": "18676:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18676:47:10"
															},
															"nativeSrc": "18676:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18676:47:10"
														},
														{
															"nativeSrc": "18732:139:10",
															"nodeType": "YulAssignment",
															"src": "18732:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18866:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18866:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18740:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18740:124:10"
																},
																"nativeSrc": "18740:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18740:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18732:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18732:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18459:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18610:9:10",
														"nodeType": "YulTypedName",
														"src": "18610:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18625:4:10",
														"nodeType": "YulTypedName",
														"src": "18625:4:10",
														"type": ""
													}
												],
												"src": "18459:419:10"
											},
											{
												"body": {
													"nativeSrc": "18990:58:10",
													"nodeType": "YulBlock",
													"src": "18990:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19012:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19020:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19008:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19008:3:10"
																		},
																		"nativeSrc": "19008:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19008:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742041",
																		"kind": "string",
																		"nativeSrc": "19024:16:10",
																		"nodeType": "YulLiteral",
																		"src": "19024:16:10",
																		"type": "",
																		"value": "Insufficient A"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19001:6:10"
																},
																"nativeSrc": "19001:40:10",
																"nodeType": "YulFunctionCall",
																"src": "19001:40:10"
															},
															"nativeSrc": "19001:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "19001:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
												"nativeSrc": "18884:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18982:6:10",
														"nodeType": "YulTypedName",
														"src": "18982:6:10",
														"type": ""
													}
												],
												"src": "18884:164:10"
											},
											{
												"body": {
													"nativeSrc": "19200:220:10",
													"nodeType": "YulBlock",
													"src": "19200:220:10",
													"statements": [
														{
															"nativeSrc": "19210:74:10",
															"nodeType": "YulAssignment",
															"src": "19210:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19276:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19281:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19281:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19217:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19217:58:10"
																},
																"nativeSrc": "19217:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19217:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19210:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19382:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19382:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																	"nativeSrc": "19293:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19293:88:10"
																},
																"nativeSrc": "19293:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19293:93:10"
															},
															"nativeSrc": "19293:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19293:93:10"
														},
														{
															"nativeSrc": "19395:19:10",
															"nodeType": "YulAssignment",
															"src": "19395:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19406:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19406:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19411:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19411:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19402:3:10"
																},
																"nativeSrc": "19402:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19402:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19395:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19054:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19188:3:10",
														"nodeType": "YulTypedName",
														"src": "19188:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19196:3:10",
														"nodeType": "YulTypedName",
														"src": "19196:3:10",
														"type": ""
													}
												],
												"src": "19054:366:10"
											},
											{
												"body": {
													"nativeSrc": "19597:248:10",
													"nodeType": "YulBlock",
													"src": "19597:248:10",
													"statements": [
														{
															"nativeSrc": "19607:26:10",
															"nodeType": "YulAssignment",
															"src": "19607:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19619:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19619:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19630:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19630:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19615:3:10"
																},
																"nativeSrc": "19615:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19615:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19607:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19607:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19654:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19650:3:10"
																		},
																		"nativeSrc": "19650:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19650:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19673:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19673:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19679:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19669:3:10"
																		},
																		"nativeSrc": "19669:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19669:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19643:6:10"
																},
																"nativeSrc": "19643:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19643:47:10"
															},
															"nativeSrc": "19643:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19643:47:10"
														},
														{
															"nativeSrc": "19699:139:10",
															"nodeType": "YulAssignment",
															"src": "19699:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19833:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19833:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19707:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19707:124:10"
																},
																"nativeSrc": "19707:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19707:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19699:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19699:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19426:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19577:9:10",
														"nodeType": "YulTypedName",
														"src": "19577:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19592:4:10",
														"nodeType": "YulTypedName",
														"src": "19592:4:10",
														"type": ""
													}
												],
												"src": "19426:419:10"
											},
											{
												"body": {
													"nativeSrc": "19957:58:10",
													"nodeType": "YulBlock",
													"src": "19957:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19979:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19979:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19987:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19987:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19975:3:10"
																		},
																		"nativeSrc": "19975:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19975:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042",
																		"kind": "string",
																		"nativeSrc": "19991:16:10",
																		"nodeType": "YulLiteral",
																		"src": "19991:16:10",
																		"type": "",
																		"value": "Insufficient B"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19968:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19968:6:10"
																},
																"nativeSrc": "19968:40:10",
																"nodeType": "YulFunctionCall",
																"src": "19968:40:10"
															},
															"nativeSrc": "19968:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "19968:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
												"nativeSrc": "19851:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19949:6:10",
														"nodeType": "YulTypedName",
														"src": "19949:6:10",
														"type": ""
													}
												],
												"src": "19851:164:10"
											},
											{
												"body": {
													"nativeSrc": "20167:220:10",
													"nodeType": "YulBlock",
													"src": "20167:220:10",
													"statements": [
														{
															"nativeSrc": "20177:74:10",
															"nodeType": "YulAssignment",
															"src": "20177:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20243:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20243:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20248:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20184:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20184:58:10"
																},
																"nativeSrc": "20184:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20184:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20177:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20349:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20349:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																	"nativeSrc": "20260:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20260:88:10"
																},
																"nativeSrc": "20260:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20260:93:10"
															},
															"nativeSrc": "20260:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20260:93:10"
														},
														{
															"nativeSrc": "20362:19:10",
															"nodeType": "YulAssignment",
															"src": "20362:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20373:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20373:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20378:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20378:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20369:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20369:3:10"
																},
																"nativeSrc": "20369:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20369:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20362:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20362:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20021:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20155:3:10",
														"nodeType": "YulTypedName",
														"src": "20155:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20163:3:10",
														"nodeType": "YulTypedName",
														"src": "20163:3:10",
														"type": ""
													}
												],
												"src": "20021:366:10"
											},
											{
												"body": {
													"nativeSrc": "20564:248:10",
													"nodeType": "YulBlock",
													"src": "20564:248:10",
													"statements": [
														{
															"nativeSrc": "20574:26:10",
															"nodeType": "YulAssignment",
															"src": "20574:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20586:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20586:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20582:3:10"
																},
																"nativeSrc": "20582:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20582:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20574:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20621:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20621:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20632:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20632:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20617:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20617:3:10"
																		},
																		"nativeSrc": "20617:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20617:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20640:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20640:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20646:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20636:3:10"
																		},
																		"nativeSrc": "20636:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20636:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20610:6:10"
																},
																"nativeSrc": "20610:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20610:47:10"
															},
															"nativeSrc": "20610:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20610:47:10"
														},
														{
															"nativeSrc": "20666:139:10",
															"nodeType": "YulAssignment",
															"src": "20666:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20800:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20800:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20674:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20674:124:10"
																},
																"nativeSrc": "20674:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20674:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20666:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20666:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20393:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20544:9:10",
														"nodeType": "YulTypedName",
														"src": "20544:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20559:4:10",
														"nodeType": "YulTypedName",
														"src": "20559:4:10",
														"type": ""
													}
												],
												"src": "20393:419:10"
											},
											{
												"body": {
													"nativeSrc": "21028:454:10",
													"nodeType": "YulBlock",
													"src": "21028:454:10",
													"statements": [
														{
															"nativeSrc": "21038:27:10",
															"nodeType": "YulAssignment",
															"src": "21038:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21050:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21050:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21061:3:10",
																		"nodeType": "YulLiteral",
																		"src": "21061:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21046:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21046:3:10"
																},
																"nativeSrc": "21046:19:10",
																"nodeType": "YulFunctionCall",
																"src": "21046:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21038:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21038:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21119:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21119:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21132:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21132:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21143:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21143:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21128:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21128:3:10"
																		},
																		"nativeSrc": "21128:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21128:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21075:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21075:43:10"
																},
																"nativeSrc": "21075:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21075:71:10"
															},
															"nativeSrc": "21075:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21075:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21200:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21200:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21213:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21213:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21224:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21224:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21209:3:10"
																		},
																		"nativeSrc": "21209:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21209:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21156:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21156:43:10"
																},
																"nativeSrc": "21156:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21156:72:10"
															},
															"nativeSrc": "21156:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21156:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21282:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21282:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21295:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21295:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21306:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21306:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21291:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21291:3:10"
																		},
																		"nativeSrc": "21291:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21291:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21238:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21238:43:10"
																},
																"nativeSrc": "21238:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21238:72:10"
															},
															"nativeSrc": "21238:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21238:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21364:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21364:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21377:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21377:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21388:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21388:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21373:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21373:3:10"
																		},
																		"nativeSrc": "21373:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21373:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21320:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21320:43:10"
																},
																"nativeSrc": "21320:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21320:72:10"
															},
															"nativeSrc": "21320:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21320:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "21446:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21446:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21459:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21459:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21470:3:10",
																				"nodeType": "YulLiteral",
																				"src": "21470:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21455:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21455:3:10"
																		},
																		"nativeSrc": "21455:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21455:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21402:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21402:43:10"
																},
																"nativeSrc": "21402:73:10",
																"nodeType": "YulFunctionCall",
																"src": "21402:73:10"
															},
															"nativeSrc": "21402:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "21402:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20818:664:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20968:9:10",
														"nodeType": "YulTypedName",
														"src": "20968:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20980:6:10",
														"nodeType": "YulTypedName",
														"src": "20980:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20988:6:10",
														"nodeType": "YulTypedName",
														"src": "20988:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20996:6:10",
														"nodeType": "YulTypedName",
														"src": "20996:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21004:6:10",
														"nodeType": "YulTypedName",
														"src": "21004:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21012:6:10",
														"nodeType": "YulTypedName",
														"src": "21012:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21023:4:10",
														"nodeType": "YulTypedName",
														"src": "21023:4:10",
														"type": ""
													}
												],
												"src": "20818:664:10"
											},
											{
												"body": {
													"nativeSrc": "21594:60:10",
													"nodeType": "YulBlock",
													"src": "21594:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21616:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21616:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21624:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21624:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21612:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21612:3:10"
																		},
																		"nativeSrc": "21612:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21612:14:10"
																	},
																	{
																		"hexValue": "4964656e746963616c20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "21628:18:10",
																		"nodeType": "YulLiteral",
																		"src": "21628:18:10",
																		"type": "",
																		"value": "Identical tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21605:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21605:6:10"
																},
																"nativeSrc": "21605:42:10",
																"nodeType": "YulFunctionCall",
																"src": "21605:42:10"
															},
															"nativeSrc": "21605:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "21605:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
												"nativeSrc": "21488:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21586:6:10",
														"nodeType": "YulTypedName",
														"src": "21586:6:10",
														"type": ""
													}
												],
												"src": "21488:166:10"
											},
											{
												"body": {
													"nativeSrc": "21806:220:10",
													"nodeType": "YulBlock",
													"src": "21806:220:10",
													"statements": [
														{
															"nativeSrc": "21816:74:10",
															"nodeType": "YulAssignment",
															"src": "21816:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21882:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21882:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21887:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21887:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21823:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21823:58:10"
																},
																"nativeSrc": "21823:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21823:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21816:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21988:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21988:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																	"nativeSrc": "21899:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21899:88:10"
																},
																"nativeSrc": "21899:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21899:93:10"
															},
															"nativeSrc": "21899:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21899:93:10"
														},
														{
															"nativeSrc": "22001:19:10",
															"nodeType": "YulAssignment",
															"src": "22001:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22012:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22012:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22017:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22008:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22008:3:10"
																},
																"nativeSrc": "22008:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22008:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22001:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22001:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21660:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21794:3:10",
														"nodeType": "YulTypedName",
														"src": "21794:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21802:3:10",
														"nodeType": "YulTypedName",
														"src": "21802:3:10",
														"type": ""
													}
												],
												"src": "21660:366:10"
											},
											{
												"body": {
													"nativeSrc": "22203:248:10",
													"nodeType": "YulBlock",
													"src": "22203:248:10",
													"statements": [
														{
															"nativeSrc": "22213:26:10",
															"nodeType": "YulAssignment",
															"src": "22213:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22225:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22225:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22236:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22236:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22221:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22221:3:10"
																},
																"nativeSrc": "22221:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22221:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22213:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22213:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22260:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22260:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22271:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22271:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22256:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22256:3:10"
																		},
																		"nativeSrc": "22256:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22256:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22279:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22279:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22285:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22285:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22275:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22275:3:10"
																		},
																		"nativeSrc": "22275:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22275:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22249:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22249:6:10"
																},
																"nativeSrc": "22249:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22249:47:10"
															},
															"nativeSrc": "22249:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22249:47:10"
														},
														{
															"nativeSrc": "22305:139:10",
															"nodeType": "YulAssignment",
															"src": "22305:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22439:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22439:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22313:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22313:124:10"
																},
																"nativeSrc": "22313:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22313:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22305:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22305:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22032:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22183:9:10",
														"nodeType": "YulTypedName",
														"src": "22183:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22198:4:10",
														"nodeType": "YulTypedName",
														"src": "22198:4:10",
														"type": ""
													}
												],
												"src": "22032:419:10"
											},
											{
												"body": {
													"nativeSrc": "22563:56:10",
													"nodeType": "YulBlock",
													"src": "22563:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22585:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22585:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22593:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22593:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22581:3:10"
																		},
																		"nativeSrc": "22581:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22581:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "22597:14:10",
																		"nodeType": "YulLiteral",
																		"src": "22597:14:10",
																		"type": "",
																		"value": "Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22574:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22574:6:10"
																},
																"nativeSrc": "22574:38:10",
																"nodeType": "YulFunctionCall",
																"src": "22574:38:10"
															},
															"nativeSrc": "22574:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "22574:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
												"nativeSrc": "22457:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22555:6:10",
														"nodeType": "YulTypedName",
														"src": "22555:6:10",
														"type": ""
													}
												],
												"src": "22457:162:10"
											},
											{
												"body": {
													"nativeSrc": "22771:220:10",
													"nodeType": "YulBlock",
													"src": "22771:220:10",
													"statements": [
														{
															"nativeSrc": "22781:74:10",
															"nodeType": "YulAssignment",
															"src": "22781:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22847:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22847:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22852:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22852:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22788:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22788:58:10"
																},
																"nativeSrc": "22788:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22788:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22781:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22781:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22953:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22953:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"nativeSrc": "22864:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22864:88:10"
																},
																"nativeSrc": "22864:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22864:93:10"
															},
															"nativeSrc": "22864:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22864:93:10"
														},
														{
															"nativeSrc": "22966:19:10",
															"nodeType": "YulAssignment",
															"src": "22966:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22977:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22982:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22973:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22973:3:10"
																},
																"nativeSrc": "22973:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22973:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22966:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22966:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22625:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22759:3:10",
														"nodeType": "YulTypedName",
														"src": "22759:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22767:3:10",
														"nodeType": "YulTypedName",
														"src": "22767:3:10",
														"type": ""
													}
												],
												"src": "22625:366:10"
											},
											{
												"body": {
													"nativeSrc": "23168:248:10",
													"nodeType": "YulBlock",
													"src": "23168:248:10",
													"statements": [
														{
															"nativeSrc": "23178:26:10",
															"nodeType": "YulAssignment",
															"src": "23178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23190:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23190:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23186:3:10"
																},
																"nativeSrc": "23186:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23178:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23178:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23225:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23225:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23236:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23236:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23221:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23221:3:10"
																		},
																		"nativeSrc": "23221:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23221:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23244:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23244:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23250:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23240:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23240:3:10"
																		},
																		"nativeSrc": "23240:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23240:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23214:6:10"
																},
																"nativeSrc": "23214:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23214:47:10"
															},
															"nativeSrc": "23214:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23214:47:10"
														},
														{
															"nativeSrc": "23270:139:10",
															"nodeType": "YulAssignment",
															"src": "23270:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23404:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23404:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23278:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23278:124:10"
																},
																"nativeSrc": "23278:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23278:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23270:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23270:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22997:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23148:9:10",
														"nodeType": "YulTypedName",
														"src": "23148:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23163:4:10",
														"nodeType": "YulTypedName",
														"src": "23163:4:10",
														"type": ""
													}
												],
												"src": "22997:419:10"
											},
											{
												"body": {
													"nativeSrc": "23464:52:10",
													"nodeType": "YulBlock",
													"src": "23464:52:10",
													"statements": [
														{
															"nativeSrc": "23474:35:10",
															"nodeType": "YulAssignment",
															"src": "23474:35:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23499:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23499:2:10",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23503:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23503:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23495:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23495:3:10"
																},
																"nativeSrc": "23495:14:10",
																"nodeType": "YulFunctionCall",
																"src": "23495:14:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23474:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "23474:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "23422:94:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23445:5:10",
														"nodeType": "YulTypedName",
														"src": "23445:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23455:8:10",
														"nodeType": "YulTypedName",
														"src": "23455:8:10",
														"type": ""
													}
												],
												"src": "23422:94:10"
											},
											{
												"body": {
													"nativeSrc": "23569:47:10",
													"nodeType": "YulBlock",
													"src": "23569:47:10",
													"statements": [
														{
															"nativeSrc": "23579:31:10",
															"nodeType": "YulAssignment",
															"src": "23579:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23604:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23604:5:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "23590:13:10",
																	"nodeType": "YulIdentifier",
																	"src": "23590:13:10"
																},
																"nativeSrc": "23590:20:10",
																"nodeType": "YulFunctionCall",
																"src": "23590:20:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "23579:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "23579:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "23522:94:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23551:5:10",
														"nodeType": "YulTypedName",
														"src": "23551:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "23561:7:10",
														"nodeType": "YulTypedName",
														"src": "23561:7:10",
														"type": ""
													}
												],
												"src": "23522:94:10"
											},
											{
												"body": {
													"nativeSrc": "23669:53:10",
													"nodeType": "YulBlock",
													"src": "23669:53:10",
													"statements": [
														{
															"nativeSrc": "23679:37:10",
															"nodeType": "YulAssignment",
															"src": "23679:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23710:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23710:5:10"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "23690:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "23690:19:10"
																},
																"nativeSrc": "23690:26:10",
																"nodeType": "YulFunctionCall",
																"src": "23690:26:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "23679:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "23679:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "23622:100:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23651:5:10",
														"nodeType": "YulTypedName",
														"src": "23651:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "23661:7:10",
														"nodeType": "YulTypedName",
														"src": "23661:7:10",
														"type": ""
													}
												],
												"src": "23622:100:10"
											},
											{
												"body": {
													"nativeSrc": "23811:74:10",
													"nodeType": "YulBlock",
													"src": "23811:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23828:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23828:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23871:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "23871:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "23853:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "23853:17:10"
																				},
																				"nativeSrc": "23853:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23853:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "23833:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "23833:19:10"
																		},
																		"nativeSrc": "23833:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23833:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23821:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23821:6:10"
																},
																"nativeSrc": "23821:58:10",
																"nodeType": "YulFunctionCall",
																"src": "23821:58:10"
															},
															"nativeSrc": "23821:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "23821:58:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "23728:157:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23799:5:10",
														"nodeType": "YulTypedName",
														"src": "23799:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23806:3:10",
														"nodeType": "YulTypedName",
														"src": "23806:3:10",
														"type": ""
													}
												],
												"src": "23728:157:10"
											},
											{
												"body": {
													"nativeSrc": "24035:253:10",
													"nodeType": "YulBlock",
													"src": "24035:253:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24108:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24108:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24117:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24117:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "24046:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "24046:61:10"
																},
																"nativeSrc": "24046:75:10",
																"nodeType": "YulFunctionCall",
																"src": "24046:75:10"
															},
															"nativeSrc": "24046:75:10",
															"nodeType": "YulExpressionStatement",
															"src": "24046:75:10"
														},
														{
															"nativeSrc": "24130:19:10",
															"nodeType": "YulAssignment",
															"src": "24130:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24141:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24141:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24146:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24137:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24137:3:10"
																},
																"nativeSrc": "24137:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24137:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24130:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24130:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24221:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24221:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24230:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24230:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "24159:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "24159:61:10"
																},
																"nativeSrc": "24159:75:10",
																"nodeType": "YulFunctionCall",
																"src": "24159:75:10"
															},
															"nativeSrc": "24159:75:10",
															"nodeType": "YulExpressionStatement",
															"src": "24159:75:10"
														},
														{
															"nativeSrc": "24243:19:10",
															"nodeType": "YulAssignment",
															"src": "24243:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24254:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24254:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24259:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24259:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24250:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24250:3:10"
																},
																"nativeSrc": "24250:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24250:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24243:3:10"
																}
															]
														},
														{
															"nativeSrc": "24272:10:10",
															"nodeType": "YulAssignment",
															"src": "24272:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "24279:3:10",
																"nodeType": "YulIdentifier",
																"src": "24279:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24272:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "23891:397:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24006:3:10",
														"nodeType": "YulTypedName",
														"src": "24006:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24012:6:10",
														"nodeType": "YulTypedName",
														"src": "24012:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24020:6:10",
														"nodeType": "YulTypedName",
														"src": "24020:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24031:3:10",
														"nodeType": "YulTypedName",
														"src": "24031:3:10",
														"type": ""
													}
												],
												"src": "23891:397:10"
											},
											{
												"body": {
													"nativeSrc": "24448:288:10",
													"nodeType": "YulBlock",
													"src": "24448:288:10",
													"statements": [
														{
															"nativeSrc": "24458:26:10",
															"nodeType": "YulAssignment",
															"src": "24458:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24470:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24470:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24481:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24481:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24466:3:10"
																},
																"nativeSrc": "24466:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24466:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24458:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24458:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24538:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24538:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24551:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24551:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24562:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24562:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24547:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24547:3:10"
																		},
																		"nativeSrc": "24547:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24547:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24494:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24494:43:10"
																},
																"nativeSrc": "24494:71:10",
																"nodeType": "YulFunctionCall",
																"src": "24494:71:10"
															},
															"nativeSrc": "24494:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "24494:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24619:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24619:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24632:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24643:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24643:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24628:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24628:3:10"
																		},
																		"nativeSrc": "24628:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24628:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24575:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24575:43:10"
																},
																"nativeSrc": "24575:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24575:72:10"
															},
															"nativeSrc": "24575:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24575:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24701:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24714:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24714:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24725:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24725:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24710:3:10"
																		},
																		"nativeSrc": "24710:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24710:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24657:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24657:43:10"
																},
																"nativeSrc": "24657:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24657:72:10"
															},
															"nativeSrc": "24657:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24657:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24294:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24404:9:10",
														"nodeType": "YulTypedName",
														"src": "24404:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24416:6:10",
														"nodeType": "YulTypedName",
														"src": "24416:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24424:6:10",
														"nodeType": "YulTypedName",
														"src": "24424:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24432:6:10",
														"nodeType": "YulTypedName",
														"src": "24432:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24443:4:10",
														"nodeType": "YulTypedName",
														"src": "24443:4:10",
														"type": ""
													}
												],
												"src": "24294:442:10"
											},
											{
												"body": {
													"nativeSrc": "24868:206:10",
													"nodeType": "YulBlock",
													"src": "24868:206:10",
													"statements": [
														{
															"nativeSrc": "24878:26:10",
															"nodeType": "YulAssignment",
															"src": "24878:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24890:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24890:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24901:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24901:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24886:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24886:3:10"
																},
																"nativeSrc": "24886:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24886:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24878:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24878:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24958:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24971:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24971:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24982:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24982:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24967:3:10"
																		},
																		"nativeSrc": "24967:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24967:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24914:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24914:43:10"
																},
																"nativeSrc": "24914:71:10",
																"nodeType": "YulFunctionCall",
																"src": "24914:71:10"
															},
															"nativeSrc": "24914:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "24914:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25039:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25039:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25052:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25052:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25063:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25063:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25048:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25048:3:10"
																		},
																		"nativeSrc": "25048:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25048:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24995:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24995:43:10"
																},
																"nativeSrc": "24995:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24995:72:10"
															},
															"nativeSrc": "24995:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24995:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24742:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24832:9:10",
														"nodeType": "YulTypedName",
														"src": "24832:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24844:6:10",
														"nodeType": "YulTypedName",
														"src": "24844:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24852:6:10",
														"nodeType": "YulTypedName",
														"src": "24852:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24863:4:10",
														"nodeType": "YulTypedName",
														"src": "24863:4:10",
														"type": ""
													}
												],
												"src": "24742:332:10"
											},
											{
												"body": {
													"nativeSrc": "25178:124:10",
													"nodeType": "YulBlock",
													"src": "25178:124:10",
													"statements": [
														{
															"nativeSrc": "25188:26:10",
															"nodeType": "YulAssignment",
															"src": "25188:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25200:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25200:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25211:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25211:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25196:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25196:3:10"
																},
																"nativeSrc": "25196:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25196:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25188:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25188:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25268:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25268:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25281:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25281:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25292:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25292:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25277:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25277:3:10"
																		},
																		"nativeSrc": "25277:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25277:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25224:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25224:43:10"
																},
																"nativeSrc": "25224:71:10",
																"nodeType": "YulFunctionCall",
																"src": "25224:71:10"
															},
															"nativeSrc": "25224:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "25224:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "25080:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25150:9:10",
														"nodeType": "YulTypedName",
														"src": "25150:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25162:6:10",
														"nodeType": "YulTypedName",
														"src": "25162:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25173:4:10",
														"nodeType": "YulTypedName",
														"src": "25173:4:10",
														"type": ""
													}
												],
												"src": "25080:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient input\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transaction expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only 2-token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient A\")\n\n    }\n\n    function abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient B\")\n\n    }\n\n    function abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Identical tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063054d50d41461005957806338ed173914610089578063ac41865a146100b9578063baa2abde146100e9578063e8e337001461011a575b5f5ffd5b610073600480360381019061006e91906112f2565b61014c565b6040516100809190611351565b60405180910390f35b6100a3600480360381019061009e9190611425565b610230565b6040516100b09190611572565b60405180910390f35b6100d360048036038101906100ce9190611592565b6105f5565b6040516100e09190611351565b60405180910390f35b61010360048036038101906100fe91906115d0565b6106df565b60405161011192919061166d565b60405180910390f35b610134600480360381019061012f9190611694565b6109eb565b60405161014393929190611745565b60405180910390f35b5f5f841161018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906117d4565b60405180910390fd5b5f8311801561019d57505f82115b6101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d39061183c565b60405180910390fd5b5f6103e5856101eb9190611887565b90505f83826101fa9190611887565b90505f826103e88761020c9190611887565b61021691906118c8565b905080826102249190611928565b93505050509392505050565b60608180421115610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d906119a2565b60405180910390fd5b600286869050146102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390611a0a565b60405180910390fd5b5f86865f8181106102d0576102cf611a28565b5b90506020020160208101906102e59190611a55565b90505f878760018181106102fc576102fb611a28565b5b90506020020160208101906103119190611a55565b90505f61031e8383610c55565b90505f5f5f8381526020019081526020015f20905061036033308e8773ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b5f5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16106103a3578260010154835f01546103ad565b825f015483600101545b915091505f6103bd8f848461014c565b90508d811015610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990611aca565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16101561046e578e845f015f82825461044891906118c8565b9250508190555080846001015f8282546104629190611ae8565b925050819055506104a2565b8e846001015f82825461048191906118c8565b9250508190555080845f015f82825461049a9190611ae8565b925050819055505b6104cd8b828873ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b600267ffffffffffffffff8111156104e8576104e7611b1b565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b5098508e895f8151811061052d5761052c611a28565b5b602002602001018181525050808960018151811061054e5761054d611a28565b5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e4606288888c5f815181106105a7576105a6611a28565b5b60200260200101518d6001815181106105c3576105c2611a28565b5b60200260200101516040516105db9493929190611b57565b60405180910390a250505050505050509695505050505050565b5f5f6106018484610c55565b90505f5f5f8381526020019081526020015f2090505f5f8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1610610659578260010154835f0154610663565b825f015483600101545b915091505f8211801561067557505f81115b6106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90611be4565b60405180910390fd5b81670de0b6b3a7640000826106c99190611887565b6106d39190611928565b94505050505092915050565b5f5f8280421115610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c906119a2565b60405180910390fd5b5f6107308b8b610c55565b90505f5f5f8381526020019081526020015f20905089816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be9061183c565b60405180910390fd5b8060020154815f01548b6107db9190611887565b6107e59190611928565b9450806002015481600101548b6107fc9190611887565b6108069190611928565b93508885101561084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611c4c565b60405180910390fd5b8784101561088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088590611cb4565b60405180910390fd5b84815f015f8282546108a09190611ae8565b9250508190555083816001015f8282546108ba9190611ae8565b9250508190555089816002015f8282546108d49190611ae8565b9250508190555089816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109299190611ae8565b9250508190555061095b87868e73ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b61098687858d73ffffffffffffffffffffffffffffffffffffffff16610d6b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c18d8d88888f6040516109d4959493929190611cd2565b60405180910390a250505097509795505050505050565b5f5f5f8380421115610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906119a2565b60405180910390fd5b8a73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1603610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9790611d6d565b60405180910390fd5b5f610aab8d8d610c55565b90505f5f5f8381526020019081526020015f209050610adc8e8e8e8e8e8e875f015488600101548960020154610dea565b8096508197505050610af08e8e8888610f39565b610b088686835f015484600101548560020154610f99565b93505f8411610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4390611dd5565b60405180910390fd5b85815f015f828254610b5e91906118c8565b9250508190555084816001015f828254610b7891906118c8565b9250508190555083816002015f828254610b9291906118c8565b9250508190555083816003015f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610be791906118c8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b708f8f898989604051610c3c959493929190611cd2565b60405180910390a2505050985098509895505050505050565b5f8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610610cb7578183604051602001610c9c929190611e38565b60405160208183030381529060405280519060200120610ce1565b8282604051602001610cca929190611e38565b604051602081830303815290604052805190602001205b905092915050565b610d65848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d1e93929190611e63565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ffe565b50505050565b610de5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d9e929190611e98565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ffe565b505050565b5f5f5f8303610dfe57888891509150610f2b565b5f610e098c8c611099565b5090505f5f8273ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff1614610e48578688610e4b565b87875b915091505f82828e610e5d9190611887565b610e679190611928565b90508b8111610ec25789811015610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611cb4565b60405180910390fd5b8c819550955050505050610f2b565b5f82848e610ed09190611887565b610eda9190611928565b90508b811015610f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1690611c4c565b60405180910390fd5b808d9650965050505050505b995099975050505050505050565b610f663330848773ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b610f933330838673ffffffffffffffffffffffffffffffffffffffff16610ce9909392919063ffffffff16565b50505050565b5f5f8203610fbc57610fb58587610fb09190611887565b6110e3565b9050610ff5565b610ff2848388610fcc9190611887565b610fd69190611928565b848488610fe39190611887565b610fed9190611928565b61127d565b90505b95945050505050565b5f5f60205f8451602086015f885af18061101d576040513d5f823e3d81fd5b3d92505f519150505f8214611036576001811415611051565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109357836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161108a9190611ebf565b60405180910390fd5b50505050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106110d55782846110d8565b83835b915091509250929050565b5f600182116110f457819050611278565b5f8290505f60019050700100000000000000000000000000000000821061112457608082901c9150604081901b90505b68010000000000000000821061114357604082901c9150602081901b90505b640100000000821061115e57602082901c9150601081901b90505b62010000821061117757601082901c9150600881901b90505b610100821061118f57600882901c9150600481901b90505b601082106111a657600482901c9150600281901b90505b600482106111b657600181901b90505b600181600302901c905060018185816111d2576111d16118fb565b5b048201901c905060018185816111eb576111ea6118fb565b5b048201901c90506001818581611204576112036118fb565b5b048201901c9050600181858161121d5761121c6118fb565b5b048201901c90506001818581611236576112356118fb565b5b048201901c9050600181858161124f5761124e6118fb565b5b048201901c9050611271818581611269576112686118fb565b5b048211611293565b8103925050505b919050565b5f61128b828410848461129e565b905092915050565b5f8115159050919050565b5f6112a884611293565b82841802821890509392505050565b5f5ffd5b5f5ffd5b5f819050919050565b6112d1816112bf565b81146112db575f5ffd5b50565b5f813590506112ec816112c8565b92915050565b5f5f5f60608486031215611309576113086112b7565b5b5f611316868287016112de565b9350506020611327868287016112de565b9250506040611338868287016112de565b9150509250925092565b61134b816112bf565b82525050565b5f6020820190506113645f830184611342565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261138b5761138a61136a565b5b8235905067ffffffffffffffff8111156113a8576113a761136e565b5b6020830191508360208202830111156113c4576113c3611372565b5b9250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113f4826113cb565b9050919050565b611404816113ea565b811461140e575f5ffd5b50565b5f8135905061141f816113fb565b92915050565b5f5f5f5f5f5f60a0878903121561143f5761143e6112b7565b5b5f61144c89828a016112de565b965050602061145d89828a016112de565b955050604087013567ffffffffffffffff81111561147e5761147d6112bb565b5b61148a89828a01611376565b9450945050606061149d89828a01611411565b92505060806114ae89828a016112de565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6114ed816112bf565b82525050565b5f6114fe83836114e4565b60208301905092915050565b5f602082019050919050565b5f611520826114bb565b61152a81856114c5565b9350611535836114d5565b805f5b8381101561156557815161154c88826114f3565b97506115578361150a565b925050600181019050611538565b5085935050505092915050565b5f6020820190508181035f83015261158a8184611516565b905092915050565b5f5f604083850312156115a8576115a76112b7565b5b5f6115b585828601611411565b92505060206115c685828601611411565b9150509250929050565b5f5f5f5f5f5f5f60e0888a0312156115eb576115ea6112b7565b5b5f6115f88a828b01611411565b97505060206116098a828b01611411565b965050604061161a8a828b016112de565b955050606061162b8a828b016112de565b945050608061163c8a828b016112de565b93505060a061164d8a828b01611411565b92505060c061165e8a828b016112de565b91505092959891949750929550565b5f6040820190506116805f830185611342565b61168d6020830184611342565b9392505050565b5f5f5f5f5f5f5f5f610100898b0312156116b1576116b06112b7565b5b5f6116be8b828c01611411565b98505060206116cf8b828c01611411565b97505060406116e08b828c016112de565b96505060606116f18b828c016112de565b95505060806117028b828c016112de565b94505060a06117138b828c016112de565b93505060c06117248b828c01611411565b92505060e06117358b828c016112de565b9150509295985092959890939650565b5f6060820190506117585f830186611342565b6117656020830185611342565b6117726040830184611342565b949350505050565b5f82825260208201905092915050565b7f496e73756666696369656e7420696e70757400000000000000000000000000005f82015250565b5f6117be60128361177a565b91506117c98261178a565b602082019050919050565b5f6020820190508181035f8301526117eb816117b2565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f61182660168361177a565b9150611831826117f2565b602082019050919050565b5f6020820190508181035f8301526118538161181a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611891826112bf565b915061189c836112bf565b92508282026118aa816112bf565b915082820484148315176118c1576118c061185a565b5b5092915050565b5f6118d2826112bf565b91506118dd836112bf565b92508282019050808211156118f5576118f461185a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611932826112bf565b915061193d836112bf565b92508261194d5761194c6118fb565b5b828204905092915050565b7f5472616e73616374696f6e2065787069726564000000000000000000000000005f82015250565b5f61198c60138361177a565b915061199782611958565b602082019050919050565b5f6020820190508181035f8301526119b981611980565b9050919050565b7f4f6e6c7920322d746f6b656e00000000000000000000000000000000000000005f82015250565b5f6119f4600c8361177a565b91506119ff826119c0565b602082019050919050565b5f6020820190508181035f830152611a21816119e8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611a6a57611a696112b7565b5b5f611a7784828501611411565b91505092915050565b7f496e73756666696369656e74206f7574707574000000000000000000000000005f82015250565b5f611ab460138361177a565b9150611abf82611a80565b602082019050919050565b5f6020820190508181035f830152611ae181611aa8565b9050919050565b5f611af2826112bf565b9150611afd836112bf565b9250828203905081811115611b1557611b1461185a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b51816113ea565b82525050565b5f608082019050611b6a5f830187611b48565b611b776020830186611b48565b611b846040830185611342565b611b916060830184611342565b95945050505050565b7f4e6f2072657365727665730000000000000000000000000000000000000000005f82015250565b5f611bce600b8361177a565b9150611bd982611b9a565b602082019050919050565b5f6020820190508181035f830152611bfb81611bc2565b9050919050565b7f496e73756666696369656e7420410000000000000000000000000000000000005f82015250565b5f611c36600e8361177a565b9150611c4182611c02565b602082019050919050565b5f6020820190508181035f830152611c6381611c2a565b9050919050565b7f496e73756666696369656e7420420000000000000000000000000000000000005f82015250565b5f611c9e600e8361177a565b9150611ca982611c6a565b602082019050919050565b5f6020820190508181035f830152611ccb81611c92565b9050919050565b5f60a082019050611ce55f830188611b48565b611cf26020830187611b48565b611cff6040830186611342565b611d0c6060830185611342565b611d196080830184611342565b9695505050505050565b7f4964656e746963616c20746f6b656e73000000000000000000000000000000005f82015250565b5f611d5760108361177a565b9150611d6282611d23565b602082019050919050565b5f6020820190508181035f830152611d8481611d4b565b9050919050565b7f496e73756666696369656e7400000000000000000000000000000000000000005f82015250565b5f611dbf600c8361177a565b9150611dca82611d8b565b602082019050919050565b5f6020820190508181035f830152611dec81611db3565b9050919050565b5f8160601b9050919050565b5f611e0982611df3565b9050919050565b5f611e1a82611dff565b9050919050565b611e32611e2d826113ea565b611e10565b82525050565b5f611e438285611e21565b601482019150611e538284611e21565b6014820191508190509392505050565b5f606082019050611e765f830186611b48565b611e836020830185611b48565b611e906040830184611342565b949350505050565b5f604082019050611eab5f830185611b48565b611eb86020830184611342565b9392505050565b5f602082019050611ed25f830184611b48565b9291505056fea26469706673582212205a45c9c4154c788383953756d8e89aaccd4c84f90d0e8a62513e9dd1f0d0f02564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP3 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP5 GT PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x19D JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP7 DUP7 SWAP1 POP EQ PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B3 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 DUP7 PUSH0 DUP2 DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP PUSH0 DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x31E DUP4 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x360 CALLER ADDRESS DUP15 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x3A3 JUMPI DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x3AD JUMP JUMPDEST DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x3BD DUP16 DUP5 DUP5 PUSH2 0x14C JUMP JUMPDEST SWAP1 POP DUP14 DUP2 LT ISZERO PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x46E JUMPI DUP15 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4A2 JUMP JUMPDEST DUP15 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x4CD DUP12 DUP3 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x1B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x516 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP9 POP DUP15 DUP10 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP9 DUP9 DUP13 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5C3 JUMPI PUSH2 0x5C2 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x601 DUP5 DUP5 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x659 JUMPI DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x663 JUMP JUMPDEST DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x675 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP1 TIMESTAMP GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x730 DUP12 DUP12 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP10 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH0 ADD SLOAD DUP12 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD DUP12 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 LT ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x885 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x95B DUP8 DUP7 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x986 DUP8 DUP6 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 DUP14 DUP14 DUP9 DUP9 DUP16 PUSH1 0x40 MLOAD PUSH2 0x9D4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP1 TIMESTAMP GT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAAB DUP14 DUP14 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xADC DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP8 PUSH0 ADD SLOAD DUP9 PUSH1 0x1 ADD SLOAD DUP10 PUSH1 0x2 ADD SLOAD PUSH2 0xDEA JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP PUSH2 0xAF0 DUP15 DUP15 DUP9 DUP9 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0xB08 DUP7 DUP7 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE7 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 DUP16 DUP16 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xCB7 JUMPI DUP2 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9C SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xCE1 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCA SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD65 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDE5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD9E SWAP3 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 SUB PUSH2 0xDFE JUMPI DUP9 DUP9 SWAP2 POP SWAP2 POP PUSH2 0xF2B JUMP JUMPDEST PUSH0 PUSH2 0xE09 DUP13 DUP13 PUSH2 0x1099 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE48 JUMPI DUP7 DUP9 PUSH2 0xE4B JUMP JUMPDEST DUP8 DUP8 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 DUP3 DUP15 PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP DUP12 DUP2 GT PUSH2 0xEC2 JUMPI DUP10 DUP2 LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAA SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP13 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xF2B JUMP JUMPDEST PUSH0 DUP3 DUP5 DUP15 PUSH2 0xED0 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP DUP12 DUP2 LT ISZERO PUSH2 0xF1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF16 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP14 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP10 POP SWAP10 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF66 CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF93 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0xFBC JUMPI PUSH2 0xFB5 DUP6 DUP8 PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0xFF2 DUP5 DUP4 DUP9 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xFD6 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST DUP5 DUP5 DUP9 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x127D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1036 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1051 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1093 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x10D5 JUMPI DUP3 DUP5 PUSH2 0x10D8 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0x10F4 JUMPI DUP2 SWAP1 POP PUSH2 0x1278 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1124 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1143 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x115E JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1177 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118F JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x11A6 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x11B6 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x121D JUMPI PUSH2 0x121C PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1271 DUP2 DUP6 DUP2 PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1293 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP5 PUSH2 0x1293 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP2 EQ PUSH2 0x12DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12EC DUP2 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1316 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1338 DUP7 DUP3 DUP8 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x134B DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1364 PUSH0 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x136A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x1372 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13F4 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1404 DUP2 PUSH2 0x13EA JUMP JUMPDEST DUP2 EQ PUSH2 0x140E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141F DUP2 PUSH2 0x13FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x145D DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x12BB JUMP JUMPDEST JUMPDEST PUSH2 0x148A DUP10 DUP3 DUP11 ADD PUSH2 0x1376 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x149D DUP10 DUP3 DUP11 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x14AE DUP10 DUP3 DUP11 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14ED DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14FE DUP4 DUP4 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 DUP3 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x152A DUP2 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1535 DUP4 PUSH2 0x14D5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1565 JUMPI DUP2 MLOAD PUSH2 0x154C DUP9 DUP3 PUSH2 0x14F3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1557 DUP4 PUSH2 0x150A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1538 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158A DUP2 DUP5 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH2 0x15A7 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1609 DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x161A DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x162B DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x163C DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x164D DUP11 DUP3 DUP12 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x165E DUP11 DUP3 DUP12 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1680 PUSH0 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x168D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BE DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x16CF DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x16E0 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x16F1 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1702 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1713 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1724 DUP12 DUP3 DUP13 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1735 DUP12 DUP3 DUP13 ADD PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1758 PUSH0 DUP4 ADD DUP7 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1765 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1772 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420696E7075740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BE PUSH1 0x12 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x17C9 DUP3 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17EB DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1826 PUSH1 0x16 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1831 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1853 DUP2 PUSH2 0x181A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1891 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x189C DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18AA DUP2 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x185A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D2 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x18DD DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x185A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1932 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x193D DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x194D JUMPI PUSH2 0x194C PUSH2 0x18FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73616374696F6E206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198C PUSH1 0x13 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1997 DUP3 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B9 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F4 PUSH1 0xC DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x19FF DUP3 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A21 DUP2 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x12B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP5 DUP3 DUP6 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x13 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF2 DUP3 PUSH2 0x12BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFD DUP4 PUSH2 0x12BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x185A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x13EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP8 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1B84 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH1 0xB DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP3 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BFB DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742041000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 PUSH1 0xE DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP3 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C63 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9E PUSH1 0xE DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA9 DUP3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCB DUP2 PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CE5 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1CF2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1CFF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4964656E746963616C20746F6B656E7300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 PUSH1 0x10 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP3 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBF PUSH1 0xC DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCA DUP3 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E09 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 PUSH2 0x1E2D DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x1E10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E43 DUP3 DUP6 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E53 DUP3 DUP5 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E76 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1E83 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1E90 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EAB PUSH0 DUP4 ADD DUP6 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1EB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1342 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS GASLIMIT 0xC9 0xC4 ISZERO 0x4C PUSH25 0x8383953756D8E89AACCD4C84F90D0E8A62513E9DD1F0D0F025 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "371:9751:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9664:455;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7481:1298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8966:419;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6036:1061;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2371:1174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9664:455;9755:14;9801:1;9790:8;:12;9782:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;9856:1;9844:9;:13;:31;;;;;9874:1;9861:10;:14;9844:31;9836:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;9913:20;9947:3;9936:8;:14;;;;:::i;:::-;9913:37;;9961:14;9996:10;9978:15;:28;;;;:::i;:::-;9961:45;;10017:16;10055:15;10048:4;10036:9;:16;;;;:::i;:::-;:34;;;;:::i;:::-;10017:53;;10100:11;10088:9;:23;;;;:::i;:::-;10081:30;;;;;9664:455;;;;;:::o;7481:1298::-;7688:21;7669:8;1114;1095:15;:27;;1087:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7745:1:::1;7730:4;;:11;;:16;7722:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7776:15;7794:4;;7799:1;7794:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7776:25;;7812:16;7831:4;;7836:1;7831:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7812:26;;7851:15;7869:30;7881:7;7890:8;7869:11;:30::i;:::-;7851:48;;7910:17;7930:8;:17;7939:7;7930:17;;;;;;;;;;;7910:37;;7960:69;7993:10;8013:4;8020:8;7967:7;7960:32;;;;:69;;;;;;:::i;:::-;8043:14;8059:15;8088:8;8078:18;;:7;:18;;;:98;;8153:1;:10;;;8165:1;:10;;;8078:98;;;8113:1;:10;;;8125:1;:10;;;8078:98;8042:134;;;;8189:14;8206:45;8219:8;8229:9;8240:10;8206:12;:45::i;:::-;8189:62;;8283:12;8270:9;:25;;8262:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8346:8;8336:18;;:7;:18;;;8332:204;;;8385:8;8371:1;:10;;;:22;;;;;;;:::i;:::-;;;;;;;;8422:9;8408:1;:10;;;:23;;;;;;;:::i;:::-;;;;;;;;8332:204;;;8478:8;8464:1;:10;;;:22;;;;;;;:::i;:::-;;;;;;;;8515:9;8501:1;:10;;;:23;;;;;;;:::i;:::-;;;;;;;;8332:204;8548:44;8578:2;8582:9;8555:8;8548:29;;;;:44;;;;;:::i;:::-;8626:1;8615:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8605:23;;8653:8;8640:7;8648:1;8640:10;;;;;;;;:::i;:::-;;;;;;;:21;;;::::0;::::1;8685:9;8672:7;8680:1;8672:10;;;;;;;;:::i;:::-;;;;;;;:22;;;::::0;::::1;8717:10;8712:59;;;8729:7;8738:8;8748:7;8756:1;8748:10;;;;;;;;:::i;:::-;;;;;;;;8760:7;8768:1;8760:10;;;;;;;;:::i;:::-;;;;;;;;8712:59;;;;;;;;;:::i;:::-;;;;;;;;7711:1068;;;;;;;7481:1298:::0;;;;;;;;;:::o;8966:419::-;9039:10;9062:15;9080:27;9092:6;9100;9080:11;:27::i;:::-;9062:45;;9118:17;9138:8;:17;9147:7;9138:17;;;;;;;;;;;9118:37;;9167:13;9182;9208:6;9199:15;;:6;:15;;;:69;;9245:1;:10;;;9257:1;:10;;;9199:69;;;9218:1;:10;;;9230:1;:10;;;9199:69;9166:102;;;;9298:1;9287:8;:12;:28;;;;;9314:1;9303:8;:12;9287:28;9279:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;9369:8;9361:4;9350:8;:15;;;;:::i;:::-;9349:28;;;;:::i;:::-;9342:35;;;;;;8966:419;;;;:::o;6036:1061::-;6275:12;6289;6256:8;1114;1095:15;:27;;1087:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6314:15:::1;6332:27;6344:6;6352;6332:11;:27::i;:::-;6314:45;;6370:17;6390:8;:17;6399:7;6390:17;;;;;;;;;;;6370:37;;6455:9;6428:1;:11;;:23;6440:10;6428:23;;;;;;;;;;;;;;;;:36;;6420:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6541:1;:16;;;6527:1;:10;;;6515:9;:22;;;;:::i;:::-;6514:43;;;;:::i;:::-;6504:53;;6605:1;:16;;;6591:1;:10;;;6579:9;:22;;;;:::i;:::-;6578:43;;;;:::i;:::-;6568:53;;6653:10;6642:7;:21;;6634:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;6712:10;6701:7;:21;;6693:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;6768:7;6754:1;:10;;;:21;;;;;;;:::i;:::-;;;;;;;;6800:7;6786:1;:10;;;:21;;;;;;;:::i;:::-;;;;;;;;6838:9;6818:1;:16;;;:29;;;;;;;:::i;:::-;;;;;;;;6885:9;6858:1;:11;;:23;6870:10;6858:23;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;6907:40;6935:2;6939:7;6914:6;6907:27;;;;:40;;;;;:::i;:::-;6958;6986:2;6990:7;6965:6;6958:27;;;;:40;;;;;:::i;:::-;7033:10;7016:73;;;7045:6;7053;7061:7;7070;7079:9;7016:73;;;;;;;;;;:::i;:::-;;;;;;;;6303:794;;6036:1061:::0;;;;;;;;;;;:::o;2371:1174::-;2642:12;2656;2670:14;2623:8;1114;1095:15;:27;;1087:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2715:6:::1;2705:16;;:6;:16;;::::0;2697:45:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2755:15;2773:27;2785:6;2793;2773:11;:27::i;:::-;2755:45;;2811:17;2831:8;:17;2840:7;2831:17;;;;;;;;;;;2811:37;;2882:208;2915:6;2923;2944:14;2960;2989:10;3001;3026:1;:10;;;3038:1;:10;;;3063:1;:16;;;2882:18;:208::i;:::-;2861:229;;;;;;;;3103:49;3119:6;3127;3135:7;3144;3103:15;:49::i;:::-;3175:79;3195:7;3204;3213:1;:10;;;3225:1;:10;;;3237:1;:16;;;3175:19;:79::i;:::-;3163:91;;3285:1;3273:9;:13;3265:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3330:7;3316:1;:10;;;:21;;;;;;;:::i;:::-;;;;;;;;3362:7;3348:1;:10;;;:21;;;;;;;:::i;:::-;;;;;;;;3400:9;3380:1;:16;;;:29;;;;;;;:::i;:::-;;;;;;;;3439:9;3420:1;:11;;:15;3432:2;3420:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;3481:10;3466:71;;;3493:6;3501;3509:7;3518;3527:9;3466:71;;;;;;;;;;:::i;:::-;;;;;;;;2686:859;;2371:1174:::0;;;;;;;;;;;;;:::o;1226:217::-;1301:7;1337:6;1328:15;;:6;:15;;;:107;;1419:6;1427;1402:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1392:43;;;;;;1328:107;;;1373:6;1381;1356:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1346:43;;;;;;1328:107;1321:114;;1226:217;;;;:::o;1618:188:4:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;3625:997:9:-;3923:12;3937;3984:1;3966:14;:19;3962:91;;4010:14;4026;4002:39;;;;;;3962:91;4066:14;4085:27;4097:6;4105;4085:11;:27::i;:::-;4065:47;;;4124:7;4133;4154:6;4144:16;;:6;:16;;;:62;;4187:8;4197;4144:62;;;4164:8;4174;4144:62;4123:83;;;;4219:13;4259:2;4253;4236:14;:19;;;;:::i;:::-;4235:26;;;;:::i;:::-;4219:42;;4288:14;4276:8;:26;4272:343;;4339:10;4327:8;:22;;4319:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4391:14;4407:8;4383:33;;;;;;;;;;4272:343;4449:13;4489:2;4483;4466:14;:19;;;;:::i;:::-;4465:26;;;;:::i;:::-;4449:42;;4526:10;4514:8;:22;;4506:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4578:8;4588:14;4570:33;;;;;;;;;3625:997;;;;;;;;;;;;;:::o;4685:258::-;4790:67;4822:10;4842:4;4849:7;4797:6;4790:31;;;;:67;;;;;;:::i;:::-;4868;4900:10;4920:4;4927:7;4875:6;4868:31;;;;:67;;;;;;:::i;:::-;4685:258;;;;:::o;5011:489::-;5194:14;5243:1;5225:14;:19;5221:272;;5273:28;5293:7;5283;:17;;;;:::i;:::-;5273:9;:28::i;:::-;5261:40;;5221:272;;;5346:135;5402:8;5384:14;5374:7;:24;;;;:::i;:::-;5373:37;;;;:::i;:::-;5458:8;5440:14;5430:7;:24;;;;:::i;:::-;5429:37;;;;:::i;:::-;5346:8;:135::i;:::-;5334:147;;5221:272;5011:489;;;;;;;:::o;8370:720:4:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;1505:172:9:-;1580:7;1589;1625:6;1616:15;;:6;:15;;;:53;;1654:6;1662;1616:53;;;1635:6;1643;1616:53;1609:60;;;;1505:172;;;;;:::o;20567:5181:7:-;20615:7;20733:1;20728;:6;20724:53;;20761:1;20754:8;;;;20724:53;21704:10;21717:1;21704:14;;21732:10;21745:1;21732:14;;21772:8;21765:2;:16;21761:92;;21808:3;21801:10;;;;;21836:2;21829:9;;;;;21761:92;21877:7;21870:2;:15;21866:90;;21912:2;21905:9;;;;;21939:2;21932:9;;;;;21866:90;21980:7;21973:2;:15;21969:90;;22015:2;22008:9;;;;;22042:2;22035:9;;;;;21969:90;22083:7;22076:2;:15;22072:89;;22118:2;22111:9;;;;;22145:1;22138:8;;;;;22072:89;22185:6;22178:2;:14;22174:87;;22219:1;22212:8;;;;;22245:1;22238:8;;;;;22174:87;22285:6;22278:2;:14;22274:87;;22319:1;22312:8;;;;;22345:1;22338:8;;;;;22274:87;22385:6;22378:2;:14;22374:61;;22419:1;22412:8;;;;;22374:61;22872:1;22865:2;22861:1;:6;22860:13;;22855:18;;24782:1;24775:2;24771:1;:6;;;;;:::i;:::-;;;24766:2;:11;24765:18;;24760:23;;24891:1;24884:2;24880:1;:6;;;;;:::i;:::-;;;24875:2;:11;24874:18;;24869:23;;25002:1;24995:2;24991:1;:6;;;;;:::i;:::-;;;24986:2;:11;24985:18;;24980:23;;25111:1;25104:2;25100:1;:6;;;;;:::i;:::-;;;25095:2;:11;25094:18;;25089:23;;25221:1;25214:2;25210:1;:6;;;;;:::i;:::-;;;25205:2;:11;25204:18;;25199:23;;25331:1;25324:2;25320:1;:6;;;;;:::i;:::-;;;25315:2;:11;25314:18;;25309:23;;25703:28;25728:2;25724:1;:6;;;;;:::i;:::-;;;25719:2;:11;25703:15;:28::i;:::-;25698:2;:33;25691:40;;;;20567:5181;;;;:::o;5617:111::-;5675:7;5701:20;5713:1;5709;:5;5716:1;5719;5701:7;:20::i;:::-;5694:27;;5617:111;;;;:::o;34795:145:8:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;5071:294:7:-;5149:7;5321:26;5337:9;5321:15;:26::i;:::-;5316:1;5312;:5;5311:36;5306:1;:42;5299:49;;5071:294;;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:117::-;1776:1;1773;1766:12;1790:117;1899:1;1896;1889:12;1913:117;2022:1;2019;2012:12;2053:568;2126:8;2136:6;2186:3;2179:4;2171:6;2167:17;2163:27;2153:122;;2194:79;;:::i;:::-;2153:122;2307:6;2294:20;2284:30;;2337:18;2329:6;2326:30;2323:117;;;2359:79;;:::i;:::-;2323:117;2473:4;2465:6;2461:17;2449:29;;2527:3;2519:4;2511:6;2507:17;2497:8;2493:32;2490:41;2487:128;;;2534:79;;:::i;:::-;2487:128;2053:568;;;;;:::o;2627:126::-;2664:7;2704:42;2697:5;2693:54;2682:65;;2627:126;;;:::o;2759:96::-;2796:7;2825:24;2843:5;2825:24;:::i;:::-;2814:35;;2759:96;;;:::o;2861:122::-;2934:24;2952:5;2934:24;:::i;:::-;2927:5;2924:35;2914:63;;2973:1;2970;2963:12;2914:63;2861:122;:::o;2989:139::-;3035:5;3073:6;3060:20;3051:29;;3089:33;3116:5;3089:33;:::i;:::-;2989:139;;;;:::o;3134:1141::-;3256:6;3264;3272;3280;3288;3296;3345:3;3333:9;3324:7;3320:23;3316:33;3313:120;;;3352:79;;:::i;:::-;3313:120;3472:1;3497:53;3542:7;3533:6;3522:9;3518:22;3497:53;:::i;:::-;3487:63;;3443:117;3599:2;3625:53;3670:7;3661:6;3650:9;3646:22;3625:53;:::i;:::-;3615:63;;3570:118;3755:2;3744:9;3740:18;3727:32;3786:18;3778:6;3775:30;3772:117;;;3808:79;;:::i;:::-;3772:117;3921:80;3993:7;3984:6;3973:9;3969:22;3921:80;:::i;:::-;3903:98;;;;3698:313;4050:2;4076:53;4121:7;4112:6;4101:9;4097:22;4076:53;:::i;:::-;4066:63;;4021:118;4178:3;4205:53;4250:7;4241:6;4230:9;4226:22;4205:53;:::i;:::-;4195:63;;4149:119;3134:1141;;;;;;;;:::o;4281:114::-;4348:6;4382:5;4376:12;4366:22;;4281:114;;;:::o;4401:184::-;4500:11;4534:6;4529:3;4522:19;4574:4;4569:3;4565:14;4550:29;;4401:184;;;;:::o;4591:132::-;4658:4;4681:3;4673:11;;4711:4;4706:3;4702:14;4694:22;;4591:132;;;:::o;4729:108::-;4806:24;4824:5;4806:24;:::i;:::-;4801:3;4794:37;4729:108;;:::o;4843:179::-;4912:10;4933:46;4975:3;4967:6;4933:46;:::i;:::-;5011:4;5006:3;5002:14;4988:28;;4843:179;;;;:::o;5028:113::-;5098:4;5130;5125:3;5121:14;5113:22;;5028:113;;;:::o;5177:732::-;5296:3;5325:54;5373:5;5325:54;:::i;:::-;5395:86;5474:6;5469:3;5395:86;:::i;:::-;5388:93;;5505:56;5555:5;5505:56;:::i;:::-;5584:7;5615:1;5600:284;5625:6;5622:1;5619:13;5600:284;;;5701:6;5695:13;5728:63;5787:3;5772:13;5728:63;:::i;:::-;5721:70;;5814:60;5867:6;5814:60;:::i;:::-;5804:70;;5660:224;5647:1;5644;5640:9;5635:14;;5600:284;;;5604:14;5900:3;5893:10;;5301:608;;;5177:732;;;;:::o;5915:373::-;6058:4;6096:2;6085:9;6081:18;6073:26;;6145:9;6139:4;6135:20;6131:1;6120:9;6116:17;6109:47;6173:108;6276:4;6267:6;6173:108;:::i;:::-;6165:116;;5915:373;;;;:::o;6294:474::-;6362:6;6370;6419:2;6407:9;6398:7;6394:23;6390:32;6387:119;;;6425:79;;:::i;:::-;6387:119;6545:1;6570:53;6615:7;6606:6;6595:9;6591:22;6570:53;:::i;:::-;6560:63;;6516:117;6672:2;6698:53;6743:7;6734:6;6723:9;6719:22;6698:53;:::i;:::-;6688:63;;6643:118;6294:474;;;;;:::o;6774:1203::-;6887:6;6895;6903;6911;6919;6927;6935;6984:3;6972:9;6963:7;6959:23;6955:33;6952:120;;;6991:79;;:::i;:::-;6952:120;7111:1;7136:53;7181:7;7172:6;7161:9;7157:22;7136:53;:::i;:::-;7126:63;;7082:117;7238:2;7264:53;7309:7;7300:6;7289:9;7285:22;7264:53;:::i;:::-;7254:63;;7209:118;7366:2;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7337:118;7494:2;7520:53;7565:7;7556:6;7545:9;7541:22;7520:53;:::i;:::-;7510:63;;7465:118;7622:3;7649:53;7694:7;7685:6;7674:9;7670:22;7649:53;:::i;:::-;7639:63;;7593:119;7751:3;7778:53;7823:7;7814:6;7803:9;7799:22;7778:53;:::i;:::-;7768:63;;7722:119;7880:3;7907:53;7952:7;7943:6;7932:9;7928:22;7907:53;:::i;:::-;7897:63;;7851:119;6774:1203;;;;;;;;;;:::o;7983:332::-;8104:4;8142:2;8131:9;8127:18;8119:26;;8155:71;8223:1;8212:9;8208:17;8199:6;8155:71;:::i;:::-;8236:72;8304:2;8293:9;8289:18;8280:6;8236:72;:::i;:::-;7983:332;;;;;:::o;8321:1349::-;8443:6;8451;8459;8467;8475;8483;8491;8499;8548:3;8536:9;8527:7;8523:23;8519:33;8516:120;;;8555:79;;:::i;:::-;8516:120;8675:1;8700:53;8745:7;8736:6;8725:9;8721:22;8700:53;:::i;:::-;8690:63;;8646:117;8802:2;8828:53;8873:7;8864:6;8853:9;8849:22;8828:53;:::i;:::-;8818:63;;8773:118;8930:2;8956:53;9001:7;8992:6;8981:9;8977:22;8956:53;:::i;:::-;8946:63;;8901:118;9058:2;9084:53;9129:7;9120:6;9109:9;9105:22;9084:53;:::i;:::-;9074:63;;9029:118;9186:3;9213:53;9258:7;9249:6;9238:9;9234:22;9213:53;:::i;:::-;9203:63;;9157:119;9315:3;9342:53;9387:7;9378:6;9367:9;9363:22;9342:53;:::i;:::-;9332:63;;9286:119;9444:3;9471:53;9516:7;9507:6;9496:9;9492:22;9471:53;:::i;:::-;9461:63;;9415:119;9573:3;9600:53;9645:7;9636:6;9625:9;9621:22;9600:53;:::i;:::-;9590:63;;9544:119;8321:1349;;;;;;;;;;;:::o;9676:442::-;9825:4;9863:2;9852:9;9848:18;9840:26;;9876:71;9944:1;9933:9;9929:17;9920:6;9876:71;:::i;:::-;9957:72;10025:2;10014:9;10010:18;10001:6;9957:72;:::i;:::-;10039;10107:2;10096:9;10092:18;10083:6;10039:72;:::i;:::-;9676:442;;;;;;:::o;10124:169::-;10208:11;10242:6;10237:3;10230:19;10282:4;10277:3;10273:14;10258:29;;10124:169;;;;:::o;10299:168::-;10439:20;10435:1;10427:6;10423:14;10416:44;10299:168;:::o;10473:366::-;10615:3;10636:67;10700:2;10695:3;10636:67;:::i;:::-;10629:74;;10712:93;10801:3;10712:93;:::i;:::-;10830:2;10825:3;10821:12;10814:19;;10473:366;;;:::o;10845:419::-;11011:4;11049:2;11038:9;11034:18;11026:26;;11098:9;11092:4;11088:20;11084:1;11073:9;11069:17;11062:47;11126:131;11252:4;11126:131;:::i;:::-;11118:139;;10845:419;;;:::o;11270:172::-;11410:24;11406:1;11398:6;11394:14;11387:48;11270:172;:::o;11448:366::-;11590:3;11611:67;11675:2;11670:3;11611:67;:::i;:::-;11604:74;;11687:93;11776:3;11687:93;:::i;:::-;11805:2;11800:3;11796:12;11789:19;;11448:366;;;:::o;11820:419::-;11986:4;12024:2;12013:9;12009:18;12001:26;;12073:9;12067:4;12063:20;12059:1;12048:9;12044:17;12037:47;12101:131;12227:4;12101:131;:::i;:::-;12093:139;;11820:419;;;:::o;12245:180::-;12293:77;12290:1;12283:88;12390:4;12387:1;12380:15;12414:4;12411:1;12404:15;12431:410;12471:7;12494:20;12512:1;12494:20;:::i;:::-;12489:25;;12528:20;12546:1;12528:20;:::i;:::-;12523:25;;12583:1;12580;12576:9;12605:30;12623:11;12605:30;:::i;:::-;12594:41;;12784:1;12775:7;12771:15;12768:1;12765:22;12745:1;12738:9;12718:83;12695:139;;12814:18;;:::i;:::-;12695:139;12479:362;12431:410;;;;:::o;12847:191::-;12887:3;12906:20;12924:1;12906:20;:::i;:::-;12901:25;;12940:20;12958:1;12940:20;:::i;:::-;12935:25;;12983:1;12980;12976:9;12969:16;;13004:3;13001:1;12998:10;12995:36;;;13011:18;;:::i;:::-;12995:36;12847:191;;;;:::o;13044:180::-;13092:77;13089:1;13082:88;13189:4;13186:1;13179:15;13213:4;13210:1;13203:15;13230:185;13270:1;13287:20;13305:1;13287:20;:::i;:::-;13282:25;;13321:20;13339:1;13321:20;:::i;:::-;13316:25;;13360:1;13350:35;;13365:18;;:::i;:::-;13350:35;13407:1;13404;13400:9;13395:14;;13230:185;;;;:::o;13421:169::-;13561:21;13557:1;13549:6;13545:14;13538:45;13421:169;:::o;13596:366::-;13738:3;13759:67;13823:2;13818:3;13759:67;:::i;:::-;13752:74;;13835:93;13924:3;13835:93;:::i;:::-;13953:2;13948:3;13944:12;13937:19;;13596:366;;;:::o;13968:419::-;14134:4;14172:2;14161:9;14157:18;14149:26;;14221:9;14215:4;14211:20;14207:1;14196:9;14192:17;14185:47;14249:131;14375:4;14249:131;:::i;:::-;14241:139;;13968:419;;;:::o;14393:162::-;14533:14;14529:1;14521:6;14517:14;14510:38;14393:162;:::o;14561:366::-;14703:3;14724:67;14788:2;14783:3;14724:67;:::i;:::-;14717:74;;14800:93;14889:3;14800:93;:::i;:::-;14918:2;14913:3;14909:12;14902:19;;14561:366;;;:::o;14933:419::-;15099:4;15137:2;15126:9;15122:18;15114:26;;15186:9;15180:4;15176:20;15172:1;15161:9;15157:17;15150:47;15214:131;15340:4;15214:131;:::i;:::-;15206:139;;14933:419;;;:::o;15358:180::-;15406:77;15403:1;15396:88;15503:4;15500:1;15493:15;15527:4;15524:1;15517:15;15544:329;15603:6;15652:2;15640:9;15631:7;15627:23;15623:32;15620:119;;;15658:79;;:::i;:::-;15620:119;15778:1;15803:53;15848:7;15839:6;15828:9;15824:22;15803:53;:::i;:::-;15793:63;;15749:117;15544:329;;;;:::o;15879:169::-;16019:21;16015:1;16007:6;16003:14;15996:45;15879:169;:::o;16054:366::-;16196:3;16217:67;16281:2;16276:3;16217:67;:::i;:::-;16210:74;;16293:93;16382:3;16293:93;:::i;:::-;16411:2;16406:3;16402:12;16395:19;;16054:366;;;:::o;16426:419::-;16592:4;16630:2;16619:9;16615:18;16607:26;;16679:9;16673:4;16669:20;16665:1;16654:9;16650:17;16643:47;16707:131;16833:4;16707:131;:::i;:::-;16699:139;;16426:419;;;:::o;16851:194::-;16891:4;16911:20;16929:1;16911:20;:::i;:::-;16906:25;;16945:20;16963:1;16945:20;:::i;:::-;16940:25;;16989:1;16986;16982:9;16974:17;;17013:1;17007:4;17004:11;17001:37;;;17018:18;;:::i;:::-;17001:37;16851:194;;;;:::o;17051:180::-;17099:77;17096:1;17089:88;17196:4;17193:1;17186:15;17220:4;17217:1;17210:15;17237:118;17324:24;17342:5;17324:24;:::i;:::-;17319:3;17312:37;17237:118;;:::o;17361:553::-;17538:4;17576:3;17565:9;17561:19;17553:27;;17590:71;17658:1;17647:9;17643:17;17634:6;17590:71;:::i;:::-;17671:72;17739:2;17728:9;17724:18;17715:6;17671:72;:::i;:::-;17753;17821:2;17810:9;17806:18;17797:6;17753:72;:::i;:::-;17835;17903:2;17892:9;17888:18;17879:6;17835:72;:::i;:::-;17361:553;;;;;;;:::o;17920:161::-;18060:13;18056:1;18048:6;18044:14;18037:37;17920:161;:::o;18087:366::-;18229:3;18250:67;18314:2;18309:3;18250:67;:::i;:::-;18243:74;;18326:93;18415:3;18326:93;:::i;:::-;18444:2;18439:3;18435:12;18428:19;;18087:366;;;:::o;18459:419::-;18625:4;18663:2;18652:9;18648:18;18640:26;;18712:9;18706:4;18702:20;18698:1;18687:9;18683:17;18676:47;18740:131;18866:4;18740:131;:::i;:::-;18732:139;;18459:419;;;:::o;18884:164::-;19024:16;19020:1;19012:6;19008:14;19001:40;18884:164;:::o;19054:366::-;19196:3;19217:67;19281:2;19276:3;19217:67;:::i;:::-;19210:74;;19293:93;19382:3;19293:93;:::i;:::-;19411:2;19406:3;19402:12;19395:19;;19054:366;;;:::o;19426:419::-;19592:4;19630:2;19619:9;19615:18;19607:26;;19679:9;19673:4;19669:20;19665:1;19654:9;19650:17;19643:47;19707:131;19833:4;19707:131;:::i;:::-;19699:139;;19426:419;;;:::o;19851:164::-;19991:16;19987:1;19979:6;19975:14;19968:40;19851:164;:::o;20021:366::-;20163:3;20184:67;20248:2;20243:3;20184:67;:::i;:::-;20177:74;;20260:93;20349:3;20260:93;:::i;:::-;20378:2;20373:3;20369:12;20362:19;;20021:366;;;:::o;20393:419::-;20559:4;20597:2;20586:9;20582:18;20574:26;;20646:9;20640:4;20636:20;20632:1;20621:9;20617:17;20610:47;20674:131;20800:4;20674:131;:::i;:::-;20666:139;;20393:419;;;:::o;20818:664::-;21023:4;21061:3;21050:9;21046:19;21038:27;;21075:71;21143:1;21132:9;21128:17;21119:6;21075:71;:::i;:::-;21156:72;21224:2;21213:9;21209:18;21200:6;21156:72;:::i;:::-;21238;21306:2;21295:9;21291:18;21282:6;21238:72;:::i;:::-;21320;21388:2;21377:9;21373:18;21364:6;21320:72;:::i;:::-;21402:73;21470:3;21459:9;21455:19;21446:6;21402:73;:::i;:::-;20818:664;;;;;;;;:::o;21488:166::-;21628:18;21624:1;21616:6;21612:14;21605:42;21488:166;:::o;21660:366::-;21802:3;21823:67;21887:2;21882:3;21823:67;:::i;:::-;21816:74;;21899:93;21988:3;21899:93;:::i;:::-;22017:2;22012:3;22008:12;22001:19;;21660:366;;;:::o;22032:419::-;22198:4;22236:2;22225:9;22221:18;22213:26;;22285:9;22279:4;22275:20;22271:1;22260:9;22256:17;22249:47;22313:131;22439:4;22313:131;:::i;:::-;22305:139;;22032:419;;;:::o;22457:162::-;22597:14;22593:1;22585:6;22581:14;22574:38;22457:162;:::o;22625:366::-;22767:3;22788:67;22852:2;22847:3;22788:67;:::i;:::-;22781:74;;22864:93;22953:3;22864:93;:::i;:::-;22982:2;22977:3;22973:12;22966:19;;22625:366;;;:::o;22997:419::-;23163:4;23201:2;23190:9;23186:18;23178:26;;23250:9;23244:4;23240:20;23236:1;23225:9;23221:17;23214:47;23278:131;23404:4;23278:131;:::i;:::-;23270:139;;22997:419;;;:::o;23422:94::-;23455:8;23503:5;23499:2;23495:14;23474:35;;23422:94;;;:::o;23522:::-;23561:7;23590:20;23604:5;23590:20;:::i;:::-;23579:31;;23522:94;;;:::o;23622:100::-;23661:7;23690:26;23710:5;23690:26;:::i;:::-;23679:37;;23622:100;;;:::o;23728:157::-;23833:45;23853:24;23871:5;23853:24;:::i;:::-;23833:45;:::i;:::-;23828:3;23821:58;23728:157;;:::o;23891:397::-;24031:3;24046:75;24117:3;24108:6;24046:75;:::i;:::-;24146:2;24141:3;24137:12;24130:19;;24159:75;24230:3;24221:6;24159:75;:::i;:::-;24259:2;24254:3;24250:12;24243:19;;24279:3;24272:10;;23891:397;;;;;:::o;24294:442::-;24443:4;24481:2;24470:9;24466:18;24458:26;;24494:71;24562:1;24551:9;24547:17;24538:6;24494:71;:::i;:::-;24575:72;24643:2;24632:9;24628:18;24619:6;24575:72;:::i;:::-;24657;24725:2;24714:9;24710:18;24701:6;24657:72;:::i;:::-;24294:442;;;;;;:::o;24742:332::-;24863:4;24901:2;24890:9;24886:18;24878:26;;24914:71;24982:1;24971:9;24967:17;24958:6;24914:71;:::i;:::-;24995:72;25063:2;25052:9;25048:18;25039:6;24995:72;:::i;:::-;24742:332;;;;;:::o;25080:222::-;25173:4;25211:2;25200:9;25196:18;25188:26;;25224:71;25292:1;25281:9;25277:17;25268:6;25224:71;:::i;:::-;25080:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1590000",
								"executionCost": "1664",
								"totalCost": "1591664"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getPrice(address,address)": "infinite",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite"
							},
							"internal": {
								"_calculateLiquidity(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_getPairKey(address,address)": "infinite",
								"_quoteAddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_sortTokens(address,address)": "88",
								"_transferTokens(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 10122,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a45c9c4154c788383953756d8e89aaccd4c84f90d0e8a62513e9dd1f0d0f02564736f6c634300081e0033",
									".code": [
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "54D50D4"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "38ED1739"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "AC41865A"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "BAA2ABDE"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "E8E33700"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 10122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9664,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9664,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9664,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 7481,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 7481,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7481,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8966,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8966,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 8966,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6036,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6036,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6036,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2371,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2371,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2371,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9755,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9790,
											"end": 9798,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9790,
											"end": 9802,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9782,
											"end": 9825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9853,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9857,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9861,
											"end": 9871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9861,
											"end": 9875,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9844,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9836,
											"end": 9902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9836,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 9933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9950,
											"name": "PUSH",
											"source": 9,
											"value": "3E5"
										},
										{
											"begin": 9936,
											"end": 9944,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9936,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 9950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 9950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10006,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 9993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9978,
											"end": 10006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9978,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 10006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 10006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10048,
											"end": 10052,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10036,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10036,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 10036,
											"end": 10070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10111,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 10088,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10088,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10111,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 10119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7669,
											"end": 7677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1087,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7730,
											"end": 7734,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7734,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7746,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7722,
											"end": 7763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7722,
											"end": 7763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7798,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7798,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7794,
											"end": 7801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7794,
											"end": 7801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7794,
											"end": 7801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7812,
											"end": 7828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7835,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7835,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7831,
											"end": 7838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7831,
											"end": 7838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7831,
											"end": 7838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7812,
											"end": 7838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7812,
											"end": 7838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7881,
											"end": 7888,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7890,
											"end": 7898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7869,
											"end": 7899,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7869,
											"end": 7899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7946,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7947,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7993,
											"end": 8003,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8017,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8020,
											"end": 8028,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 7967,
											"end": 7974,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7960,
											"end": 7992,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7960,
											"end": 7992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7960,
											"end": 8029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8043,
											"end": 8057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8096,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8078,
											"end": 8096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8085,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8078,
											"end": 8096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8096,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8153,
											"end": 8154,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8153,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8153,
											"end": 8163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8153,
											"end": 8163,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8166,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8175,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8123,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8125,
											"end": 8126,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8125,
											"end": 8135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8125,
											"end": 8135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8125,
											"end": 8135,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8078,
											"end": 8176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8219,
											"end": 8227,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 8229,
											"end": 8238,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8240,
											"end": 8250,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8206,
											"end": 8251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8206,
											"end": 8251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8251,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8295,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8295,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8295,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8262,
											"end": 8319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8262,
											"end": 8319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8354,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8343,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8354,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8385,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8372,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8371,
											"end": 8393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8409,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8408,
											"end": 8418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8408,
											"end": 8431,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8478,
											"end": 8486,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8465,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8464,
											"end": 8474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8464,
											"end": 8486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8502,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8501,
											"end": 8524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 8332,
											"end": 8536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 8578,
											"end": 8580,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8591,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8563,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8548,
											"end": 8577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 8548,
											"end": 8577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 8548,
											"end": 8592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 8615,
											"end": 8628,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8661,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8647,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8648,
											"end": 8649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8640,
											"end": 8650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8679,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8680,
											"end": 8681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8672,
											"end": 8682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8727,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "CD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062"
										},
										{
											"begin": 8729,
											"end": 8736,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8738,
											"end": 8746,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8755,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8748,
											"end": 8758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8767,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 8768,
											"end": 8769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8760,
											"end": 8770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8712,
											"end": 8771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8771,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 8779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 8779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9039,
											"end": 9049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 9092,
											"end": 9098,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9080,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9155,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9118,
											"end": 9155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9118,
											"end": 9155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9214,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9205,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9228,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9240,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9230,
											"end": 9240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 9199,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9303,
											"end": 9315,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9287,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 9279,
											"end": 9331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 9279,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9369,
											"end": 9377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9361,
											"end": 9365,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9350,
											"end": 9358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9350,
											"end": 9365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 9350,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 9349,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 9349,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1087,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6344,
											"end": 6350,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6358,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6332,
											"end": 6359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6332,
											"end": 6359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6407,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 6464,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6428,
											"end": 6439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6450,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6451,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6464,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6464,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6420,
											"end": 6491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6420,
											"end": 6491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6541,
											"end": 6557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6557,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6537,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6524,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6515,
											"end": 6537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6515,
											"end": 6537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6514,
											"end": 6557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6514,
											"end": 6557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6504,
											"end": 6557,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6504,
											"end": 6557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6605,
											"end": 6621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6621,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6591,
											"end": 6601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6588,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6579,
											"end": 6601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6579,
											"end": 6601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6578,
											"end": 6621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6578,
											"end": 6621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6568,
											"end": 6621,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6568,
											"end": 6621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6663,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6649,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6663,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6634,
											"end": 6682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6634,
											"end": 6682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6722,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 6693,
											"end": 6741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6693,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6775,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6754,
											"end": 6775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6786,
											"end": 6796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6786,
											"end": 6807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6818,
											"end": 6834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6818,
											"end": 6847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6818,
											"end": 6847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6885,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6858,
											"end": 6869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6880,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6858,
											"end": 6894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 6935,
											"end": 6937,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6946,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 6920,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6907,
											"end": 6934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6907,
											"end": 6934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 6907,
											"end": 6947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6986,
											"end": 6988,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 6997,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 6971,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6958,
											"end": 6985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6958,
											"end": 6985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6958,
											"end": 6998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7033,
											"end": 7043,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1"
										},
										{
											"begin": 7045,
											"end": 7051,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 7053,
											"end": 7059,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7068,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7077,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7088,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7016,
											"end": 7089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7089,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6303,
											"end": 7097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6303,
											"end": 7097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 7097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1087,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1087,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2705,
											"end": 2721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2705,
											"end": 2721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2697,
											"end": 2742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2697,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2785,
											"end": 2791,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2773,
											"end": 2800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2773,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2848,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2915,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 2999,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3027,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3036,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3039,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3038,
											"end": 3048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3063,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2882,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2882,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 3090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3119,
											"end": 3125,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3103,
											"end": 3152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3103,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3195,
											"end": 3202,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3211,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3226,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3225,
											"end": 3235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3235,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3238,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3237,
											"end": 3253,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3175,
											"end": 3254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3175,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3282,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3286,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3265,
											"end": 3303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3265,
											"end": 3303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3316,
											"end": 3337,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3348,
											"end": 3358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3348,
											"end": 3369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3380,
											"end": 3396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3380,
											"end": 3409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3420,
											"end": 3431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3434,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3420,
											"end": 3448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3448,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3491,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70"
										},
										{
											"begin": 3493,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3507,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3516,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3525,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3536,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3466,
											"end": 3537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3537,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1343,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1402,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1356,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1389,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1328,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3980,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3962,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3962,
											"end": 4053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4024,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4040,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4002,
											"end": 4041,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3962,
											"end": 4053,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3962,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4111,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4085,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4112,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4085,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4195,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4205,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4172,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4123,
											"end": 4206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4123,
											"end": 4206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4123,
											"end": 4206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4123,
											"end": 4206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4250,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4236,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4235,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4302,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4302,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4272,
											"end": 4615,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4349,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4349,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4319,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4405,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4415,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4383,
											"end": 4416,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4615,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4272,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4480,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4466,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4465,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4536,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4522,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4536,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4536,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4506,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4506,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4602,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4822,
											"end": 4832,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4856,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4821,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4790,
											"end": 4821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4927,
											"end": 4934,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4899,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4868,
											"end": 4899,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4868,
											"end": 4899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4868,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5283,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5273,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5301,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5273,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5402,
											"end": 5410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5374,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5373,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5373,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5466,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5454,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5430,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5430,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5429,
											"end": 5466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5429,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5346,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5481,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5346,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5221,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1631,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1631,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1631,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1631,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1631,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1649,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20615,
											"end": 20622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20734,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20728,
											"end": 20729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20728,
											"end": 20734,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20761,
											"end": 20762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21704,
											"end": 21714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21717,
											"end": 21718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21704,
											"end": 21718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21704,
											"end": 21718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21732,
											"end": 21742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21745,
											"end": 21746,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21732,
											"end": 21746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21732,
											"end": 21746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21772,
											"end": 21780,
											"name": "PUSH",
											"source": 7,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 21765,
											"end": 21767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21765,
											"end": 21781,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21808,
											"end": 21811,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21836,
											"end": 21838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21877,
											"end": 21884,
											"name": "PUSH",
											"source": 7,
											"value": "10000000000000000"
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21870,
											"end": 21885,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21912,
											"end": 21914,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21939,
											"end": 21941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 21987,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 21973,
											"end": 21975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21973,
											"end": 21988,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22015,
											"end": 22017,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22042,
											"end": 22044,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22083,
											"end": 22090,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 22076,
											"end": 22078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22076,
											"end": 22091,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22118,
											"end": 22120,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22145,
											"end": 22146,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22185,
											"end": 22191,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 22178,
											"end": 22180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22178,
											"end": 22192,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22219,
											"end": 22220,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22245,
											"end": 22246,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22285,
											"end": 22291,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 22278,
											"end": 22280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22278,
											"end": 22292,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22319,
											"end": 22320,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22345,
											"end": 22346,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22385,
											"end": 22391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22378,
											"end": 22380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22378,
											"end": 22392,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22419,
											"end": 22420,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22872,
											"end": 22873,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 22865,
											"end": 22867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22861,
											"end": 22862,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 22861,
											"end": 22867,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 22860,
											"end": 22873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22860,
											"end": 22873,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 22855,
											"end": 22873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22855,
											"end": 22873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24782,
											"end": 24783,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 24775,
											"end": 24777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24772,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 24771,
											"end": 24777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 24766,
											"end": 24768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24766,
											"end": 24777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24765,
											"end": 24783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24765,
											"end": 24783,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 24760,
											"end": 24783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24760,
											"end": 24783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24891,
											"end": 24892,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 24884,
											"end": 24886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 24880,
											"end": 24886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 24875,
											"end": 24877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24875,
											"end": 24886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 24869,
											"end": 24892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24869,
											"end": 24892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25002,
											"end": 25003,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 24995,
											"end": 24997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24992,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 24991,
											"end": 24997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 24986,
											"end": 24988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24986,
											"end": 24997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24985,
											"end": 25003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24985,
											"end": 25003,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 24980,
											"end": 25003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24980,
											"end": 25003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25111,
											"end": 25112,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 25104,
											"end": 25106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 25100,
											"end": 25106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 25095,
											"end": 25097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25095,
											"end": 25106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25094,
											"end": 25112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25094,
											"end": 25112,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 25089,
											"end": 25112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25089,
											"end": 25112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25221,
											"end": 25222,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 25214,
											"end": 25216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25211,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 25210,
											"end": 25216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 25205,
											"end": 25207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25205,
											"end": 25216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25204,
											"end": 25222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25204,
											"end": 25222,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 25199,
											"end": 25222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25199,
											"end": 25222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25331,
											"end": 25332,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 25324,
											"end": 25326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25321,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 25320,
											"end": 25326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 25315,
											"end": 25317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25315,
											"end": 25326,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25314,
											"end": 25332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25314,
											"end": 25332,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 25309,
											"end": 25332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25309,
											"end": 25332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 25728,
											"end": 25730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25725,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 25724,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 25719,
											"end": 25721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25719,
											"end": 25730,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 25703,
											"end": 25718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 25703,
											"end": 25731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25698,
											"end": 25700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25698,
											"end": 25731,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 25748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5716,
											"end": 5717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5701,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 34842,
											"end": 34851,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34921,
											"end": 34922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 34914,
											"end": 34923,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 34907,
											"end": 34924,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34795,
											"end": 34940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5321,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "XOR",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5347,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "XOR",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1667,
											"end": 1784,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1667,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1778,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1907,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1790,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1913,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2190,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2153,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2194,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2194,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2273,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2194,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2153,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2314,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2356,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2359,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2359,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2359,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2524,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2531,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2615,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2487,
											"end": 2615,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2534,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2534,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2613,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2534,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2487,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2753,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2627,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2747,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2855,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2759,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2825,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2825,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2983,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2861,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2934,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2959,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2914,
											"end": 2977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2977,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2914,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3080,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3051,
											"end": 3080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3051,
											"end": 3080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3089,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3331,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3343,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3349,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3352,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3542,
											"end": 3549,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3497,
											"end": 3550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3550,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3497,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3550,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3601,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3659,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3625,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3625,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3755,
											"end": 3757,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3753,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3759,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3805,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3808,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3808,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3887,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3808,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3993,
											"end": 4000,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 3990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3982,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 3991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3921,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4001,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3921,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 4001,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 4001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 4001,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 4001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 4011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4052,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4076,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4121,
											"end": 4128,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4110,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4076,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4129,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4076,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4205,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 4275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4281,
											"end": 4395,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4281,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4281,
											"end": 4395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4281,
											"end": 4395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4281,
											"end": 4395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4281,
											"end": 4395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4578,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4723,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4591,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4715,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4694,
											"end": 4716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4694,
											"end": 4716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4837,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4729,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4824,
											"end": 4829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4806,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4830,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4806,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4975,
											"end": 4978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4933,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5141,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5028,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5125,
											"end": 5128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5373,
											"end": 5378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 5325,
											"end": 5379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5379,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5325,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5474,
											"end": 5480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5472,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 5395,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5481,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5395,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5505,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5561,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5505,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5787,
											"end": 5790,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5728,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5791,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5728,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5791,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5814,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5874,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5814,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5874,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5600,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5903,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6098,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6131,
											"end": 6132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6129,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 6173,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6281,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6173,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 6288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6417,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6422,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6506,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6387,
											"end": 6506,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6425,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6425,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6504,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6425,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6506,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6387,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6615,
											"end": 6622,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6604,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6570,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6623,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6570,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 6743,
											"end": 6750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6698,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6972,
											"end": 6981,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6970,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6959,
											"end": 6982,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6955,
											"end": 6988,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6991,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6991,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7070,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6991,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7181,
											"end": 7188,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7136,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7189,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7136,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7189,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7309,
											"end": 7316,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7298,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7264,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7317,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7264,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7254,
											"end": 7317,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7254,
											"end": 7317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7496,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7520,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7565,
											"end": 7572,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 7554,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7520,
											"end": 7573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7573,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7520,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7573,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7465,
											"end": 7583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7625,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7649,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7694,
											"end": 7701,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7685,
											"end": 7691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7683,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7649,
											"end": 7702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7702,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7649,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7751,
											"end": 7754,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7799,
											"end": 7821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7778,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7880,
											"end": 7883,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 7907,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7952,
											"end": 7959,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7943,
											"end": 7949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7941,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7907,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7960,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7907,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8199,
											"end": 8205,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8155,
											"end": 8226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8286,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8236,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8308,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8236,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8443,
											"end": 8449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8475,
											"end": 8481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8551,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8534,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8523,
											"end": 8546,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8552,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8636,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8516,
											"end": 8636,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 8555,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8555,
											"end": 8634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 8634,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 8555,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8636,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8516,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 8745,
											"end": 8752,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 8742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8734,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8700,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8753,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 8700,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8646,
											"end": 8763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8802,
											"end": 8804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 8873,
											"end": 8880,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8853,
											"end": 8862,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 8871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8828,
											"end": 8881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8881,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 8828,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8881,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8956,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 9001,
											"end": 9008,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 8998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 8990,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 8977,
											"end": 8999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8956,
											"end": 9009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9009,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 8956,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 9009,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 9009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8901,
											"end": 9019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9058,
											"end": 9060,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9129,
											"end": 9136,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9109,
											"end": 9118,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9084,
											"end": 9137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9137,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9186,
											"end": 9189,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 9258,
											"end": 9265,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9249,
											"end": 9255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9213,
											"end": 9266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9266,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9318,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9342,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9387,
											"end": 9394,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9376,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9342,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9395,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9342,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9447,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 9471,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 9516,
											"end": 9523,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9505,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9492,
											"end": 9514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 9471,
											"end": 9524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9524,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 9471,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9573,
											"end": 9576,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9600,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9645,
											"end": 9652,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9634,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9600,
											"end": 9653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9653,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9600,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 9670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9865,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9852,
											"end": 9861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9848,
											"end": 9866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9840,
											"end": 9866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9840,
											"end": 9866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 9946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9876,
											"end": 9947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10001,
											"end": 10007,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9957,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 10107,
											"end": 10109,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10092,
											"end": 10110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10039,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10111,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 10039,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 10118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10242,
											"end": 10248,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10282,
											"end": 10286,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10287,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10467,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 10299,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10459,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420696E7075740000000000000000000000000000"
										},
										{
											"begin": 10435,
											"end": 10436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10423,
											"end": 10437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10839,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 10473,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10700,
											"end": 10702,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10695,
											"end": 10698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 10636,
											"end": 10703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10703,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10636,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 10801,
											"end": 10804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 10712,
											"end": 10805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10805,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 10712,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10830,
											"end": 10832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10821,
											"end": 10833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 11264,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10845,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11038,
											"end": 11047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11034,
											"end": 11052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11026,
											"end": 11052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11026,
											"end": 11052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11088,
											"end": 11108,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 11126,
											"end": 11257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11257,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 11126,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 11264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 11264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 11264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 11264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11270,
											"end": 11442,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 11270,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11410,
											"end": 11434,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74206C697175696469747900000000000000000000"
										},
										{
											"begin": 11406,
											"end": 11407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11394,
											"end": 11408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11387,
											"end": 11435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11270,
											"end": 11442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11270,
											"end": 11442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11814,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 11448,
											"end": 11814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11590,
											"end": 11593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11611,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 11670,
											"end": 11673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11611,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 11611,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11611,
											"end": 11678,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 11611,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11604,
											"end": 11678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11604,
											"end": 11678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 11687,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11780,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 11687,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11800,
											"end": 11803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 12239,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11820,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12013,
											"end": 12022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12001,
											"end": 12027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12001,
											"end": 12027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12067,
											"end": 12071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12063,
											"end": 12083,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12048,
											"end": 12057,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12044,
											"end": 12061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 12227,
											"end": 12231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 12101,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12232,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 12101,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12093,
											"end": 12232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12093,
											"end": 12232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 12239,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 12239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 12239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 12239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12425,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 12245,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12293,
											"end": 12370,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12283,
											"end": 12371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12394,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12380,
											"end": 12395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12404,
											"end": 12419,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12471,
											"end": 12478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12494,
											"end": 12514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12514,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 12494,
											"end": 12514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12514,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 12546,
											"end": 12547,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12528,
											"end": 12548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12548,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 12528,
											"end": 12548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12548,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 12623,
											"end": 12634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12605,
											"end": 12635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12635,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 12605,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12784,
											"end": 12785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12775,
											"end": 12782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12771,
											"end": 12786,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 12769,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12787,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 12745,
											"end": 12746,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12738,
											"end": 12747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12718,
											"end": 12801,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12695,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 12695,
											"end": 12834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 12814,
											"end": 12832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12695,
											"end": 12834,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 12695,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12479,
											"end": 12841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12906,
											"end": 12926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12926,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12906,
											"end": 12926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12940,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12960,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12940,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12960,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12983,
											"end": 12984,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 12981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12976,
											"end": 12985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 12985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 12985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13004,
											"end": 13007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13001,
											"end": 13002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12998,
											"end": 13008,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13031,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12995,
											"end": 13031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 13011,
											"end": 13029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13031,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12995,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 13038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13044,
											"end": 13224,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 13044,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13089,
											"end": 13090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13082,
											"end": 13170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13189,
											"end": 13193,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13186,
											"end": 13187,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13179,
											"end": 13194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13217,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13210,
											"end": 13211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13287,
											"end": 13307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13321,
											"end": 13341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13341,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 13321,
											"end": 13341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13341,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13360,
											"end": 13361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 13365,
											"end": 13383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13407,
											"end": 13408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13409,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13395,
											"end": 13409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13395,
											"end": 13409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13590,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 13421,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E73616374696F6E206578706972656400000000000000000000000000"
										},
										{
											"begin": 13557,
											"end": 13558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13549,
											"end": 13555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13538,
											"end": 13583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13962,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 13596,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 13741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 13818,
											"end": 13821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 13759,
											"end": 13826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13826,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13759,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13752,
											"end": 13826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13752,
											"end": 13826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13924,
											"end": 13927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 13835,
											"end": 13928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13928,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13835,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 13955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13948,
											"end": 13951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13944,
											"end": 13956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 13956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 13956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14387,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 13968,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14172,
											"end": 14174,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14149,
											"end": 14175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14149,
											"end": 14175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14215,
											"end": 14219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14231,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14196,
											"end": 14205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14249,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 14375,
											"end": 14379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14249,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 14249,
											"end": 14380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14249,
											"end": 14380,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 14249,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14241,
											"end": 14380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14241,
											"end": 14380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14555,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 14393,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14547,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C7920322D746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 14529,
											"end": 14530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14521,
											"end": 14527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14517,
											"end": 14531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14927,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 14561,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14703,
											"end": 14706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14724,
											"end": 14791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 14788,
											"end": 14790,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 14783,
											"end": 14786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 14724,
											"end": 14791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14791,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 14724,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14800,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 14889,
											"end": 14892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14800,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 14800,
											"end": 14893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14800,
											"end": 14893,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 14800,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14918,
											"end": 14920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14902,
											"end": 14921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14902,
											"end": 14921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15126,
											"end": 15135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15122,
											"end": 15140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15114,
											"end": 15140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15114,
											"end": 15140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15186,
											"end": 15195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15176,
											"end": 15196,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15157,
											"end": 15174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15150,
											"end": 15197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15340,
											"end": 15344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 15214,
											"end": 15345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15206,
											"end": 15345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15206,
											"end": 15345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15358,
											"end": 15538,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 15358,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15483,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15403,
											"end": 15404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15396,
											"end": 15484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15503,
											"end": 15507,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15493,
											"end": 15508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15524,
											"end": 15525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15532,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15603,
											"end": 15609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15654,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15631,
											"end": 15638,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15623,
											"end": 15655,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15739,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 15620,
											"end": 15739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15658,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 15658,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 15658,
											"end": 15737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15658,
											"end": 15737,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 15658,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15739,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 15620,
											"end": 15739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 15848,
											"end": 15855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15828,
											"end": 15837,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15824,
											"end": 15846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 15803,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15856,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 15803,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15793,
											"end": 15856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15793,
											"end": 15856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16048,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 15879,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16019,
											"end": 16040,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74206F757470757400000000000000000000000000"
										},
										{
											"begin": 16015,
											"end": 16016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16007,
											"end": 16013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16003,
											"end": 16017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15996,
											"end": 16041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16420,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 16054,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16217,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16281,
											"end": 16283,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 16276,
											"end": 16279,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16217,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 16217,
											"end": 16284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16217,
											"end": 16284,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16217,
											"end": 16284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16210,
											"end": 16284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16210,
											"end": 16284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 16382,
											"end": 16385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 16293,
											"end": 16386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16386,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 16293,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16411,
											"end": 16413,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16406,
											"end": 16409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16402,
											"end": 16414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16395,
											"end": 16414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16395,
											"end": 16414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16845,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 16426,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16630,
											"end": 16632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16619,
											"end": 16628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16615,
											"end": 16633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16673,
											"end": 16677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16665,
											"end": 16666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16654,
											"end": 16663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 16667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16643,
											"end": 16690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16707,
											"end": 16838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 16833,
											"end": 16837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16707,
											"end": 16838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 16707,
											"end": 16838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16707,
											"end": 16838,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 16707,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 16838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 16838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16891,
											"end": 16895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16911,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 16929,
											"end": 16930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 16911,
											"end": 16931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16931,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 16911,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16906,
											"end": 16931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16906,
											"end": 16931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 16963,
											"end": 16964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 16945,
											"end": 16965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16940,
											"end": 16965,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16940,
											"end": 16965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 16990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16986,
											"end": 16987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16982,
											"end": 16991,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16974,
											"end": 16991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16974,
											"end": 16991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17007,
											"end": 17011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17038,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 17001,
											"end": 17038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 17018,
											"end": 17036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17038,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 17001,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 17045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17051,
											"end": 17231,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 17051,
											"end": 17231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17099,
											"end": 17176,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17096,
											"end": 17097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17089,
											"end": 17177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17196,
											"end": 17200,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 17193,
											"end": 17194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17186,
											"end": 17201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17220,
											"end": 17224,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17210,
											"end": 17225,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17355,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 17237,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 17342,
											"end": 17347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 17324,
											"end": 17348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17348,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 17324,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17312,
											"end": 17349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17538,
											"end": 17542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17576,
											"end": 17579,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17565,
											"end": 17574,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17561,
											"end": 17580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 17580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 17580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 17658,
											"end": 17659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17647,
											"end": 17656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17640,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 17590,
											"end": 17661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17661,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 17590,
											"end": 17661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17671,
											"end": 17743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 17739,
											"end": 17741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17728,
											"end": 17737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17724,
											"end": 17742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17715,
											"end": 17721,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17671,
											"end": 17743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 17671,
											"end": 17743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17671,
											"end": 17743,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 17671,
											"end": 17743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 17821,
											"end": 17823,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17810,
											"end": 17819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17797,
											"end": 17803,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 17753,
											"end": 17825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 17825,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 17753,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 17903,
											"end": 17905,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17892,
											"end": 17901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17888,
											"end": 17906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17879,
											"end": 17885,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 17835,
											"end": 17907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17907,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 17835,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17920,
											"end": 18081,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 17920,
											"end": 18081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18060,
											"end": 18073,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207265736572766573000000000000000000000000000000000000000000"
										},
										{
											"begin": 18056,
											"end": 18057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18048,
											"end": 18054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18044,
											"end": 18058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18037,
											"end": 18074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17920,
											"end": 18081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17920,
											"end": 18081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18087,
											"end": 18453,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 18087,
											"end": 18453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18250,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 18314,
											"end": 18316,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 18309,
											"end": 18312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18250,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 18250,
											"end": 18317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18250,
											"end": 18317,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 18250,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18243,
											"end": 18317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18243,
											"end": 18317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 18415,
											"end": 18418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 18326,
											"end": 18419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18419,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 18326,
											"end": 18419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18446,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18439,
											"end": 18442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18435,
											"end": 18447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18428,
											"end": 18447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18428,
											"end": 18447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18087,
											"end": 18453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18087,
											"end": 18453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18087,
											"end": 18453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18087,
											"end": 18453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18459,
											"end": 18878,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 18459,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18625,
											"end": 18629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18663,
											"end": 18665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18652,
											"end": 18661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18640,
											"end": 18666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18640,
											"end": 18666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18706,
											"end": 18710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18702,
											"end": 18722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18698,
											"end": 18699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18687,
											"end": 18696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18683,
											"end": 18700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18676,
											"end": 18723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18740,
											"end": 18871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 18866,
											"end": 18870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18740,
											"end": 18871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 18740,
											"end": 18871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18740,
											"end": 18871,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 18740,
											"end": 18871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18732,
											"end": 18871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18732,
											"end": 18871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18459,
											"end": 18878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18459,
											"end": 18878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18459,
											"end": 18878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18459,
											"end": 18878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18884,
											"end": 19048,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 18884,
											"end": 19048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19024,
											"end": 19040,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742041000000000000000000000000000000000000"
										},
										{
											"begin": 19020,
											"end": 19021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19008,
											"end": 19022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18884,
											"end": 19048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18884,
											"end": 19048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19420,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 19054,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19196,
											"end": 19199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19217,
											"end": 19284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 19281,
											"end": 19283,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 19276,
											"end": 19279,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19217,
											"end": 19284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 19217,
											"end": 19284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19217,
											"end": 19284,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 19217,
											"end": 19284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19293,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 19382,
											"end": 19385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19293,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 19293,
											"end": 19386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19293,
											"end": 19386,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 19293,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19411,
											"end": 19413,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19406,
											"end": 19409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19402,
											"end": 19414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19395,
											"end": 19414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19395,
											"end": 19414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19845,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 19426,
											"end": 19845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19592,
											"end": 19596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19630,
											"end": 19632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19619,
											"end": 19628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19615,
											"end": 19633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19607,
											"end": 19633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19607,
											"end": 19633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19673,
											"end": 19677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19669,
											"end": 19689,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19665,
											"end": 19666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19654,
											"end": 19663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19650,
											"end": 19667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19643,
											"end": 19690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19707,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19833,
											"end": 19837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19707,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 19707,
											"end": 19838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19707,
											"end": 19838,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19707,
											"end": 19838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19699,
											"end": 19838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19699,
											"end": 19838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 20015,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 19851,
											"end": 20015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19991,
											"end": 20007,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742042000000000000000000000000000000000000"
										},
										{
											"begin": 19987,
											"end": 19988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19979,
											"end": 19985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19975,
											"end": 19989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19968,
											"end": 20008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 20015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 20015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20163,
											"end": 20166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 20248,
											"end": 20250,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 20243,
											"end": 20246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 20184,
											"end": 20251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 20349,
											"end": 20352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 20260,
											"end": 20353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20378,
											"end": 20380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20373,
											"end": 20376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20369,
											"end": 20381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20559,
											"end": 20563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20597,
											"end": 20599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20640,
											"end": 20644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20636,
											"end": 20656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20632,
											"end": 20633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20621,
											"end": 20630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20617,
											"end": 20634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20610,
											"end": 20657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 20800,
											"end": 20804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 20674,
											"end": 20805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21061,
											"end": 21064,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 21050,
											"end": 21059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21046,
											"end": 21065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21038,
											"end": 21065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21038,
											"end": 21065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21075,
											"end": 21146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 21143,
											"end": 21144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21132,
											"end": 21141,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21128,
											"end": 21145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21119,
											"end": 21125,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 21075,
											"end": 21146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 21075,
											"end": 21146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21075,
											"end": 21146,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 21075,
											"end": 21146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21156,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 21224,
											"end": 21226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21213,
											"end": 21222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21209,
											"end": 21227,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21200,
											"end": 21206,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21156,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 21156,
											"end": 21228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21156,
											"end": 21228,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 21156,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21238,
											"end": 21310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 21306,
											"end": 21308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21295,
											"end": 21304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21291,
											"end": 21309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21282,
											"end": 21288,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21238,
											"end": 21310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 21238,
											"end": 21310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21238,
											"end": 21310,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 21238,
											"end": 21310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 21388,
											"end": 21390,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21377,
											"end": 21386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21373,
											"end": 21391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21364,
											"end": 21370,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 21320,
											"end": 21392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21392,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 21320,
											"end": 21392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21402,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 21470,
											"end": 21473,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 21459,
											"end": 21468,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21455,
											"end": 21474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21446,
											"end": 21452,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21402,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 21402,
											"end": 21475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21402,
											"end": 21475,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 21402,
											"end": 21475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 21654,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 21488,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21628,
											"end": 21646,
											"name": "PUSH",
											"source": 10,
											"value": "4964656E746963616C20746F6B656E7300000000000000000000000000000000"
										},
										{
											"begin": 21624,
											"end": 21625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21616,
											"end": 21622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21612,
											"end": 21626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21605,
											"end": 21647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 21654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 21654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 22026,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 21660,
											"end": 22026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21802,
											"end": 21805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21823,
											"end": 21890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 21887,
											"end": 21889,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 21882,
											"end": 21885,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21823,
											"end": 21890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 21823,
											"end": 21890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21823,
											"end": 21890,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 21823,
											"end": 21890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21816,
											"end": 21890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21816,
											"end": 21890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21899,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 21988,
											"end": 21991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21899,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 21899,
											"end": 21992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21899,
											"end": 21992,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 21899,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22017,
											"end": 22019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22012,
											"end": 22015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22008,
											"end": 22020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22001,
											"end": 22020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22001,
											"end": 22020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 22026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 22026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 22026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 22026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22451,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 22032,
											"end": 22451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22198,
											"end": 22202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22236,
											"end": 22238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22225,
											"end": 22234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22221,
											"end": 22239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22213,
											"end": 22239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22213,
											"end": 22239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22285,
											"end": 22294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22279,
											"end": 22283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22275,
											"end": 22295,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22271,
											"end": 22272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22260,
											"end": 22269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22256,
											"end": 22273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22249,
											"end": 22296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22313,
											"end": 22444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 22439,
											"end": 22443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22313,
											"end": 22444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 22313,
											"end": 22444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22313,
											"end": 22444,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 22313,
											"end": 22444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22305,
											"end": 22444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22305,
											"end": 22444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22457,
											"end": 22619,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 22457,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22597,
											"end": 22611,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 22593,
											"end": 22594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22585,
											"end": 22591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22581,
											"end": 22595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22574,
											"end": 22612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22457,
											"end": 22619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22457,
											"end": 22619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22625,
											"end": 22991,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 22625,
											"end": 22991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22767,
											"end": 22770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22788,
											"end": 22855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 22847,
											"end": 22850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22788,
											"end": 22855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 22788,
											"end": 22855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22788,
											"end": 22855,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 22788,
											"end": 22855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 22855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 22855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 22953,
											"end": 22956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 22864,
											"end": 22957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22982,
											"end": 22984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22977,
											"end": 22980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22973,
											"end": 22985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22625,
											"end": 22991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22625,
											"end": 22991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22625,
											"end": 22991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22625,
											"end": 22991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23163,
											"end": 23167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23201,
											"end": 23203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23190,
											"end": 23199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23186,
											"end": 23204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23250,
											"end": 23259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23240,
											"end": 23260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23225,
											"end": 23234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23221,
											"end": 23238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23214,
											"end": 23261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 23404,
											"end": 23408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 23278,
											"end": 23409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23516,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 23422,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23455,
											"end": 23463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23503,
											"end": 23508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23499,
											"end": 23501,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 23495,
											"end": 23509,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 23474,
											"end": 23509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23474,
											"end": 23509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23522,
											"end": 23616,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 23522,
											"end": 23616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23561,
											"end": 23568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23590,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 23604,
											"end": 23609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23590,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 23590,
											"end": 23610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23590,
											"end": 23610,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 23590,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23579,
											"end": 23610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23579,
											"end": 23610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23522,
											"end": 23616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23522,
											"end": 23616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23522,
											"end": 23616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23522,
											"end": 23616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23722,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 23622,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23661,
											"end": 23668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23690,
											"end": 23716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23710,
											"end": 23715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23690,
											"end": 23716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 23690,
											"end": 23716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23690,
											"end": 23716,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23690,
											"end": 23716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23679,
											"end": 23716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23679,
											"end": 23716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 23853,
											"end": 23877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 23833,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23828,
											"end": 23831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23821,
											"end": 23879,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23728,
											"end": 23885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24031,
											"end": 24034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24046,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 24117,
											"end": 24120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24108,
											"end": 24114,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24046,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 24046,
											"end": 24121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24046,
											"end": 24121,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 24046,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24146,
											"end": 24148,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 24141,
											"end": 24144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24137,
											"end": 24149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24130,
											"end": 24149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24130,
											"end": 24149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24159,
											"end": 24234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24230,
											"end": 24233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24221,
											"end": 24227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24159,
											"end": 24234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 24159,
											"end": 24234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24159,
											"end": 24234,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24159,
											"end": 24234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24259,
											"end": 24261,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 24254,
											"end": 24257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24243,
											"end": 24262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24243,
											"end": 24262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24279,
											"end": 24282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24272,
											"end": 24282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24272,
											"end": 24282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 24288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24443,
											"end": 24447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24481,
											"end": 24483,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 24470,
											"end": 24479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24466,
											"end": 24484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24458,
											"end": 24484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24458,
											"end": 24484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24494,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 24562,
											"end": 24563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24551,
											"end": 24560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24547,
											"end": 24564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24538,
											"end": 24544,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 24494,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24494,
											"end": 24565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24494,
											"end": 24565,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 24494,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24575,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 24643,
											"end": 24645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24632,
											"end": 24641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24628,
											"end": 24646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24619,
											"end": 24625,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24575,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24575,
											"end": 24647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24575,
											"end": 24647,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 24575,
											"end": 24647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24657,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 24725,
											"end": 24727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24714,
											"end": 24723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24710,
											"end": 24728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24701,
											"end": 24707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24657,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 24657,
											"end": 24729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24657,
											"end": 24729,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 24657,
											"end": 24729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24294,
											"end": 24736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24863,
											"end": 24867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24901,
											"end": 24903,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24890,
											"end": 24899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24886,
											"end": 24904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24878,
											"end": 24904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24878,
											"end": 24904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24914,
											"end": 24985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 24982,
											"end": 24983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24971,
											"end": 24980,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24967,
											"end": 24984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 24964,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24914,
											"end": 24985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24914,
											"end": 24985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24914,
											"end": 24985,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 24914,
											"end": 24985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24995,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 25063,
											"end": 25065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25052,
											"end": 25061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25048,
											"end": 25066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25039,
											"end": 25045,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24995,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 24995,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24995,
											"end": 25067,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 24995,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 25074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25173,
											"end": 25177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25211,
											"end": 25213,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25200,
											"end": 25209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25196,
											"end": 25214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25188,
											"end": 25214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25188,
											"end": 25214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25224,
											"end": 25295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 25292,
											"end": 25293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25281,
											"end": 25290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25277,
											"end": 25294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25268,
											"end": 25274,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25224,
											"end": 25295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 25224,
											"end": 25295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25224,
											"end": 25295,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 25224,
											"end": 25295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25080,
											"end": 25302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Amount of tokenA to deposit\",\"amountAMin\":\"Minimum amount of tokenA to accept\",\"amountBDesired\":\"Amount of tokenB to deposit\",\"amountBMin\":\"Minimum amount of tokenB to accept\",\"deadline\":\"Unix timestamp after which the tx is invalid\",\"to\":\"Recipient of the liquidity tokens\",\"tokenA\":\"Address of the first token\",\"tokenB\":\"Address of the second token\"},\"returns\":{\"amountA\":\"Final amount of tokenA used\",\"amountB\":\"Final amount of tokenB used\",\"liquidity\":\"Amount of liquidity tokens minted\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Input token amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Resulting amount of output token\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"Base token\",\"tokenB\":\"Quote token\"},\"returns\":{\"price\":\"Price with 18 decimals\"}},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of tokenA expected\",\"amountBMin\":\"Minimum amount of tokenB expected\",\"deadline\":\"Expiration timestamp\",\"liquidity\":\"Amount of liquidity tokens to burn\",\"to\":\"Recipient of withdrawn tokens\",\"tokenA\":\"Address of the first token\",\"tokenB\":\"Address of the second token\"},\"returns\":{\"amountA\":\"Amount of tokenA received\",\"amountB\":\"Amount of tokenB received\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of input tokens to swap\",\"amountOutMin\":\"Minimum output expected\",\"deadline\":\"Expiration timestamp\",\"path\":\"Array with [tokenIn, tokenOut]\",\"to\":\"Recipient of output tokens\"},\"returns\":{\"amounts\":\"Array [amountIn, amountOut]\"}}},\"title\":\"SimpleSwap - A simplified Uniswap-like DEX\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair pool\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output amount given input and reserves\"},\"getPrice(address,address)\":{\"notice\":\"Returns the price of tokenA in terms of tokenB\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from a pool\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps exact amount of input tokens for output tokens\"}},\"notice\":\"Enables token swaps and liquidity management for token pairs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"SimpleSwap.sol\":{\"keccak256\":\"0xc62270703e8478e9d320eefbbd0af590bd9e7f1e3c9b3cebec5ccf4121cf7f9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7ce293dad6d8e517b4faacf5c672b12e653d867d7ffff5a54cc4ecf7b65cd12\",\"dweb:/ipfs/QmR8jE1DZVgcf4JxfNt63omyvVZB5PEAa6QA3aBAjccb64\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4107,
								"contract": "SimpleSwap.sol:SimpleSwap",
								"label": "reserves",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Reserve)4102_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(Reserve)4102_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct SimpleSwap.Reserve)",
								"numberOfBytes": "32",
								"value": "t_struct(Reserve)4102_storage"
							},
							"t_struct(Reserve)4102_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Reserve",
								"members": [
									{
										"astId": 4093,
										"contract": "SimpleSwap.sol:SimpleSwap",
										"label": "reserveA",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 4095,
										"contract": "SimpleSwap.sol:SimpleSwap",
										"label": "reserveB",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 4097,
										"contract": "SimpleSwap.sol:SimpleSwap",
										"label": "totalLiquidity",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 4101,
										"contract": "SimpleSwap.sol:SimpleSwap",
										"label": "liquidity",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to a token pair pool"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output amount given input and reserves"
							},
							"getPrice(address,address)": {
								"notice": "Returns the price of tokenA in terms of tokenB"
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity from a pool"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps exact amount of input tokens for output tokens"
							}
						},
						"notice": "Enables token swaps and liquidity management for token pairs",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							695
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 695,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 695,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								695,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							695
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 696,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 695,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							683
						]
					},
					"id": 684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:5",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 683,
							"linearizedBaseContracts": [
								683
							],
							"name": "Panic",
							"nameLocation": "665:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:5",
										"text": "@dev generic / unspecified error"
									},
									"id": 638,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "718:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 636,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 637,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:5",
										"text": "@dev used by the assert() builtin"
									},
									"id": 642,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "806:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 640,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 641,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:5",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 646,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "897:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:5",
										"text": "@dev division or modulo by zero"
									},
									"id": 650,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "990:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 648,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:5",
										"text": "@dev enum conversion error"
									},
									"id": 654,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1080:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 652,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:5",
										"text": "@dev invalid encoding in storage"
									},
									"id": 658,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1181:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:5",
										"text": "@dev empty array pop"
									},
									"id": 662,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1271:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 660,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 661,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:5",
										"text": "@dev array out of bounds access"
									},
									"id": 666,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1365:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 664,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:5",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 670,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1493:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 669,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:5",
										"text": "@dev calling invalid internal function"
									},
									"id": 674,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 683,
									"src": "1593:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 672,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1819:151:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:5",
													"nodeType": "YulBlock",
													"src": "1854:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:5",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:5",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:5"
																},
																"nativeSrc": "1868:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:5"
															},
															"nativeSrc": "1868:24:5",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:5"
																},
																"nativeSrc": "1905:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:5"
															},
															"nativeSrc": "1905:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:5",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:5"
																},
																"nativeSrc": "1936:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:5"
															},
															"nativeSrc": "1936:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:5"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 677,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 680,
												"nodeType": "InlineAssembly",
												"src": "1829:135:5"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:5",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1791:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:5"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:5"
									},
									"scope": 683,
									"src": "1776:194:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 684,
							"src": "657:1315:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							695
						]
					},
					"id": 696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 686,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 695,
							"linearizedBaseContracts": [
								695
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 688,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 695,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 696,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2316
						],
						"Panic": [
							683
						],
						"SafeCast": [
							4081
						]
					},
					"id": 2317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 699,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 684,
							"src": "129:35:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 698,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 683,
										"src": "137:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 4082,
							"src": "165:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 700,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4081,
										"src": "173:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2316,
							"linearizedBaseContracts": [
								2316
							],
							"name": "Math",
							"nameLocation": "289:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 707,
									"members": [
										{
											"id": 703,
											"name": "Floor",
											"nameLocation": "324:5:7",
											"nodeType": "EnumValue",
											"src": "324:5:7"
										},
										{
											"id": 704,
											"name": "Ceil",
											"nameLocation": "367:4:7",
											"nodeType": "EnumValue",
											"src": "367:4:7"
										},
										{
											"id": 705,
											"name": "Trunc",
											"nameLocation": "409:5:7",
											"nodeType": "EnumValue",
											"src": "409:5:7"
										},
										{
											"id": 706,
											"name": "Expand",
											"nameLocation": "439:6:7",
											"nodeType": "EnumValue",
											"src": "439:6:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:7",
									"nodeType": "EnumDefinition",
									"src": "300:169:7"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "731:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "766:71:7",
													"nodeType": "YulBlock",
													"src": "766:71:7",
													"statements": [
														{
															"nativeSrc": "780:16:7",
															"nodeType": "YulAssignment",
															"src": "780:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "791:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "791:1:7"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "794:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "794:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:7"
																},
																"nativeSrc": "787:9:7",
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "780:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:7"
																}
															]
														},
														{
															"nativeSrc": "809:18:7",
															"nodeType": "YulAssignment",
															"src": "809:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "low",
																		"nativeSrc": "820:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "820:3:7"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "825:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "817:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "817:2:7"
																},
																"nativeSrc": "817:10:7",
																"nodeType": "YulFunctionCall",
																"src": "817:10:7"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "809:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "791:1:7",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "825:1:7",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "794:1:7",
														"valueSize": 1
													},
													{
														"declaration": 715,
														"isOffset": false,
														"isSlot": false,
														"src": "809:4:7",
														"valueSize": 1
													},
													{
														"declaration": 717,
														"isOffset": false,
														"isSlot": false,
														"src": "780:3:7",
														"valueSize": 1
													},
													{
														"declaration": 717,
														"isOffset": false,
														"isSlot": false,
														"src": "820:3:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 719,
												"nodeType": "InlineAssembly",
												"src": "741:96:7"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "475:163:7",
										"text": " @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add512",
									"nameLocation": "652:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "667:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "659:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "678:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "670:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:22:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "712:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "704:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "726:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "718:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:27:7"
									},
									"scope": 2316,
									"src": "643:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1115:462:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1437:134:7",
													"nodeType": "YulBlock",
													"src": "1437:134:7",
													"statements": [
														{
															"nativeSrc": "1451:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1468:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1468:1:7"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1471:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1478:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1478:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1474:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:7"
																		},
																		"nativeSrc": "1474:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:6:7"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1461:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:7"
																},
																"nativeSrc": "1461:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1461:20:7"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1455:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1494:16:7",
															"nodeType": "YulAssignment",
															"src": "1494:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1505:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1505:1:7"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1501:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:3:7"
																},
																"nativeSrc": "1501:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:9:7"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "1494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:7"
																}
															]
														},
														{
															"nativeSrc": "1523:38:7",
															"nodeType": "YulAssignment",
															"src": "1523:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1539:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1539:2:7"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1543:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:7"
																		},
																		"nativeSrc": "1535:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:12:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1552:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:7"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1556:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1556:3:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1549:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1549:2:7"
																		},
																		"nativeSrc": "1549:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:11:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1531:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:3:7"
																},
																"nativeSrc": "1531:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:30:7"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "1523:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1523:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 724,
														"isOffset": false,
														"isSlot": false,
														"src": "1468:1:7",
														"valueSize": 1
													},
													{
														"declaration": 724,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:1:7",
														"valueSize": 1
													},
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "1471:1:7",
														"valueSize": 1
													},
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:1:7",
														"valueSize": 1
													},
													{
														"declaration": 729,
														"isOffset": false,
														"isSlot": false,
														"src": "1523:4:7",
														"valueSize": 1
													},
													{
														"declaration": 731,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:3:7",
														"valueSize": 1
													},
													{
														"declaration": 731,
														"isOffset": false,
														"isSlot": false,
														"src": "1543:3:7",
														"valueSize": 1
													},
													{
														"declaration": 731,
														"isOffset": false,
														"isSlot": false,
														"src": "1556:3:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 733,
												"nodeType": "InlineAssembly",
												"src": "1412:159:7"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "849:173:7",
										"text": " @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul512",
									"nameLocation": "1036:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1051:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1043:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1062:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1054:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:22:7"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "1096:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "1110:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1102:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:27:7"
									},
									"scope": 2316,
									"src": "1027:550:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "1784:149:7",
										"statements": [
											{
												"id": 768,
												"nodeType": "UncheckedBlock",
												"src": "1794:133:7",
												"statements": [
													{
														"assignments": [
															748
														],
														"declarations": [
															{
																"constant": false,
																"id": 748,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1826:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 768,
																"src": "1818:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 747,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1818:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 752,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 749,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1830:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 750,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "1834:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1830:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1818:17:7"
													},
													{
														"expression": {
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 753,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "1849:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 754,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1859:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 755,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1864:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1859:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1849:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 758,
														"nodeType": "ExpressionStatement",
														"src": "1849:16:7"
													},
													{
														"expression": {
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 759,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "1879:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 760,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1888:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 763,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "1908:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 761,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4081,
																			"src": "1892:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1901:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4080,
																		"src": "1892:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1888:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 767,
														"nodeType": "ExpressionStatement",
														"src": "1879:37:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1583:105:7",
										"text": " @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1702:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1717:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1709:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1728:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1720:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:22:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1759:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1754:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1776:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1768:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:30:7"
									},
									"scope": 2316,
									"src": "1693:240:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "2143:149:7",
										"statements": [
											{
												"id": 803,
												"nodeType": "UncheckedBlock",
												"src": "2153:133:7",
												"statements": [
													{
														"assignments": [
															783
														],
														"declarations": [
															{
																"constant": false,
																"id": 783,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2185:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 803,
																"src": "2177:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 782,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2177:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 787,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "2189:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 785,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2177:17:7"
													},
													{
														"expression": {
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 788,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "2208:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 789,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "2218:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 790,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "2223:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2218:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 793,
														"nodeType": "ExpressionStatement",
														"src": "2208:16:7"
													},
													{
														"expression": {
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 794,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2238:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 795,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "2247:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 798,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "2267:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 796,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4081,
																			"src": "2251:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2260:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4080,
																		"src": "2251:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2251:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2238:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "2238:37:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1939:108:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2061:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2076:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2068:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2087:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2079:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:22:7"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2118:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2113:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2135:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2127:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:30:7"
									},
									"scope": 2316,
									"src": "2052:240:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "2505:391:7",
										"statements": [
											{
												"id": 833,
												"nodeType": "UncheckedBlock",
												"src": "2515:375:7",
												"statements": [
													{
														"assignments": [
															818
														],
														"declarations": [
															{
																"constant": false,
																"id": 818,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2547:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 833,
																"src": "2539:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 817,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2539:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 822,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "2551:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "2555:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2539:17:7"
													},
													{
														"AST": {
															"nativeSrc": "2595:188:7",
															"nodeType": "YulBlock",
															"src": "2595:188:7",
															"statements": [
																{
																	"nativeSrc": "2727:42:7",
																	"nodeType": "YulAssignment",
																	"src": "2727:42:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "c",
																								"nativeSrc": "2748:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "2748:1:7"
																							},
																							{
																								"name": "a",
																								"nativeSrc": "2751:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "2751:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2744:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:7"
																						},
																						"nativeSrc": "2744:9:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:9:7"
																					},
																					{
																						"name": "b",
																						"nativeSrc": "2755:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2755:1:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2741:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2741:2:7"
																				},
																				"nativeSrc": "2741:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:16:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "a",
																						"nativeSrc": "2766:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2766:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2759:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2759:6:7"
																				},
																				"nativeSrc": "2759:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:9:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2738:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2738:2:7"
																		},
																		"nativeSrc": "2738:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "success",
																			"nativeSrc": "2727:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "2727:7:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 808,
																"isOffset": false,
																"isSlot": false,
																"src": "2751:1:7",
																"valueSize": 1
															},
															{
																"declaration": 808,
																"isOffset": false,
																"isSlot": false,
																"src": "2766:1:7",
																"valueSize": 1
															},
															{
																"declaration": 810,
																"isOffset": false,
																"isSlot": false,
																"src": "2755:1:7",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "2748:1:7",
																"valueSize": 1
															},
															{
																"declaration": 813,
																"isOffset": false,
																"isSlot": false,
																"src": "2727:7:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 823,
														"nodeType": "InlineAssembly",
														"src": "2570:213:7"
													},
													{
														"expression": {
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "2842:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "2851:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 828,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "2871:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 826,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4081,
																			"src": "2855:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2864:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4080,
																		"src": "2855:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2851:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2842:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 832,
														"nodeType": "ExpressionStatement",
														"src": "2842:37:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "2298:111:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2423:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2438:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2430:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2449:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2441:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:22:7"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2480:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2475:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2475:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2497:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2489:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:7"
									},
									"scope": 2316,
									"src": "2414:482:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "3111:231:7",
										"statements": [
											{
												"id": 854,
												"nodeType": "UncheckedBlock",
												"src": "3121:215:7",
												"statements": [
													{
														"expression": {
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 847,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3145:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 848,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "3155:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3155:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3145:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 852,
														"nodeType": "ExpressionStatement",
														"src": "3145:15:7"
													},
													{
														"AST": {
															"nativeSrc": "3199:127:7",
															"nodeType": "YulBlock",
															"src": "3199:127:7",
															"statements": [
																{
																	"nativeSrc": "3293:19:7",
																	"nodeType": "YulAssignment",
																	"src": "3293:19:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3307:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3307:1:7"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3310:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3310:1:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3303:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:7"
																		},
																		"nativeSrc": "3303:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3293:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3293:6:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 838,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:1:7",
																"valueSize": 1
															},
															{
																"declaration": 840,
																"isOffset": false,
																"isSlot": false,
																"src": "3310:1:7",
																"valueSize": 1
															},
															{
																"declaration": 845,
																"isOffset": false,
																"isSlot": false,
																"src": "3293:6:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 853,
														"nodeType": "InlineAssembly",
														"src": "3174:152:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2902:113:7",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3029:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3044:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3036:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3055:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3047:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:22:7"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3086:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3081:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3103:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3095:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:30:7"
									},
									"scope": 2316,
									"src": "3020:322:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3567:231:7",
										"statements": [
											{
												"id": 875,
												"nodeType": "UncheckedBlock",
												"src": "3577:215:7",
												"statements": [
													{
														"expression": {
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 868,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "3601:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 869,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "3611:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3611:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3601:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "ExpressionStatement",
														"src": "3601:15:7"
													},
													{
														"AST": {
															"nativeSrc": "3655:127:7",
															"nodeType": "YulBlock",
															"src": "3655:127:7",
															"statements": [
																{
																	"nativeSrc": "3749:19:7",
																	"nodeType": "YulAssignment",
																	"src": "3749:19:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3763:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3763:1:7"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3766:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3766:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mod",
																			"nativeSrc": "3759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:7"
																		},
																		"nativeSrc": "3759:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3749:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 859,
																"isOffset": false,
																"isSlot": false,
																"src": "3763:1:7",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:1:7",
																"valueSize": 1
															},
															{
																"declaration": 866,
																"isOffset": false,
																"isSlot": false,
																"src": "3749:6:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 874,
														"nodeType": "InlineAssembly",
														"src": "3630:152:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "3348:123:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3485:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3492:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:7"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3542:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3537:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3559:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3551:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:30:7"
									},
									"scope": 2316,
									"src": "3476:322:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "3989:122:7",
										"statements": [
											{
												"assignments": [
													888,
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4005:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "4000:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 887,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4000:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4022:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "4014:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4014:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [
														{
															"id": 892,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "4039:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 893,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4042:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 891,
														"name": "tryAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4032:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3999:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4069:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 898,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "4078:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4091:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4091:7:7",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 899,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4086:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4100:3:7",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4086:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 886,
												"id": 905,
												"nodeType": "Return",
												"src": "4054:50:7"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "3804:103:7",
										"text": " @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingAdd",
									"nameLocation": "3921:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3935:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3954:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3946:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:22:7"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3980:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:9:7"
									},
									"scope": 2316,
									"src": "3912:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "4294:73:7",
										"statements": [
											{
												"assignments": [
													null,
													918
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4315:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "4307:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"id": 920,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "4332:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 921,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4335:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "trySub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "4325:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:33:7"
											},
											{
												"expression": {
													"id": 924,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 918,
													"src": "4354:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 916,
												"id": 925,
												"nodeType": "Return",
												"src": "4347:13:7"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "4117:95:7",
										"text": " @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingSub",
									"nameLocation": "4226:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4248:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4240:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4259:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4251:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:22:7"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4285:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:9:7"
									},
									"scope": 2316,
									"src": "4217:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "4564:122:7",
										"statements": [
											{
												"assignments": [
													938,
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4580:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4575:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 937,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4575:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4597:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4589:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "4614:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "4617:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "tryMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4607:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "4644:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 948,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4653:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4666:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 950,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4666:7:7",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 949,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4661:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4661:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4675:3:7",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4661:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4636:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 936,
												"id": 955,
												"nodeType": "Return",
												"src": "4629:50:7"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "4373:109:7",
										"text": " @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingMul",
									"nameLocation": "4496:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4518:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4510:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4529:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4521:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:22:7"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4555:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:7"
									},
									"scope": 2316,
									"src": "4487:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5158:207:7",
										"statements": [
											{
												"id": 982,
												"nodeType": "UncheckedBlock",
												"src": "5168:191:7",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "5306:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 970,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 962,
																						"src": "5312:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 971,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "5316:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5312:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5311:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 976,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "5337:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 974,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4081,
																					"src": "5321:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5330:6:7",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4080,
																				"src": "5321:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5321:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5311:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5310:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5306:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 968,
														"id": 981,
														"nodeType": "Return",
														"src": "5299:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "4692:374:7",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "5080:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "5093:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5088:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5112:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5104:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5123:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5115:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:38:7"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5149:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:9:7"
									},
									"scope": 2316,
									"src": "5071:294:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5502:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 995,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "5527:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 996,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "5531:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5527:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 998,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "5534:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 999,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "5537:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "5519:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 1001,
												"nodeType": "Return",
												"src": "5512:27:7"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "5371:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5444:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5456:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5448:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5467:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5459:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:22:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5493:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:7"
									},
									"scope": 2316,
									"src": "5435:111:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5684:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5709:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1015,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "5713:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5709:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "5716:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1018,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5719:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "5701:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1020,
												"nodeType": "Return",
												"src": "5694:27:7"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5552:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5626:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5638:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5630:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5649:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5641:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:22:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5675:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:7"
									},
									"scope": 2316,
									"src": "5617:111:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "5912:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1032,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "5967:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1033,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "5971:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1035,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5966:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1036,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "5977:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1037,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5981:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5977:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1039,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5976:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5986:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5976:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5966:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1043,
												"nodeType": "Return",
												"src": "5959:28:7"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5734:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "5850:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5866:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5858:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5877:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5869:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:22:7"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:9:7"
									},
									"scope": 2316,
									"src": "5841:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "6286:633:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1055,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "6300:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6300:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "IfStatement",
												"src": "6296:150:7",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "6308:138:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1061,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "6412:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6418:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 650,
																		"src": "6412:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1058,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "6400:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6406:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 682,
																	"src": "6400:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6400:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1064,
															"nodeType": "ExpressionStatement",
															"src": "6400:35:7"
														}
													]
												}
											},
											{
												"id": 1084,
												"nodeType": "UncheckedBlock",
												"src": "6829:84:7",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1069,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "6876:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6876:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1067,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "6860:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6869:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "6860:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6860:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1075,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1073,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "6887:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1074,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6891:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6887:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1076,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6886:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1077,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "6896:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6900:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6886:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6885:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6860:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1054,
														"id": 1083,
														"nodeType": "Return",
														"src": "6853:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "6000:210:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "6224:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6240:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6232:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6251:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6243:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:22:7"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6277:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:7"
									},
									"scope": 2316,
									"src": "6215:704:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "7340:3585:7",
										"statements": [
											{
												"id": 1220,
												"nodeType": "UncheckedBlock",
												"src": "7350:3569:7",
												"statements": [
													{
														"assignments": [
															1099,
															1101
														],
														"declarations": [
															{
																"constant": false,
																"id": 1099,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "7383:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "7375:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7375:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1101,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "7397:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "7389:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1106,
														"initialValue": {
															"arguments": [
																{
																	"id": 1103,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7411:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1104,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "7414:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1102,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7404:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7404:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7374:42:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1107,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "7498:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7498:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1115,
														"nodeType": "IfStatement",
														"src": "7494:365:7",
														"trueBody": {
															"id": 1114,
															"nodeType": "Block",
															"src": "7509:350:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1110,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "7827:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1111,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "7833:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7827:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1097,
																	"id": 1113,
																	"nodeType": "Return",
																	"src": "7820:24:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "7969:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1117,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "7984:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7969:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "7965:142:7",
														"trueBody": {
															"id": 1133,
															"nodeType": "Block",
															"src": "7990:117:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1125,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1123,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1093,
																							"src": "8028:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8043:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8028:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1126,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "8046:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8052:16:7",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 650,
																						"src": "8046:22:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1128,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "8070:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8076:14:7",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 646,
																						"src": "8070:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1122,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "8020:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8020:71:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1119,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 683,
																				"src": "8008:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8014:5:7",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 682,
																			"src": "8008:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8008:84:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "8008:84:7"
																}
															]
														}
													},
													{
														"assignments": [
															1136
														],
														"declarations": [
															{
																"constant": false,
																"id": 1136,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "8367:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "8359:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1135,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8359:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1137,
														"nodeType": "VariableDeclarationStatement",
														"src": "8359:17:7"
													},
													{
														"AST": {
															"nativeSrc": "8415:283:7",
															"nodeType": "YulBlock",
															"src": "8415:283:7",
															"statements": [
																{
																	"nativeSrc": "8484:38:7",
																	"nodeType": "YulAssignment",
																	"src": "8484:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8504:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8504:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "8507:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8507:1:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "8510:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "8510:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "8497:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:7"
																		},
																		"nativeSrc": "8497:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "8484:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "8484:9:7"
																		}
																	]
																},
																{
																	"nativeSrc": "8604:37:7",
																	"nodeType": "YulAssignment",
																	"src": "8604:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "high",
																				"nativeSrc": "8616:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "8625:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:7"
																					},
																					{
																						"name": "low",
																						"nativeSrc": "8636:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8636:3:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "8622:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8622:2:7"
																				},
																				"nativeSrc": "8622:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8622:18:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:7"
																		},
																		"nativeSrc": "8612:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:29:7"
																	},
																	"variableNames": [
																		{
																			"name": "high",
																			"nativeSrc": "8604:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "8604:4:7"
																		}
																	]
																},
																{
																	"nativeSrc": "8658:26:7",
																	"nodeType": "YulAssignment",
																	"src": "8658:26:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "8669:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:7"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "8674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8665:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:7"
																		},
																		"nativeSrc": "8665:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:19:7"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "8658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1093,
																"isOffset": false,
																"isSlot": false,
																"src": "8510:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1099,
																"isOffset": false,
																"isSlot": false,
																"src": "8604:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1099,
																"isOffset": false,
																"isSlot": false,
																"src": "8616:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "8636:3:7",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "8658:3:7",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "8669:3:7",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "8484:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "8625:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "8674:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1089,
																"isOffset": false,
																"isSlot": false,
																"src": "8504:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "8507:1:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1138,
														"nodeType": "InlineAssembly",
														"src": "8390:308:7"
													},
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "8910:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "8902:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "8917:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8932:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1143,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "8936:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8932:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8931:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8917:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8902:46:7"
													},
													{
														"AST": {
															"nativeSrc": "8987:359:7",
															"nodeType": "YulBlock",
															"src": "8987:359:7",
															"statements": [
																{
																	"nativeSrc": "9052:37:7",
																	"nodeType": "YulAssignment",
																	"src": "9052:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "9071:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "9071:11:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9084:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9084:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:7"
																		},
																		"nativeSrc": "9067:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "9052:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "9052:11:7"
																		}
																	]
																},
																{
																	"nativeSrc": "9153:21:7",
																	"nodeType": "YulAssignment",
																	"src": "9153:21:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "9164:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9169:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9169:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:7"
																		},
																		"nativeSrc": "9160:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:7"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "9153:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:7"
																		}
																	]
																},
																{
																	"nativeSrc": "9293:39:7",
																	"nodeType": "YulAssignment",
																	"src": "9293:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9313:1:7",
																								"nodeType": "YulLiteral",
																								"src": "9313:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "9316:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "9316:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "9309:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9309:3:7"
																						},
																						"nativeSrc": "9309:12:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9309:12:7"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "9323:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9305:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:7"
																				},
																				"nativeSrc": "9305:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9330:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:7"
																		},
																		"nativeSrc": "9301:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "9293:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "9293:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1093,
																"isOffset": false,
																"isSlot": false,
																"src": "9052:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1093,
																"isOffset": false,
																"isSlot": false,
																"src": "9071:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "9153:3:7",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "9164:3:7",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "9084:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "9169:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "9293:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "9316:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "9323:4:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1148,
														"nodeType": "InlineAssembly",
														"src": "8962:384:7"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1149,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "9409:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1150,
																	"name": "high",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "9416:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1151,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "9423:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9416:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9409:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "9409:18:7"
													},
													{
														"assignments": [
															1156
														],
														"declarations": [
															{
																"constant": false,
																"id": 1156,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "9770:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "9762:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1155,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9762:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1163,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9781:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1158,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "9785:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9781:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9780:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9800:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "9780:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9762:39:7"
													},
													{
														"expression": {
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1164,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10018:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10029:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1166,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10033:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1167,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10047:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10033:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10018:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1171,
														"nodeType": "ExpressionStatement",
														"src": "10018:36:7"
													},
													{
														"expression": {
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1172,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1174,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10103:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1175,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10117:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10103:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1179,
														"nodeType": "ExpressionStatement",
														"src": "10088:36:7"
													},
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1180,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10160:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10171:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1182,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10175:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1183,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10189:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10175:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10171:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10160:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "10160:36:7"
													},
													{
														"expression": {
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1188,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10231:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1190,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10246:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1191,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10260:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10246:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10242:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1195,
														"nodeType": "ExpressionStatement",
														"src": "10231:36:7"
													},
													{
														"expression": {
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1196,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10304:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1198,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10319:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1199,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10333:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10319:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10315:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1203,
														"nodeType": "ExpressionStatement",
														"src": "10304:36:7"
													},
													{
														"expression": {
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1204,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10378:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10389:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1206,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10393:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1207,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10407:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10393:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10389:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10378:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1211,
														"nodeType": "ExpressionStatement",
														"src": "10378:36:7"
													},
													{
														"expression": {
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1212,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "10859:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1213,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "10868:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1214,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "10874:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10868:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10859:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1217,
														"nodeType": "ExpressionStatement",
														"src": "10859:22:7"
													},
													{
														"expression": {
															"id": 1218,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10902:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1097,
														"id": 1219,
														"nodeType": "Return",
														"src": "10895:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "6925:312:7",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7251:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7266:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7258:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7277:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7269:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7288:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7280:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:43:7"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7332:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7324:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:16:7"
									},
									"scope": 2316,
									"src": "7242:3683:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "11164:128:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1238,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "11188:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1239,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "11191:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1240,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "11194:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1237,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1222,
																1259
															],
															"referencedDeclaration": 1222,
															"src": "11181:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11181:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1245,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "11242:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$707",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$707",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1244,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2315,
																		"src": "11225:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11225:26:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1248,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "11262:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1249,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "11265:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1250,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "11268:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1247,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "11255:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11255:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11255:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11225:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1242,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4081,
																"src": "11209:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11218:6:7",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4080,
															"src": "11209:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11209:76:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11181:104:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1257,
												"nodeType": "Return",
												"src": "11174:111:7"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "10931:118:7",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11063:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11078:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11070:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11089:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11081:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11100:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11092:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11122:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11113:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "Rounding",
														"nameLocations": [
															"11113:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "11113:8:7"
													},
													"referencedDeclaration": 707,
													"src": "11113:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:62:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11155:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:9:7"
									},
									"scope": 2316,
									"src": "11054:238:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "11500:245:7",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "11510:229:7",
												"statements": [
													{
														"assignments": [
															1272,
															1274
														],
														"declarations": [
															{
																"constant": false,
																"id": 1272,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "11543:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1307,
																"src": "11535:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1271,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11535:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1274,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "11557:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1307,
																"src": "11549:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1279,
														"initialValue": {
															"arguments": [
																{
																	"id": 1276,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "11571:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1277,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "11574:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1275,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "11564:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11534:42:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1280,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "11594:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11602:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1282,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "11607:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11602:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11594:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "11590:86:7",
														"trueBody": {
															"id": 1292,
															"nodeType": "Block",
															"src": "11610:66:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1288,
																					"name": "Panic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 683,
																					"src": "11640:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																						"typeString": "type(library Panic)"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "11646:14:7",
																				"memberName": "UNDER_OVERFLOW",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 646,
																				"src": "11640:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1285,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 683,
																				"src": "11628:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11634:5:7",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 682,
																			"src": "11628:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11628:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "11628:33:7"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1294,
																			"name": "high",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1272,
																			"src": "11697:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11706:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1296,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1266,
																						"src": "11712:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "11706:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"id": 1298,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11705:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "11697:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11696:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1301,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "11719:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"id": 1302,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "11726:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11719:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11718:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11696:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1306,
														"nodeType": "Return",
														"src": "11689:39:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "11298:111:7",
										"text": " @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11423:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11438:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11430:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11430:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11449:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11441:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11458:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11452:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1265,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11452:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11429:31:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11492:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11484:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:16:7"
									},
									"scope": 2316,
									"src": "11414:331:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "11963:113:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1325,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "11987:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1326,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "11990:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1327,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "11993:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1324,
															"name": "mulShr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1309,
																1348
															],
															"referencedDeclaration": 1309,
															"src": "11980:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11980:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1332,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "12031:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$707",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$707",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1331,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2315,
																		"src": "12014:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12014:26:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1335,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1312,
																				"src": "12051:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1336,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1314,
																				"src": "12054:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12057:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1338,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1316,
																					"src": "12062:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12057:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1334,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "12044:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12044:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12067:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12044:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12014:54:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1329,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4081,
																"src": "11998:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12007:6:7",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4080,
															"src": "11998:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11998:71:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11980:89:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1346,
												"nodeType": "Return",
												"src": "11973:96:7"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "11751:109:7",
										"text": " @dev Calculates x * y >> n with full precision, following the selected rounding direction."
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11874:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11889:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11881:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11900:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11892:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11909:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1315,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11921:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11912:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1317,
														"name": "Rounding",
														"nameLocations": [
															"11912:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "11912:8:7"
													},
													"referencedDeclaration": 707,
													"src": "11912:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:50:7"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11954:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:9:7"
									},
									"scope": 2316,
									"src": "11865:211:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "12710:1849:7",
										"statements": [
											{
												"id": 1443,
												"nodeType": "UncheckedBlock",
												"src": "12720:1833:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1358,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "12748:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12753:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12748:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "12744:20:7",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1357,
															"id": 1362,
															"nodeType": "Return",
															"src": "12756:8:7"
														}
													},
													{
														"assignments": [
															1365
														],
														"declarations": [
															{
																"constant": false,
																"id": 1365,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13243:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1443,
																"src": "13235:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13235:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1369,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1366,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "13255:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1367,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "13259:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13235:25:7"
													},
													{
														"assignments": [
															1371
														],
														"declarations": [
															{
																"constant": false,
																"id": 1371,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "13282:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1443,
																"src": "13274:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1370,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13274:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1373,
														"initialValue": {
															"id": 1372,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "13288:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13274:15:7"
													},
													{
														"assignments": [
															1375
														],
														"declarations": [
															{
																"constant": false,
																"id": 1375,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "13432:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1443,
																"src": "13425:8:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1374,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13425:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1377,
														"initialValue": {
															"hexValue": "30",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13436:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13425:12:7"
													},
													{
														"assignments": [
															1379
														],
														"declarations": [
															{
																"constant": false,
																"id": 1379,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "13458:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1443,
																"src": "13451:8:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1378,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13451:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1381,
														"initialValue": {
															"hexValue": "31",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13462:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13451:12:7"
													},
													{
														"body": {
															"id": 1418,
															"nodeType": "Block",
															"src": "13501:882:7",
															"statements": [
																{
																	"assignments": [
																		1386
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1386,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "13527:8:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 1418,
																			"src": "13519:16:7",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1385,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13519:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1390,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1387,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "13538:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1388,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1365,
																			"src": "13544:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13538:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13519:34:7"
																},
																{
																	"expression": {
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1391,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1371,
																					"src": "13573:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1392,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "13578:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1393,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13572:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1394,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "13678:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1395,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1371,
																						"src": "13923:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1398,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1396,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1365,
																							"src": "13929:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1397,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1386,
																							"src": "13941:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13929:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13923:26:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1400,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13591:376:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "13572:395:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1402,
																	"nodeType": "ExpressionStatement",
																	"src": "13572:395:7"
																},
																{
																	"expression": {
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1403,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1375,
																					"src": "13987:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1404,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "13990:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1405,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13986:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1406,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "14072:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1407,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1375,
																						"src": "14326:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1408,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1379,
																							"src": "14330:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1411,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1386,
																									"src": "14341:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1410,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14334:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1409,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "14334:6:7",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1412,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14334:16:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "14330:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "14326:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1415,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13995:373:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "13986:382:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1417,
																	"nodeType": "ExpressionStatement",
																	"src": "13986:382:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "13485:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13498:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13485:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1419,
														"nodeType": "WhileStatement",
														"src": "13478:905:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "14401:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14408:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14401:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1425,
														"nodeType": "IfStatement",
														"src": "14397:22:7",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14418:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1357,
															"id": 1424,
															"nodeType": "Return",
															"src": "14411:8:7"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1427,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "14470:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14474:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14470:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1430,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "14477:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "14489:2:7",
																				"subExpression": {
																					"id": 1433,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1375,
																					"src": "14490:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1431,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14477:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1439,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1375,
																			"src": "14502:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14494:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1437,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14494:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14494:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1426,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "14462:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1357,
														"id": 1442,
														"nodeType": "Return",
														"src": "14455:50:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "12082:553:7",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "12649:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12664:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12656:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "12675:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12667:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12655:22:7"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12701:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12700:9:7"
									},
									"scope": 2316,
									"src": "12640:1919:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "15159:82:7",
										"statements": [
											{
												"id": 1464,
												"nodeType": "UncheckedBlock",
												"src": "15169:66:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1457,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "15212:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1458,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "15215:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15219:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "15215:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1461,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "15222:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1455,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "15200:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2316_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15205:6:7",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1502,
																"src": "15200:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1454,
														"id": 1463,
														"nodeType": "Return",
														"src": "15193:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "14565:514:7",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "15093:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15113:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "15105:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "15124:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "15116:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:22:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "15150:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15149:9:7"
									},
									"scope": 2316,
									"src": "15084:157:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "16011:174:7",
										"statements": [
											{
												"assignments": [
													1479,
													1481
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16027:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "16022:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16022:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1481,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16044:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "16036:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16036:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"arguments": [
														{
															"id": 1483,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "16064:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1484,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "16067:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1485,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "16070:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1482,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1526,
															1608
														],
														"referencedDeclaration": 1526,
														"src": "16054:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16054:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16021:51:7"
											},
											{
												"condition": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16086:8:7",
													"subExpression": {
														"id": 1488,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "16087:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"nodeType": "IfStatement",
												"src": "16082:74:7",
												"trueBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "16096:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1493,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "16122:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16128:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 650,
																		"src": "16122:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1490,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "16110:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16116:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 682,
																	"src": "16110:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16110:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "16110:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1481,
													"src": "16172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1500,
												"nodeType": "Return",
												"src": "16165:13:7"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "15247:678:7",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15939:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15954:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "15946:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15946:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15965:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "15957:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15976:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "15968:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15968:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15945:33:7"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "16002:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:9:7"
									},
									"scope": 2316,
									"src": "15930:255:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "17039:1493:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1516,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "17053:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17058:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17053:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "17049:29:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17069:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17076:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1521,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17068:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1515,
													"id": 1522,
													"nodeType": "Return",
													"src": "17061:17:7"
												}
											},
											{
												"AST": {
													"nativeSrc": "17113:1413:7",
													"nodeType": "YulBlock",
													"src": "17113:1413:7",
													"statements": [
														{
															"nativeSrc": "17127:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17127:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17144:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17144:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17138:5:7"
																},
																"nativeSrc": "17138:11:7",
																"nodeType": "YulFunctionCall",
																"src": "17138:11:7"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "17131:3:7",
																	"nodeType": "YulTypedName",
																	"src": "17131:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18057:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18057:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18062:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18050:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:7"
																},
																"nativeSrc": "18050:17:7",
																"nodeType": "YulFunctionCall",
																"src": "18050:17:7"
															},
															"nativeSrc": "18050:17:7",
															"nodeType": "YulExpressionStatement",
															"src": "18050:17:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18091:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18091:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:4:7",
																				"nodeType": "YulLiteral",
																				"src": "18096:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18087:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:7"
																		},
																		"nativeSrc": "18087:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:7"
																},
																"nativeSrc": "18080:28:7",
																"nodeType": "YulFunctionCall",
																"src": "18080:28:7"
															},
															"nativeSrc": "18080:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "18080:28:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18132:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18132:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:4:7",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:7"
																		},
																		"nativeSrc": "18128:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18144:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18144:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:7"
																},
																"nativeSrc": "18121:28:7",
																"nodeType": "YulFunctionCall",
																"src": "18121:28:7"
															},
															"nativeSrc": "18121:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "18121:28:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18173:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18173:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18178:4:7",
																				"nodeType": "YulLiteral",
																				"src": "18178:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:7"
																		},
																		"nativeSrc": "18169:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:14:7"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "18185:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18185:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:7"
																},
																"nativeSrc": "18162:25:7",
																"nodeType": "YulFunctionCall",
																"src": "18162:25:7"
															},
															"nativeSrc": "18162:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "18162:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18211:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18211:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18216:4:7",
																				"nodeType": "YulLiteral",
																				"src": "18216:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18207:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:7"
																		},
																		"nativeSrc": "18207:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:14:7"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "18223:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18223:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:7"
																},
																"nativeSrc": "18200:25:7",
																"nodeType": "YulFunctionCall",
																"src": "18200:25:7"
															},
															"nativeSrc": "18200:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "18200:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18249:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18249:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:4:7",
																				"nodeType": "YulLiteral",
																				"src": "18254:4:7",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18245:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:7"
																		},
																		"nativeSrc": "18245:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18245:14:7"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "18261:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18261:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:7"
																},
																"nativeSrc": "18238:25:7",
																"nodeType": "YulFunctionCall",
																"src": "18238:25:7"
															},
															"nativeSrc": "18238:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "18238:25:7"
														},
														{
															"nativeSrc": "18425:57:7",
															"nodeType": "YulAssignment",
															"src": "18425:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:7"
																		},
																		"nativeSrc": "18447:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18454:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:7",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18460:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18460:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18465:4:7",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18471:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18477:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18477:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "18436:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "18436:10:7"
																},
																"nativeSrc": "18436:46:7",
																"nodeType": "YulFunctionCall",
																"src": "18436:46:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18425:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "18425:7:7"
																}
															]
														},
														{
															"nativeSrc": "18495:21:7",
															"nodeType": "YulAssignment",
															"src": "18495:21:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18511:4:7",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18505:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18505:5:7"
																},
																"nativeSrc": "18505:11:7",
																"nodeType": "YulFunctionCall",
																"src": "18505:11:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1505,
														"isOffset": false,
														"isSlot": false,
														"src": "18185:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": false,
														"src": "18223:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "18261:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1514,
														"isOffset": false,
														"isSlot": false,
														"src": "18495:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1512,
														"isOffset": false,
														"isSlot": false,
														"src": "18425:7:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1524,
												"nodeType": "InlineAssembly",
												"src": "17088:1438:7"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "16191:738:7",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16943:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16961:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16953:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16972:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16964:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16983:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16975:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:33:7"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17014:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "17009:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17009:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17031:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "17023:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17023:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17008:30:7"
									},
									"scope": 2316,
									"src": "16934:1598:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "18729:179:7",
										"statements": [
											{
												"assignments": [
													1539,
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18745:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1561,
														"src": "18740:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18740:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18767:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1561,
														"src": "18754:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18754:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1547,
												"initialValue": {
													"arguments": [
														{
															"id": 1543,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "18787:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1544,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "18790:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1545,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "18793:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1542,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1526,
															1608
														],
														"referencedDeclaration": 1608,
														"src": "18777:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18777:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18739:56:7"
											},
											{
												"condition": {
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18809:8:7",
													"subExpression": {
														"id": 1548,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "18810:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1558,
												"nodeType": "IfStatement",
												"src": "18805:74:7",
												"trueBody": {
													"id": 1557,
													"nodeType": "Block",
													"src": "18819:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1553,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "18845:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18851:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 650,
																		"src": "18845:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1550,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "18833:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$683_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18839:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 682,
																	"src": "18833:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18833:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1556,
															"nodeType": "ExpressionStatement",
															"src": "18833:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1559,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1541,
													"src": "18895:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1560,
												"nodeType": "Return",
												"src": "18888:13:7"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "18538:85:7",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "18637:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18657:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "18644:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18644:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "18673:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "18660:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18660:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "18689:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "18676:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18676:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18643:48:7"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "18715:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18715:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:14:7"
									},
									"scope": 2316,
									"src": "18628:280:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "19162:771:7",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1577,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "19187:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1576,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "19176:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1586,
												"nodeType": "IfStatement",
												"src": "19172:47:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19199:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19216:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "19206:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19210:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19206:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1584,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19198:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1575,
													"id": 1585,
													"nodeType": "Return",
													"src": "19191:28:7"
												}
											},
											{
												"assignments": [
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "19238:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "19230:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"expression": {
														"id": 1589,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "19245:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19247:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19245:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:23:7"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1592,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "19335:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1595,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "19361:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19363:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19361:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1597,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "19371:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19373:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19371:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1599,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "19381:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1600,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "19387:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1601,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "19390:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1602,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "19393:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1593,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "19344:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19348:12:7",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "19344:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19344:51:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "19335:60:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "19335:60:7"
											},
											{
												"AST": {
													"nativeSrc": "19431:496:7",
													"nodeType": "YulBlock",
													"src": "19431:496:7",
													"statements": [
														{
															"nativeSrc": "19445:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19445:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19464:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19464:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19472:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19460:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:7"
																},
																"nativeSrc": "19460:17:7",
																"nodeType": "YulFunctionCall",
																"src": "19460:17:7"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "19449:7:7",
																	"nodeType": "YulTypedName",
																	"src": "19449:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19567:73:7",
															"nodeType": "YulAssignment",
															"src": "19567:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "19589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:7"
																		},
																		"nativeSrc": "19589:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19589:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19596:4:7",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19602:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "19602:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "19617:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19617:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19611:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "19611:5:7"
																		},
																		"nativeSrc": "19611:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19611:13:7"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19626:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "19626:7:7"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19635:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:7"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "19578:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "19578:10:7"
																},
																"nativeSrc": "19578:62:7",
																"nodeType": "YulFunctionCall",
																"src": "19578:62:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "19567:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "19567:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19796:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19796:6:7"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19804:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19789:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:7"
																},
																"nativeSrc": "19789:20:7",
																"nodeType": "YulFunctionCall",
																"src": "19789:20:7"
															},
															"nativeSrc": "19789:20:7",
															"nodeType": "YulExpressionStatement",
															"src": "19789:20:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19892:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19892:4:7",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "19902:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "19902:7:7"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "19911:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19911:4:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19898:3:7"
																		},
																		"nativeSrc": "19898:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19898:18:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:7"
																},
																"nativeSrc": "19885:32:7",
																"nodeType": "YulFunctionCall",
																"src": "19885:32:7"
															},
															"nativeSrc": "19885:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "19885:32:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1588,
														"isOffset": false,
														"isSlot": false,
														"src": "19635:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1588,
														"isOffset": false,
														"isSlot": false,
														"src": "19804:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1588,
														"isOffset": false,
														"isSlot": false,
														"src": "19911:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "19464:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "19617:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "19796:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1572,
														"isOffset": false,
														"isSlot": false,
														"src": "19567:7:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1606,
												"nodeType": "InlineAssembly",
												"src": "19406:521:7"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "18914:88:7",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "19016:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19048:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "19035:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19035:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "19072:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "19059:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19059:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "19096:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "19083:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19025:78:7"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19132:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "19127:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19127:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19154:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "19141:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19141:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19126:35:7"
									},
									"scope": 2316,
									"src": "19007:926:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "20088:176:7",
										"statements": [
											{
												"body": {
													"id": 1636,
													"nodeType": "Block",
													"src": "20145:92:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1627,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "20163:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1629,
																	"indexExpression": {
																		"id": 1628,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "20173:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20163:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20179:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20163:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1635,
															"nodeType": "IfStatement",
															"src": "20159:68:7",
															"trueBody": {
																"id": 1634,
																"nodeType": "Block",
																"src": "20182:45:7",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1615,
																		"id": 1633,
																		"nodeType": "Return",
																		"src": "20200:12:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "20118:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1621,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "20122:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20132:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20122:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20118:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"initializationExpression": {
													"assignments": [
														1617
													],
													"declarations": [
														{
															"constant": false,
															"id": 1617,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20111:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1637,
															"src": "20103:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1616,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20103:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1619,
													"initialValue": {
														"hexValue": "30",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20115:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20103:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20140:3:7",
														"subExpression": {
															"id": 1624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "20142:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1626,
													"nodeType": "ExpressionStatement",
													"src": "20140:3:7"
												},
												"nodeType": "ForStatement",
												"src": "20098:139:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20253:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1615,
												"id": 1639,
												"nodeType": "Return",
												"src": "20246:11:7"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "19939:72:7",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "20025:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "20049:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "20036:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20036:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20035:24:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "20082:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20082:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:6:7"
									},
									"scope": 2316,
									"src": "20016:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "20624:5124:7",
										"statements": [
											{
												"id": 1858,
												"nodeType": "UncheckedBlock",
												"src": "20634:5108:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1649,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "20728:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20728:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1655,
														"nodeType": "IfStatement",
														"src": "20724:53:7",
														"trueBody": {
															"id": 1654,
															"nodeType": "Block",
															"src": "20736:41:7",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "20761:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1648,
																	"id": 1653,
																	"nodeType": "Return",
																	"src": "20754:8:7"
																}
															]
														}
													},
													{
														"assignments": [
															1657
														],
														"declarations": [
															{
																"constant": false,
																"id": 1657,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "21712:2:7",
																"nodeType": "VariableDeclaration",
																"scope": 1858,
																"src": "21704:10:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21704:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1659,
														"initialValue": {
															"id": 1658,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "21717:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21704:14:7"
													},
													{
														"assignments": [
															1661
														],
														"declarations": [
															{
																"constant": false,
																"id": 1661,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "21740:2:7",
																"nodeType": "VariableDeclaration",
																"scope": 1858,
																"src": "21732:10:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1660,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21732:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1663,
														"initialValue": {
															"hexValue": "31",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21745:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21732:14:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1664,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "21765:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21772:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21777:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21772:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21771:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "21765:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1679,
														"nodeType": "IfStatement",
														"src": "21761:92:7",
														"trueBody": {
															"id": 1678,
															"nodeType": "Block",
															"src": "21783:70:7",
															"statements": [
																{
																	"expression": {
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1670,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "21801:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21808:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21801:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1673,
																	"nodeType": "ExpressionStatement",
																	"src": "21801:10:7"
																},
																{
																	"expression": {
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1674,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "21829:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21836:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21829:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1677,
																	"nodeType": "ExpressionStatement",
																	"src": "21829:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1680,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "21870:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21877:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21877:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21876:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "21870:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1695,
														"nodeType": "IfStatement",
														"src": "21866:90:7",
														"trueBody": {
															"id": 1694,
															"nodeType": "Block",
															"src": "21887:69:7",
															"statements": [
																{
																	"expression": {
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1686,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "21905:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21912:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21905:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1689,
																	"nodeType": "ExpressionStatement",
																	"src": "21905:9:7"
																},
																{
																	"expression": {
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1690,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "21932:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21939:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21932:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1693,
																	"nodeType": "ExpressionStatement",
																	"src": "21932:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "21973:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21985:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21980:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1700,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21979:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "21973:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1711,
														"nodeType": "IfStatement",
														"src": "21969:90:7",
														"trueBody": {
															"id": 1710,
															"nodeType": "Block",
															"src": "21990:69:7",
															"statements": [
																{
																	"expression": {
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1702,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "22008:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22015:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22008:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1705,
																	"nodeType": "ExpressionStatement",
																	"src": "22008:9:7"
																},
																{
																	"expression": {
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1706,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "22035:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22042:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22035:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1709,
																	"nodeType": "ExpressionStatement",
																	"src": "22035:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "22076:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22083:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22088:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22083:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22082:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "22076:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "22072:89:7",
														"trueBody": {
															"id": 1726,
															"nodeType": "Block",
															"src": "22093:68:7",
															"statements": [
																{
																	"expression": {
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1718,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "22111:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22118:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22111:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1721,
																	"nodeType": "ExpressionStatement",
																	"src": "22111:9:7"
																},
																{
																	"expression": {
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1722,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "22138:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22145:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22138:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1725,
																	"nodeType": "ExpressionStatement",
																	"src": "22138:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "22178:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22190:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22185:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22184:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "22178:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1743,
														"nodeType": "IfStatement",
														"src": "22174:87:7",
														"trueBody": {
															"id": 1742,
															"nodeType": "Block",
															"src": "22194:67:7",
															"statements": [
																{
																	"expression": {
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1734,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "22212:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22219:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22212:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1737,
																	"nodeType": "ExpressionStatement",
																	"src": "22212:8:7"
																},
																{
																	"expression": {
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1738,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "22238:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22245:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22238:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1741,
																	"nodeType": "ExpressionStatement",
																	"src": "22238:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "22278:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22285:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22290:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22285:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1748,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22284:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "22278:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1759,
														"nodeType": "IfStatement",
														"src": "22274:87:7",
														"trueBody": {
															"id": 1758,
															"nodeType": "Block",
															"src": "22294:67:7",
															"statements": [
																{
																	"expression": {
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1750,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "22312:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22319:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22312:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1753,
																	"nodeType": "ExpressionStatement",
																	"src": "22312:8:7"
																},
																{
																	"expression": {
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1754,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "22338:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22345:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22338:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1757,
																	"nodeType": "ExpressionStatement",
																	"src": "22338:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1760,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "22378:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22385:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22390:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22385:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 1764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22384:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "22378:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1771,
														"nodeType": "IfStatement",
														"src": "22374:61:7",
														"trueBody": {
															"id": 1770,
															"nodeType": "Block",
															"src": "22394:41:7",
															"statements": [
																{
																	"expression": {
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1766,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "22412:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22412:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1769,
																	"nodeType": "ExpressionStatement",
																	"src": "22412:8:7"
																}
															]
														}
													},
													{
														"expression": {
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1772,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "22855:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 1773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22861:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1774,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "22865:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22861:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22860:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22872:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22860:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22855:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1780,
														"nodeType": "ExpressionStatement",
														"src": "22855:18:7"
													},
													{
														"expression": {
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1781,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "24760:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1782,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "24766:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1783,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "24771:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1784,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "24775:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24771:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24766:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1787,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24765:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24782:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24765:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24760:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1791,
														"nodeType": "ExpressionStatement",
														"src": "24760:23:7"
													},
													{
														"expression": {
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1792,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "24869:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1793,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "24875:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1794,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "24880:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1795,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "24884:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24880:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24875:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24874:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24891:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24874:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24869:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1802,
														"nodeType": "ExpressionStatement",
														"src": "24869:23:7"
													},
													{
														"expression": {
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1803,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "24980:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1804,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "24986:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1805,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "24991:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1806,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "24995:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24991:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24986:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1809,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24985:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25002:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24985:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24980:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1813,
														"nodeType": "ExpressionStatement",
														"src": "24980:23:7"
													},
													{
														"expression": {
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1814,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "25089:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1815,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "25095:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1816,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "25100:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1817,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "25104:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25100:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25095:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1820,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25094:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25111:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25094:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25089:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1824,
														"nodeType": "ExpressionStatement",
														"src": "25089:23:7"
													},
													{
														"expression": {
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1825,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "25199:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1826,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "25205:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1827,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "25210:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1828,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "25214:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25210:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25205:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1831,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25204:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25221:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25204:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25199:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1835,
														"nodeType": "ExpressionStatement",
														"src": "25199:23:7"
													},
													{
														"expression": {
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1836,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "25309:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1837,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "25315:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1838,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "25320:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1839,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "25324:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25320:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25315:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1842,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25314:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25331:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25314:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1846,
														"nodeType": "ExpressionStatement",
														"src": "25309:23:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1847,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "25698:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1850,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "25719:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1851,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1644,
																				"src": "25724:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1852,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "25728:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1848,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "25703:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25712:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "25703:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25698:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1648,
														"id": 1857,
														"nodeType": "Return",
														"src": "25691:40:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "20270:292:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20576:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20589:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "20581:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20580:11:7"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "20615:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:9:7"
									},
									"scope": 2316,
									"src": "20567:5181:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "25921:171:7",
										"statements": [
											{
												"id": 1892,
												"nodeType": "UncheckedBlock",
												"src": "25931:155:7",
												"statements": [
													{
														"assignments": [
															1872
														],
														"declarations": [
															{
																"constant": false,
																"id": 1872,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25963:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1892,
																"src": "25955:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25955:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1876,
														"initialValue": {
															"arguments": [
																{
																	"id": 1874,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "25977:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1873,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1860,
																	1894
																],
																"referencedDeclaration": 1860,
																"src": "25972:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25972:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25955:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "26000:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1881,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1866,
																					"src": "26042:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1880,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "26025:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26025:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1883,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1872,
																					"src": "26055:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1884,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1872,
																					"src": "26064:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26055:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1886,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1863,
																				"src": "26073:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26055:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26025:49:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1878,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "26009:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26018:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "26009:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26009:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26000:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1870,
														"id": 1891,
														"nodeType": "Return",
														"src": "25993:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "25754:86:7",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25854:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25867:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "25859:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25859:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25879:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "25870:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1864,
														"name": "Rounding",
														"nameLocations": [
															"25870:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "25870:8:7"
													},
													"referencedDeclaration": 707,
													"src": "25870:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25858:30:7"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "25912:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:9:7"
									},
									"scope": 2316,
									"src": "25845:247:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "26281:2334:7",
										"statements": [
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1902,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26363:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1905,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "26383:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26387:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "26383:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1903,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26367:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26376:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26367:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26426:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "26367:60:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26363:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "26363:64:7"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26503:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1916,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "26525:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1917,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "26530:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26525:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1919,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26524:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26535:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "26524:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1914,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26508:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26517:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26508:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26508:46:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26558:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26508:51:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "26503:56:7"
											},
											{
												"expression": {
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26634:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1930,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "26656:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1931,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "26661:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26656:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1933,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26655:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26666:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "26655:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1928,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26639:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26648:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26639:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26639:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26681:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "26639:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26634:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "26634:48:7"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1941,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26757:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1944,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "26779:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1945,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "26784:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26779:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1947,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26778:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26789:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "26778:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1942,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26762:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26771:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26762:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:34:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26800:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "26762:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26757:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "26757:44:7"
											},
											{
												"expression": {
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26874:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1958,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "26896:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1959,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "26901:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26896:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1961,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26895:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26906:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xff"
																	},
																	"src": "26895:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1956,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26879:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26888:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26879:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26879:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "33",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26915:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "26879:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26874:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "26874:42:7"
											},
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1969,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "26988:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1972,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "27010:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1973,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "27015:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27010:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1975,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27009:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866",
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27020:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "0xf"
																	},
																	"src": "27009:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1970,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "26993:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27002:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "26993:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26993:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "32",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27028:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26993:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26988:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "26988:41:7"
											},
											{
												"AST": {
													"nativeSrc": "28490:119:7",
													"nodeType": "YulBlock",
													"src": "28490:119:7",
													"statements": [
														{
															"nativeSrc": "28504:95:7",
															"nodeType": "YulAssignment",
															"src": "28504:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "28512:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "28512:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "28524:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "28524:1:7"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "28527:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "28527:1:7"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "28520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "28520:3:7"
																				},
																				"nativeSrc": "28520:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "28520:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28531:66:7",
																				"nodeType": "YulLiteral",
																				"src": "28531:66:7",
																				"type": "",
																				"value": "0x0000010102020202030303030303030300000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "28515:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "28515:4:7"
																		},
																		"nativeSrc": "28515:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:83:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28509:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "28509:2:7"
																},
																"nativeSrc": "28509:90:7",
																"nodeType": "YulFunctionCall",
																"src": "28509:90:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "28504:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1900,
														"isOffset": false,
														"isSlot": false,
														"src": "28504:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1900,
														"isOffset": false,
														"isSlot": false,
														"src": "28512:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1900,
														"isOffset": false,
														"isSlot": false,
														"src": "28524:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1897,
														"isOffset": false,
														"isSlot": false,
														"src": "28527:1:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1983,
												"nodeType": "InlineAssembly",
												"src": "28465:144:7"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "26098:119:7",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26231:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26244:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "26236:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26236:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26235:11:7"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "26278:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "26270:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26269:11:7"
									},
									"scope": 2316,
									"src": "26222:2393:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "28848:175:7",
										"statements": [
											{
												"id": 2017,
												"nodeType": "UncheckedBlock",
												"src": "28858:159:7",
												"statements": [
													{
														"assignments": [
															1997
														],
														"declarations": [
															{
																"constant": false,
																"id": 1997,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28890:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2017,
																"src": "28882:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1996,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2001,
														"initialValue": {
															"arguments": [
																{
																	"id": 1999,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "28904:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1998,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1985,
																	2019
																],
																"referencedDeclaration": 1985,
																"src": "28899:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28899:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28882:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2002,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "28931:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2006,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1991,
																					"src": "28973:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2005,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "28956:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28956:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28986:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2009,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1997,
																					"src": "28991:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28986:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2011,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "29000:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28986:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "28956:49:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2003,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "28940:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28949:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "28940:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28940:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28931:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1995,
														"id": 2016,
														"nodeType": "Return",
														"src": "28924:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "28621:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28777:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28790:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "28782:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28782:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28806:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "28797:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1989,
														"name": "Rounding",
														"nameLocations": [
															"28797:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "28797:8:7"
													},
													"referencedDeclaration": 707,
													"src": "28797:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28781:34:7"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "28839:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28838:9:7"
									},
									"scope": 2316,
									"src": "28768:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "29216:854:7",
										"statements": [
											{
												"assignments": [
													2028
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29234:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "29226:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29226:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"hexValue": "30",
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29243:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29226:18:7"
											},
											{
												"id": 2144,
												"nodeType": "UncheckedBlock",
												"src": "29254:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2031,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29282:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29291:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29297:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29291:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "29282:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2047,
														"nodeType": "IfStatement",
														"src": "29278:103:7",
														"trueBody": {
															"id": 2046,
															"nodeType": "Block",
															"src": "29301:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29319:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29328:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29334:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "29328:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "29319:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2041,
																	"nodeType": "ExpressionStatement",
																	"src": "29319:17:7"
																},
																{
																	"expression": {
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2042,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29354:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29364:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29354:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2045,
																	"nodeType": "ExpressionStatement",
																	"src": "29354:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2048,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29407:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29413:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29407:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "29398:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2064,
														"nodeType": "IfStatement",
														"src": "29394:103:7",
														"trueBody": {
															"id": 2063,
															"nodeType": "Block",
															"src": "29417:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2053,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29435:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29444:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29450:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "29444:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "29435:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2058,
																	"nodeType": "ExpressionStatement",
																	"src": "29435:17:7"
																},
																{
																	"expression": {
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2059,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29470:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29480:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29470:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2062,
																	"nodeType": "ExpressionStatement",
																	"src": "29470:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2065,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29514:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29523:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29529:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29523:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "29514:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2081,
														"nodeType": "IfStatement",
														"src": "29510:103:7",
														"trueBody": {
															"id": 2080,
															"nodeType": "Block",
															"src": "29533:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2070,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29551:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29560:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29566:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29560:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29551:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2075,
																	"nodeType": "ExpressionStatement",
																	"src": "29551:17:7"
																},
																{
																	"expression": {
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2076,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29586:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29596:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29586:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ExpressionStatement",
																	"src": "29586:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2082,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29630:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29639:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29645:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29639:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29630:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2098,
														"nodeType": "IfStatement",
														"src": "29626:100:7",
														"trueBody": {
															"id": 2097,
															"nodeType": "Block",
															"src": "29648:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2087,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29666:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29675:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29681:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29675:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29666:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2092,
																	"nodeType": "ExpressionStatement",
																	"src": "29666:16:7"
																},
																{
																	"expression": {
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29700:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29710:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29700:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2096,
																	"nodeType": "ExpressionStatement",
																	"src": "29700:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2099,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29743:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29752:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29758:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29752:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29743:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "29739:100:7",
														"trueBody": {
															"id": 2114,
															"nodeType": "Block",
															"src": "29761:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29779:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29788:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29794:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29788:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29779:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "29779:16:7"
																},
																{
																	"expression": {
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2110,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29813:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29823:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29813:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2113,
																	"nodeType": "ExpressionStatement",
																	"src": "29813:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29856:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29865:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29871:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29865:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29856:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "29852:100:7",
														"trueBody": {
															"id": 2131,
															"nodeType": "Block",
															"src": "29874:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "29892:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29901:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29907:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29901:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29892:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2126,
																	"nodeType": "ExpressionStatement",
																	"src": "29892:16:7"
																},
																{
																	"expression": {
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2127,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "29926:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29936:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29926:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2130,
																	"nodeType": "ExpressionStatement",
																	"src": "29926:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2133,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "29969:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29978:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29984:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29978:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29969:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2143,
														"nodeType": "IfStatement",
														"src": "29965:66:7",
														"trueBody": {
															"id": 2142,
															"nodeType": "Block",
															"src": "29987:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "30005:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30015:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30005:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2141,
																	"nodeType": "ExpressionStatement",
																	"src": "30005:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2145,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2028,
													"src": "30057:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2026,
												"id": 2146,
												"nodeType": "Return",
												"src": "30050:13:7"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "29029:120:7",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29163:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29177:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "29169:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:15:7"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "29207:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29206:9:7"
									},
									"scope": 2316,
									"src": "29154:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "30305:177:7",
										"statements": [
											{
												"id": 2180,
												"nodeType": "UncheckedBlock",
												"src": "30315:161:7",
												"statements": [
													{
														"assignments": [
															2160
														],
														"declarations": [
															{
																"constant": false,
																"id": 2160,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30347:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2180,
																"src": "30339:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2159,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30339:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2164,
														"initialValue": {
															"arguments": [
																{
																	"id": 2162,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "30362:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2161,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2148,
																	2182
																],
																"referencedDeclaration": 2148,
																"src": "30356:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30356:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30339:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2165,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "30389:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2169,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "30431:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2168,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "30414:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30414:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30444:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2172,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2160,
																					"src": "30450:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30444:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2174,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2151,
																				"src": "30459:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30444:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "30414:50:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2166,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "30398:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30407:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "30398:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30398:67:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30389:76:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2158,
														"id": 2179,
														"nodeType": "Return",
														"src": "30382:83:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "30076:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "30233:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30247:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "30239:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30263:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "30254:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2152,
														"name": "Rounding",
														"nameLocations": [
															"30254:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "30254:8:7"
													},
													"referencedDeclaration": 707,
													"src": "30254:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:34:7"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "30296:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:9:7"
									},
									"scope": 2316,
									"src": "30224:258:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "30800:675:7",
										"statements": [
											{
												"expression": {
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2190,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "30882:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2193,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "30902:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30906:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "30902:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2191,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "30886:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30895:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "30886:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30886:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30945:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "30886:60:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30882:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "30882:64:7"
											},
											{
												"expression": {
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2201,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "31022:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2204,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2185,
																					"src": "31044:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2205,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2188,
																					"src": "31049:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31044:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2207,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31043:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31054:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "31043:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2202,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "31027:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31036:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "31027:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31027:46:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31077:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "31027:51:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "31022:56:7"
											},
											{
												"expression": {
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2215,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "31153:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2218,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2185,
																					"src": "31175:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2219,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2188,
																					"src": "31180:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31175:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2221,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31174:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31185:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "31174:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2216,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "31158:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31167:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "31158:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31158:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31200:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "31158:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "31153:48:7"
											},
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2229,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "31276:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2232,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2185,
																					"src": "31298:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2233,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2188,
																					"src": "31303:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31298:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2235,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31297:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31308:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "31297:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2230,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "31281:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31290:6:7",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4080,
																"src": "31281:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31281:34:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "31281:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "31276:44:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2243,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2188,
																	"src": "31426:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "31426:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2246,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31425:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2249,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "31453:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 2250,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2188,
																				"src": "31458:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31453:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2252,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31452:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31463:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "31452:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2247,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4081,
																"src": "31436:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31445:6:7",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4080,
															"src": "31436:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31436:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31425:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2257,
												"nodeType": "Return",
												"src": "31418:50:7"
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "30488:246:7",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30748:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "30755:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30755:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:11:7"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "30797:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "30789:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:11:7"
									},
									"scope": 2316,
									"src": "30739:736:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "31712:184:7",
										"statements": [
											{
												"id": 2294,
												"nodeType": "UncheckedBlock",
												"src": "31722:168:7",
												"statements": [
													{
														"assignments": [
															2271
														],
														"declarations": [
															{
																"constant": false,
																"id": 2271,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31754:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2294,
																"src": "31746:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2270,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31746:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2275,
														"initialValue": {
															"arguments": [
																{
																	"id": 2273,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "31770:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2272,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2259,
																	2296
																],
																"referencedDeclaration": 2259,
																"src": "31763:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31763:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31746:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "31797:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2280,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2265,
																					"src": "31839:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$707",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2279,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "31822:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$707_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31822:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31852:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2285,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2283,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2271,
																								"src": "31858:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31868:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "31858:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2286,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "31857:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31852:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2288,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "31873:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31852:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "31822:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2277,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4081,
																		"src": "31806:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4081_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31815:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4080,
																	"src": "31806:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31806:73:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31797:82:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2269,
														"id": 2293,
														"nodeType": "Return",
														"src": "31790:89:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "31481:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31639:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31654:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "31646:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31670:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "31661:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2263,
														"name": "Rounding",
														"nameLocations": [
															"31661:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "31661:8:7"
													},
													"referencedDeclaration": 707,
													"src": "31661:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31645:34:7"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "31703:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:9:7"
									},
									"scope": 2316,
									"src": "31630:266:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "32094:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2307,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "32117:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$707",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$707",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32111:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2305,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "32111:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32111:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32129:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "32111:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32134:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32111:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2313,
												"nodeType": "Return",
												"src": "32104:31:7"
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "31902:113:7",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "32029:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32055:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "32046:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$707",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2298,
														"name": "Rounding",
														"nameLocations": [
															"32046:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "32046:8:7"
													},
													"referencedDeclaration": 707,
													"src": "32046:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$707",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:19:7"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "32088:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32088:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:6:7"
									},
									"scope": 2316,
									"src": "32020:122:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2317,
							"src": "281:31863:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:32042:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4081
						]
					},
					"id": 4082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2319,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:8",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4081,
							"linearizedBaseContracts": [
								4081
							],
							"name": "SafeCast",
							"nameLocation": "777:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:8",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2326,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "902:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2321,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "914:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:8"
									},
									"src": "865:64:8"
								},
								{
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:8",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2331,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "1049:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2328,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:8"
									},
									"src": "1015:48:8"
								},
								{
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:8",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2338,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "1177:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2333,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "1189:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2335,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:8"
									},
									"src": "1141:62:8"
								},
								{
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:8",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2343,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "1323:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:8"
									},
									"src": "1289:49:8"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "1695:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2351,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2346,
														"src": "1709:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2353,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2352,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "1705:105:8",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "1736:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2360,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "1793:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2358,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "1757:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2362,
															"nodeType": "RevertStatement",
															"src": "1750:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "1834:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2365,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2350,
												"id": 2369,
												"nodeType": "Return",
												"src": "1819:21:8"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:8",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "1648:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:8"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "1686:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2348,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:8"
									},
									"scope": 4081,
									"src": "1629:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2398,
										"nodeType": "Block",
										"src": "2204:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2379,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "2218:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2381,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2380,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2392,
												"nodeType": "IfStatement",
												"src": "2214:105:8",
												"trueBody": {
													"id": 2391,
													"nodeType": "Block",
													"src": "2245:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2388,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "2302:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2386,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "2266:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2390,
															"nodeType": "RevertStatement",
															"src": "2259:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "2343:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2393,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2397,
												"nodeType": "Return",
												"src": "2328:21:8"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:8",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "2157:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:8"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "2195:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2376,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:8"
									},
									"scope": 4081,
									"src": "2138:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "2713:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2407,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2402,
														"src": "2727:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2409,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2408,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2420,
												"nodeType": "IfStatement",
												"src": "2723:105:8",
												"trueBody": {
													"id": 2419,
													"nodeType": "Block",
													"src": "2754:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2416,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2402,
																		"src": "2811:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2414,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "2775:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2418,
															"nodeType": "RevertStatement",
															"src": "2768:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "2852:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2421,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2406,
												"id": 2425,
												"nodeType": "Return",
												"src": "2837:21:8"
											}
										]
									},
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:8",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "2666:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:8"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "2704:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2404,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:8"
									},
									"scope": 4081,
									"src": "2647:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "3222:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2435,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "3236:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2437,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2436,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2448,
												"nodeType": "IfStatement",
												"src": "3232:105:8",
												"trueBody": {
													"id": 2447,
													"nodeType": "Block",
													"src": "3263:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2444,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2430,
																		"src": "3320:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2442,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "3284:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2446,
															"nodeType": "RevertStatement",
															"src": "3277:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "3361:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2449,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2434,
												"id": 2453,
												"nodeType": "Return",
												"src": "3346:21:8"
											}
										]
									},
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:8",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3175:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:8"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3213:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2432,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:8"
									},
									"scope": 4081,
									"src": "3156:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "3731:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2463,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "3745:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2465,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2464,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2476,
												"nodeType": "IfStatement",
												"src": "3741:105:8",
												"trueBody": {
													"id": 2475,
													"nodeType": "Block",
													"src": "3772:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2472,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2458,
																		"src": "3829:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2470,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "3793:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2474,
															"nodeType": "RevertStatement",
															"src": "3786:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "3870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2477,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2462,
												"id": 2481,
												"nodeType": "Return",
												"src": "3855:21:8"
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:8",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "3684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:8"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "3722:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2460,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:8"
									},
									"scope": 4081,
									"src": "3665:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2510,
										"nodeType": "Block",
										"src": "4240:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2491,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "4254:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2493,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2492,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2504,
												"nodeType": "IfStatement",
												"src": "4250:105:8",
												"trueBody": {
													"id": 2503,
													"nodeType": "Block",
													"src": "4281:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2486,
																		"src": "4338:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2498,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "4302:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2502,
															"nodeType": "RevertStatement",
															"src": "4295:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2507,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "4379:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2505,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2509,
												"nodeType": "Return",
												"src": "4364:21:8"
											}
										]
									},
									"documentation": {
										"id": 2484,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:8",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "4193:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:8"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "4231:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2488,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:8"
									},
									"scope": 4081,
									"src": "4174:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "4749:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2519,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2514,
														"src": "4763:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2521,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2520,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "4759:105:8",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "4790:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2528,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2514,
																		"src": "4847:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2526,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "4811:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2530,
															"nodeType": "RevertStatement",
															"src": "4804:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2514,
															"src": "4888:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2533,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2518,
												"id": 2537,
												"nodeType": "Return",
												"src": "4873:21:8"
											}
										]
									},
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:8",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "4702:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:8"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "4740:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2516,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:8"
									},
									"scope": 4081,
									"src": "4683:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "5258:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2547,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "5272:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2549,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2548,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2560,
												"nodeType": "IfStatement",
												"src": "5268:105:8",
												"trueBody": {
													"id": 2559,
													"nodeType": "Block",
													"src": "5299:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2556,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2542,
																		"src": "5356:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2554,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "5320:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2558,
															"nodeType": "RevertStatement",
															"src": "5313:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2563,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2542,
															"src": "5397:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2561,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2546,
												"id": 2565,
												"nodeType": "Return",
												"src": "5382:21:8"
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:8",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "5211:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:8"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "5249:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2544,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:8"
									},
									"scope": 4081,
									"src": "5192:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "5767:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2570,
														"src": "5781:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2577,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2576,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2588,
												"nodeType": "IfStatement",
												"src": "5777:105:8",
												"trueBody": {
													"id": 2587,
													"nodeType": "Block",
													"src": "5808:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "5865:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2582,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "5829:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2586,
															"nodeType": "RevertStatement",
															"src": "5822:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2591,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2570,
															"src": "5906:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2589,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2574,
												"id": 2593,
												"nodeType": "Return",
												"src": "5891:21:8"
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:8",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "5720:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:8"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "5758:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2572,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:8"
									},
									"scope": 4081,
									"src": "5701:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "6276:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2603,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "6290:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2605,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2604,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2616,
												"nodeType": "IfStatement",
												"src": "6286:105:8",
												"trueBody": {
													"id": 2615,
													"nodeType": "Block",
													"src": "6317:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2612,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "6374:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2610,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "6338:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2614,
															"nodeType": "RevertStatement",
															"src": "6331:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2619,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "6415:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2617,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2621,
												"nodeType": "Return",
												"src": "6400:21:8"
											}
										]
									},
									"documentation": {
										"id": 2596,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:8",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "6229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:8"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "6267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2600,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:8"
									},
									"scope": 4081,
									"src": "6210:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "6785:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2631,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "6799:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2633,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2632,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2644,
												"nodeType": "IfStatement",
												"src": "6795:105:8",
												"trueBody": {
													"id": 2643,
													"nodeType": "Block",
													"src": "6826:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2626,
																		"src": "6883:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2638,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "6847:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2642,
															"nodeType": "RevertStatement",
															"src": "6840:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2647,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "6924:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2645,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2630,
												"id": 2649,
												"nodeType": "Return",
												"src": "6909:21:8"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:8",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "6738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:8"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "6776:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2628,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:8"
									},
									"scope": 4081,
									"src": "6719:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2678,
										"nodeType": "Block",
										"src": "7294:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2659,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2654,
														"src": "7308:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2661,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2660,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2672,
												"nodeType": "IfStatement",
												"src": "7304:105:8",
												"trueBody": {
													"id": 2671,
													"nodeType": "Block",
													"src": "7335:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2668,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2654,
																		"src": "7392:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2666,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "7356:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2670,
															"nodeType": "RevertStatement",
															"src": "7349:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2654,
															"src": "7433:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2673,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2658,
												"id": 2677,
												"nodeType": "Return",
												"src": "7418:21:8"
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:8",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "7247:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:8"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "7285:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2656,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:8"
									},
									"scope": 4081,
									"src": "7228:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "7803:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2687,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "7817:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2689,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2688,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2700,
												"nodeType": "IfStatement",
												"src": "7813:105:8",
												"trueBody": {
													"id": 2699,
													"nodeType": "Block",
													"src": "7844:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2696,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2682,
																		"src": "7901:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2694,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "7865:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2698,
															"nodeType": "RevertStatement",
															"src": "7858:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2703,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "7942:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2701,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2686,
												"id": 2705,
												"nodeType": "Return",
												"src": "7927:21:8"
											}
										]
									},
									"documentation": {
										"id": 2680,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:8",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "7756:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:8"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "7794:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2684,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:8"
									},
									"scope": 4081,
									"src": "7737:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "8312:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2715,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "8326:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2717,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2716,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2728,
												"nodeType": "IfStatement",
												"src": "8322:105:8",
												"trueBody": {
													"id": 2727,
													"nodeType": "Block",
													"src": "8353:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2724,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2710,
																		"src": "8410:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2722,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "8374:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2726,
															"nodeType": "RevertStatement",
															"src": "8367:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2731,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "8451:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2729,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2714,
												"id": 2733,
												"nodeType": "Return",
												"src": "8436:21:8"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:8",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "8265:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:8"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "8303:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2712,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:8"
									},
									"scope": 4081,
									"src": "8246:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "8821:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2743,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2738,
														"src": "8835:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2745,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2744,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2756,
												"nodeType": "IfStatement",
												"src": "8831:105:8",
												"trueBody": {
													"id": 2755,
													"nodeType": "Block",
													"src": "8862:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2752,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2738,
																		"src": "8919:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2750,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "8883:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2754,
															"nodeType": "RevertStatement",
															"src": "8876:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2759,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "8960:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2757,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2742,
												"id": 2761,
												"nodeType": "Return",
												"src": "8945:21:8"
											}
										]
									},
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:8",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "8774:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:8"
									},
									"returnParameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "8812:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2740,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:8"
									},
									"scope": 4081,
									"src": "8755:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "9330:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2771,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "9344:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2773,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2772,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2784,
												"nodeType": "IfStatement",
												"src": "9340:105:8",
												"trueBody": {
													"id": 2783,
													"nodeType": "Block",
													"src": "9371:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2780,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "9428:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2778,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "9392:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2782,
															"nodeType": "RevertStatement",
															"src": "9385:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2787,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2766,
															"src": "9469:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2785,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2770,
												"id": 2789,
												"nodeType": "Return",
												"src": "9454:21:8"
											}
										]
									},
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:8",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "9283:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:8"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "9321:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:8"
									},
									"scope": 4081,
									"src": "9264:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2818,
										"nodeType": "Block",
										"src": "9839:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2799,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "9853:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2801,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2800,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2812,
												"nodeType": "IfStatement",
												"src": "9849:105:8",
												"trueBody": {
													"id": 2811,
													"nodeType": "Block",
													"src": "9880:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2808,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2794,
																		"src": "9937:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2806,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "9901:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2810,
															"nodeType": "RevertStatement",
															"src": "9894:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "9978:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2813,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2798,
												"id": 2817,
												"nodeType": "Return",
												"src": "9963:21:8"
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:8",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9792:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:8"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9830:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2796,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:8"
									},
									"scope": 4081,
									"src": "9773:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "10348:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "10362:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2829,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2828,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2840,
												"nodeType": "IfStatement",
												"src": "10358:105:8",
												"trueBody": {
													"id": 2839,
													"nodeType": "Block",
													"src": "10389:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2836,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2822,
																		"src": "10446:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2834,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "10410:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2838,
															"nodeType": "RevertStatement",
															"src": "10403:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2843,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2822,
															"src": "10487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2841,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2826,
												"id": 2845,
												"nodeType": "Return",
												"src": "10472:21:8"
											}
										]
									},
									"documentation": {
										"id": 2820,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:8",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "10301:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:8"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "10339:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2824,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:8"
									},
									"scope": 4081,
									"src": "10282:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "10857:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2855,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "10871:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2857,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2856,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2868,
												"nodeType": "IfStatement",
												"src": "10867:105:8",
												"trueBody": {
													"id": 2867,
													"nodeType": "Block",
													"src": "10898:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2864,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2850,
																		"src": "10955:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2862,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "10919:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2866,
															"nodeType": "RevertStatement",
															"src": "10912:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2871,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "10996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2869,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2854,
												"id": 2873,
												"nodeType": "Return",
												"src": "10981:21:8"
											}
										]
									},
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:8",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "10810:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:8"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "10848:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2852,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:8"
									},
									"scope": 4081,
									"src": "10791:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2902,
										"nodeType": "Block",
										"src": "11360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2883,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "11374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2885,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2884,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2896,
												"nodeType": "IfStatement",
												"src": "11370:103:8",
												"trueBody": {
													"id": 2895,
													"nodeType": "Block",
													"src": "11400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2878,
																		"src": "11456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2890,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "11421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2894,
															"nodeType": "RevertStatement",
															"src": "11414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "11496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2897,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2882,
												"id": 2901,
												"nodeType": "Return",
												"src": "11482:20:8"
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:8",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "11314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:8"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "11352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2880,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:8"
									},
									"scope": 4081,
									"src": "11296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "11860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2911,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "11874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2913,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2912,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2924,
												"nodeType": "IfStatement",
												"src": "11870:103:8",
												"trueBody": {
													"id": 2923,
													"nodeType": "Block",
													"src": "11900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2920,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2906,
																		"src": "11956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2918,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "11921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2922,
															"nodeType": "RevertStatement",
															"src": "11914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2927,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "11996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2925,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2910,
												"id": 2929,
												"nodeType": "Return",
												"src": "11982:20:8"
											}
										]
									},
									"documentation": {
										"id": 2904,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:8",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "11814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:8"
									},
									"returnParameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "11852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2908,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:8"
									},
									"scope": 4081,
									"src": "11796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "12360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2939,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "12374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 2941,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 2940,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2952,
												"nodeType": "IfStatement",
												"src": "12370:103:8",
												"trueBody": {
													"id": 2951,
													"nodeType": "Block",
													"src": "12400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2948,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2934,
																		"src": "12456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2946,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "12421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2950,
															"nodeType": "RevertStatement",
															"src": "12414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2955,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2934,
															"src": "12496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 2953,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 2938,
												"id": 2957,
												"nodeType": "Return",
												"src": "12482:20:8"
											}
										]
									},
									"documentation": {
										"id": 2932,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:8",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "12314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:8"
									},
									"returnParameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "12352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2936,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:8"
									},
									"scope": 4081,
									"src": "12296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "12860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2967,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "12874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 2969,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 2968,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2980,
												"nodeType": "IfStatement",
												"src": "12870:103:8",
												"trueBody": {
													"id": 2979,
													"nodeType": "Block",
													"src": "12900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2976,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2962,
																		"src": "12956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2974,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "12921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2978,
															"nodeType": "RevertStatement",
															"src": "12914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2962,
															"src": "12996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 2981,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 2966,
												"id": 2985,
												"nodeType": "Return",
												"src": "12982:20:8"
											}
										]
									},
									"documentation": {
										"id": 2960,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:8",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "12814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:8"
									},
									"returnParameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "12852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 2964,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:8"
									},
									"scope": 4081,
									"src": "12796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3014,
										"nodeType": "Block",
										"src": "13360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2995,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2990,
														"src": "13374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2997,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 2996,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3008,
												"nodeType": "IfStatement",
												"src": "13370:103:8",
												"trueBody": {
													"id": 3007,
													"nodeType": "Block",
													"src": "13400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3004,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2990,
																		"src": "13456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3002,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "13421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3006,
															"nodeType": "RevertStatement",
															"src": "13414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3011,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "13496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3009,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2994,
												"id": 3013,
												"nodeType": "Return",
												"src": "13482:20:8"
											}
										]
									},
									"documentation": {
										"id": 2988,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:8",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "13314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:8"
									},
									"returnParameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "13352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2992,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:8"
									},
									"scope": 4081,
									"src": "13296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "13860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3023,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "13874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3025,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3024,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3036,
												"nodeType": "IfStatement",
												"src": "13870:103:8",
												"trueBody": {
													"id": 3035,
													"nodeType": "Block",
													"src": "13900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3032,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3018,
																		"src": "13956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3030,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "13921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3034,
															"nodeType": "RevertStatement",
															"src": "13914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3039,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "13996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3037,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3022,
												"id": 3041,
												"nodeType": "Return",
												"src": "13982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3016,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:8",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "13814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:8"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "13852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3020,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:8"
									},
									"scope": 4081,
									"src": "13796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3070,
										"nodeType": "Block",
										"src": "14360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3051,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "14374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3053,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3052,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3064,
												"nodeType": "IfStatement",
												"src": "14370:103:8",
												"trueBody": {
													"id": 3063,
													"nodeType": "Block",
													"src": "14400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3046,
																		"src": "14456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3058,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "14421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3062,
															"nodeType": "RevertStatement",
															"src": "14414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3067,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3046,
															"src": "14496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3065,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3050,
												"id": 3069,
												"nodeType": "Return",
												"src": "14482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:8",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "14314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:8"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "14352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3048,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:8"
									},
									"scope": 4081,
									"src": "14296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3098,
										"nodeType": "Block",
										"src": "14860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3079,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3074,
														"src": "14874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3081,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3080,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3092,
												"nodeType": "IfStatement",
												"src": "14870:103:8",
												"trueBody": {
													"id": 3091,
													"nodeType": "Block",
													"src": "14900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3088,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3074,
																		"src": "14956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3086,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "14921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3090,
															"nodeType": "RevertStatement",
															"src": "14914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3095,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "14996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3093,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3078,
												"id": 3097,
												"nodeType": "Return",
												"src": "14982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3072,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:8",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "14814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:8"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "14852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3076,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:8"
									},
									"scope": 4081,
									"src": "14796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3126,
										"nodeType": "Block",
										"src": "15360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3107,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "15374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3109,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3108,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3120,
												"nodeType": "IfStatement",
												"src": "15370:103:8",
												"trueBody": {
													"id": 3119,
													"nodeType": "Block",
													"src": "15400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3116,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3102,
																		"src": "15456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3114,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "15421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3118,
															"nodeType": "RevertStatement",
															"src": "15414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3123,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3102,
															"src": "15496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3121,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3106,
												"id": 3125,
												"nodeType": "Return",
												"src": "15482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3100,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:8",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "15314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:8"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "15352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3104,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:8"
									},
									"scope": 4081,
									"src": "15296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3154,
										"nodeType": "Block",
										"src": "15860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3135,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3130,
														"src": "15874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3137,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3136,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3148,
												"nodeType": "IfStatement",
												"src": "15870:103:8",
												"trueBody": {
													"id": 3147,
													"nodeType": "Block",
													"src": "15900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3144,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3130,
																		"src": "15956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3142,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "15921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3146,
															"nodeType": "RevertStatement",
															"src": "15914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "15996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3149,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3134,
												"id": 3153,
												"nodeType": "Return",
												"src": "15982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3128,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:8",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "15814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:8"
									},
									"returnParameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "15852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3132,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:8"
									},
									"scope": 4081,
									"src": "15796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "16360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3163,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3158,
														"src": "16374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3165,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3164,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3176,
												"nodeType": "IfStatement",
												"src": "16370:103:8",
												"trueBody": {
													"id": 3175,
													"nodeType": "Block",
													"src": "16400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3172,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3158,
																		"src": "16456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3170,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "16421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3174,
															"nodeType": "RevertStatement",
															"src": "16414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3179,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3158,
															"src": "16496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3177,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3162,
												"id": 3181,
												"nodeType": "Return",
												"src": "16482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3156,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:8",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "16314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:8"
									},
									"returnParameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "16352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3160,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:8"
									},
									"scope": 4081,
									"src": "16296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3210,
										"nodeType": "Block",
										"src": "16854:146:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3191,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3186,
														"src": "16868:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3193,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3192,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3204,
												"nodeType": "IfStatement",
												"src": "16864:101:8",
												"trueBody": {
													"id": 3203,
													"nodeType": "Block",
													"src": "16893:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3200,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3186,
																		"src": "16948:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3198,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "16914:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3202,
															"nodeType": "RevertStatement",
															"src": "16907:47:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3207,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "16987:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3205,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:8",
															"typeDescriptions": {}
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3190,
												"id": 3209,
												"nodeType": "Return",
												"src": "16974:19:8"
											}
										]
									},
									"documentation": {
										"id": 3184,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:8",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "16809:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:8"
									},
									"returnParameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "16847:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:8"
									},
									"scope": 4081,
									"src": "16792:208:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "17236:128:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3219,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3214,
														"src": "17250:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "17246:81:8",
												"trueBody": {
													"id": 3226,
													"nodeType": "Block",
													"src": "17261:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3214,
																		"src": "17310:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3222,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "17282:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3225,
															"nodeType": "RevertStatement",
															"src": "17275:41:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3214,
															"src": "17351:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3218,
												"id": 3232,
												"nodeType": "Return",
												"src": "17336:21:8"
											}
										]
									},
									"documentation": {
										"id": 3212,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:8",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "17190:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:8"
									},
									"returnParameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "17227:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:8"
									},
									"scope": 4081,
									"src": "17171:193:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3259,
										"nodeType": "Block",
										"src": "17761:150:8",
										"statements": [
											{
												"expression": {
													"id": 3247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3242,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3240,
														"src": "17771:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3237,
																"src": "17791:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3243,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3248,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3249,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3240,
														"src": "17811:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3250,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "17825:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3258,
												"nodeType": "IfStatement",
												"src": "17807:98:8",
												"trueBody": {
													"id": 3257,
													"nodeType": "Block",
													"src": "17832:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3254,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3237,
																		"src": "17888:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3252,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "17853:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3256,
															"nodeType": "RevertStatement",
															"src": "17846:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:8",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "17705:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:8"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "17742:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3239,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:8"
									},
									"scope": 4081,
									"src": "17687:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3285,
										"nodeType": "Block",
										"src": "18308:150:8",
										"statements": [
											{
												"expression": {
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3268,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3266,
														"src": "18318:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3271,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3263,
																"src": "18338:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3269,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3275,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3266,
														"src": "18358:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3276,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3263,
														"src": "18372:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3284,
												"nodeType": "IfStatement",
												"src": "18354:98:8",
												"trueBody": {
													"id": 3283,
													"nodeType": "Block",
													"src": "18379:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3280,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3263,
																		"src": "18435:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3278,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "18400:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3282,
															"nodeType": "RevertStatement",
															"src": "18393:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3261,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:8",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "18252:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3262,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:8"
									},
									"returnParameters": {
										"id": 3267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "18289:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3265,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:8"
									},
									"scope": 4081,
									"src": "18234:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3311,
										"nodeType": "Block",
										"src": "18855:150:8",
										"statements": [
											{
												"expression": {
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3294,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "18865:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3289,
																"src": "18885:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3295,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3300,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3301,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "18905:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3302,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3289,
														"src": "18919:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3310,
												"nodeType": "IfStatement",
												"src": "18901:98:8",
												"trueBody": {
													"id": 3309,
													"nodeType": "Block",
													"src": "18926:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3306,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3289,
																		"src": "18982:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3304,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "18947:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3308,
															"nodeType": "RevertStatement",
															"src": "18940:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3287,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:8",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "18799:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:8"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "18836:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3291,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:8"
									},
									"scope": 4081,
									"src": "18781:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3337,
										"nodeType": "Block",
										"src": "19402:150:8",
										"statements": [
											{
												"expression": {
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3320,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3318,
														"src": "19412:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3323,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "19432:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3321,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3326,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3318,
														"src": "19452:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3328,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3315,
														"src": "19466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3336,
												"nodeType": "IfStatement",
												"src": "19448:98:8",
												"trueBody": {
													"id": 3335,
													"nodeType": "Block",
													"src": "19473:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3332,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3315,
																		"src": "19529:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3330,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "19494:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3334,
															"nodeType": "RevertStatement",
															"src": "19487:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3313,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:8",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "19346:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3314,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:8"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "19383:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3317,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:8"
									},
									"scope": 4081,
									"src": "19328:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3363,
										"nodeType": "Block",
										"src": "19949:150:8",
										"statements": [
											{
												"expression": {
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3346,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "19959:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3341,
																"src": "19979:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3347,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3352,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3353,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "19999:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3354,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3341,
														"src": "20013:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3362,
												"nodeType": "IfStatement",
												"src": "19995:98:8",
												"trueBody": {
													"id": 3361,
													"nodeType": "Block",
													"src": "20020:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3358,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3341,
																		"src": "20076:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3356,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "20041:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3360,
															"nodeType": "RevertStatement",
															"src": "20034:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3339,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:8",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "19893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3340,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:8"
									},
									"returnParameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3344,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "19930:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3343,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:8"
									},
									"scope": 4081,
									"src": "19875:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3389,
										"nodeType": "Block",
										"src": "20496:150:8",
										"statements": [
											{
												"expression": {
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3372,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3370,
														"src": "20506:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3375,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3367,
																"src": "20526:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3373,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3378,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3379,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3370,
														"src": "20546:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3380,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3367,
														"src": "20560:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3388,
												"nodeType": "IfStatement",
												"src": "20542:98:8",
												"trueBody": {
													"id": 3387,
													"nodeType": "Block",
													"src": "20567:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3384,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3367,
																		"src": "20623:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3382,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "20588:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3386,
															"nodeType": "RevertStatement",
															"src": "20581:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:8",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "20440:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3366,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:8"
									},
									"returnParameters": {
										"id": 3371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "20477:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3369,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:8"
									},
									"scope": 4081,
									"src": "20422:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3415,
										"nodeType": "Block",
										"src": "21043:150:8",
										"statements": [
											{
												"expression": {
													"id": 3403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3398,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3396,
														"src": "21053:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3401,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3393,
																"src": "21073:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3399,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3404,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3405,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3396,
														"src": "21093:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3406,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "21107:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3414,
												"nodeType": "IfStatement",
												"src": "21089:98:8",
												"trueBody": {
													"id": 3413,
													"nodeType": "Block",
													"src": "21114:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3410,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3393,
																		"src": "21170:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3408,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "21135:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3412,
															"nodeType": "RevertStatement",
															"src": "21128:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3391,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:8",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "20987:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3392,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:8"
									},
									"returnParameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3396,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "21024:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3395,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:8"
									},
									"scope": 4081,
									"src": "20969:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3441,
										"nodeType": "Block",
										"src": "21590:150:8",
										"statements": [
											{
												"expression": {
													"id": 3429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3424,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3422,
														"src": "21600:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3427,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3419,
																"src": "21620:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3425,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3430,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3431,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3422,
														"src": "21640:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3432,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3419,
														"src": "21654:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3440,
												"nodeType": "IfStatement",
												"src": "21636:98:8",
												"trueBody": {
													"id": 3439,
													"nodeType": "Block",
													"src": "21661:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3419,
																		"src": "21717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3434,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "21682:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3438,
															"nodeType": "RevertStatement",
															"src": "21675:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3417,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:8",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3442,
												"src": "21534:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:8"
									},
									"returnParameters": {
										"id": 3423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3422,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3442,
												"src": "21571:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3421,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:8"
									},
									"scope": 4081,
									"src": "21516:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3467,
										"nodeType": "Block",
										"src": "22137:150:8",
										"statements": [
											{
												"expression": {
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3450,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "22147:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3453,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3445,
																"src": "22167:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3451,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3456,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3457,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "22187:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3458,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3445,
														"src": "22201:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3466,
												"nodeType": "IfStatement",
												"src": "22183:98:8",
												"trueBody": {
													"id": 3465,
													"nodeType": "Block",
													"src": "22208:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3462,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3445,
																		"src": "22264:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3460,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "22229:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3464,
															"nodeType": "RevertStatement",
															"src": "22222:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3443,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:8",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "22081:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3444,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:8"
									},
									"returnParameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "22118:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3447,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:8"
									},
									"scope": 4081,
									"src": "22063:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3493,
										"nodeType": "Block",
										"src": "22684:150:8",
										"statements": [
											{
												"expression": {
													"id": 3481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3476,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "22694:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3479,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3471,
																"src": "22714:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3477,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3482,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3483,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "22734:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3484,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3471,
														"src": "22748:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3492,
												"nodeType": "IfStatement",
												"src": "22730:98:8",
												"trueBody": {
													"id": 3491,
													"nodeType": "Block",
													"src": "22755:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3488,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3471,
																		"src": "22811:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3486,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "22776:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3490,
															"nodeType": "RevertStatement",
															"src": "22769:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3469,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:8",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "22628:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3470,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:8"
									},
									"returnParameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "22665:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3473,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:8"
									},
									"scope": 4081,
									"src": "22610:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3519,
										"nodeType": "Block",
										"src": "23231:150:8",
										"statements": [
											{
												"expression": {
													"id": 3507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3502,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3500,
														"src": "23241:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3497,
																"src": "23261:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3503,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3508,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3509,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3500,
														"src": "23281:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3510,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3497,
														"src": "23295:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3518,
												"nodeType": "IfStatement",
												"src": "23277:98:8",
												"trueBody": {
													"id": 3517,
													"nodeType": "Block",
													"src": "23302:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3514,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3497,
																		"src": "23358:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3512,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "23323:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3516,
															"nodeType": "RevertStatement",
															"src": "23316:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3495,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:8",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "23175:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3496,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:8"
									},
									"returnParameters": {
										"id": 3501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3500,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "23212:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3499,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:8"
									},
									"scope": 4081,
									"src": "23157:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3545,
										"nodeType": "Block",
										"src": "23778:150:8",
										"statements": [
											{
												"expression": {
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3528,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3526,
														"src": "23788:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3523,
																"src": "23808:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3529,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3535,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3526,
														"src": "23828:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3536,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3523,
														"src": "23842:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3544,
												"nodeType": "IfStatement",
												"src": "23824:98:8",
												"trueBody": {
													"id": 3543,
													"nodeType": "Block",
													"src": "23849:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3540,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3523,
																		"src": "23905:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3538,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "23870:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3542,
															"nodeType": "RevertStatement",
															"src": "23863:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3521,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:8",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "23722:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3522,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:8"
									},
									"returnParameters": {
										"id": 3527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3526,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "23759:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3525,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:8"
									},
									"scope": 4081,
									"src": "23704:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3571,
										"nodeType": "Block",
										"src": "24325:150:8",
										"statements": [
											{
												"expression": {
													"id": 3559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3554,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3552,
														"src": "24335:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3557,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3549,
																"src": "24355:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3555,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3560,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3561,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3552,
														"src": "24375:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3562,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3549,
														"src": "24389:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3570,
												"nodeType": "IfStatement",
												"src": "24371:98:8",
												"trueBody": {
													"id": 3569,
													"nodeType": "Block",
													"src": "24396:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3566,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3549,
																		"src": "24452:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3564,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "24417:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3568,
															"nodeType": "RevertStatement",
															"src": "24410:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3547,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:8",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "24269:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3548,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:8"
									},
									"returnParameters": {
										"id": 3553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3552,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "24306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3551,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:8"
									},
									"scope": 4081,
									"src": "24251:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3597,
										"nodeType": "Block",
										"src": "24872:150:8",
										"statements": [
											{
												"expression": {
													"id": 3585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3580,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3578,
														"src": "24882:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3575,
																"src": "24902:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3581,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3586,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3587,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3578,
														"src": "24922:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3588,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3575,
														"src": "24936:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3596,
												"nodeType": "IfStatement",
												"src": "24918:98:8",
												"trueBody": {
													"id": 3595,
													"nodeType": "Block",
													"src": "24943:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3575,
																		"src": "24999:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3590,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "24964:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3594,
															"nodeType": "RevertStatement",
															"src": "24957:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3573,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:8",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3598,
												"src": "24816:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3574,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:8"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3598,
												"src": "24853:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3577,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:8"
									},
									"scope": 4081,
									"src": "24798:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3623,
										"nodeType": "Block",
										"src": "25419:150:8",
										"statements": [
											{
												"expression": {
													"id": 3611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3606,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3604,
														"src": "25429:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3609,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3601,
																"src": "25449:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3607,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3612,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3613,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3604,
														"src": "25469:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3601,
														"src": "25483:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3622,
												"nodeType": "IfStatement",
												"src": "25465:98:8",
												"trueBody": {
													"id": 3621,
													"nodeType": "Block",
													"src": "25490:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3618,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3601,
																		"src": "25546:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3616,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "25511:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3620,
															"nodeType": "RevertStatement",
															"src": "25504:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3599,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:8",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3624,
												"src": "25363:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3600,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:8"
									},
									"returnParameters": {
										"id": 3605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3604,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3624,
												"src": "25400:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3603,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:8"
									},
									"scope": 4081,
									"src": "25345:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3649,
										"nodeType": "Block",
										"src": "25966:150:8",
										"statements": [
											{
												"expression": {
													"id": 3637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3632,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3630,
														"src": "25976:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3635,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3627,
																"src": "25996:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3633,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3638,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3639,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3630,
														"src": "26016:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3640,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3627,
														"src": "26030:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3648,
												"nodeType": "IfStatement",
												"src": "26012:98:8",
												"trueBody": {
													"id": 3647,
													"nodeType": "Block",
													"src": "26037:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3644,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3627,
																		"src": "26093:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3642,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "26058:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3646,
															"nodeType": "RevertStatement",
															"src": "26051:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3625,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:8",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "25910:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:8"
									},
									"returnParameters": {
										"id": 3631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3630,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "25947:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3629,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:8"
									},
									"scope": 4081,
									"src": "25892:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3675,
										"nodeType": "Block",
										"src": "26513:150:8",
										"statements": [
											{
												"expression": {
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3658,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3656,
														"src": "26523:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3661,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3653,
																"src": "26543:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3659,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3664,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3665,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3656,
														"src": "26563:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3666,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3653,
														"src": "26577:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3674,
												"nodeType": "IfStatement",
												"src": "26559:98:8",
												"trueBody": {
													"id": 3673,
													"nodeType": "Block",
													"src": "26584:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3670,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3653,
																		"src": "26640:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3668,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "26605:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3672,
															"nodeType": "RevertStatement",
															"src": "26598:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3651,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:8",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "26457:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:8"
									},
									"returnParameters": {
										"id": 3657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "26494:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3655,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:8"
									},
									"scope": 4081,
									"src": "26439:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3701,
										"nodeType": "Block",
										"src": "27060:150:8",
										"statements": [
											{
												"expression": {
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3684,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3682,
														"src": "27070:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3687,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3679,
																"src": "27090:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3685,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3690,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3691,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3682,
														"src": "27110:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3692,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3679,
														"src": "27124:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3700,
												"nodeType": "IfStatement",
												"src": "27106:98:8",
												"trueBody": {
													"id": 3699,
													"nodeType": "Block",
													"src": "27131:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3696,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3679,
																		"src": "27187:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3694,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "27152:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3698,
															"nodeType": "RevertStatement",
															"src": "27145:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3677,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:8",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "27004:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3678,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:8"
									},
									"returnParameters": {
										"id": 3683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3682,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "27041:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3681,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:8"
									},
									"scope": 4081,
									"src": "26986:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3727,
										"nodeType": "Block",
										"src": "27607:150:8",
										"statements": [
											{
												"expression": {
													"id": 3715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3710,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3708,
														"src": "27617:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3705,
																"src": "27637:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3711,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3716,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3717,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3708,
														"src": "27657:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3718,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3705,
														"src": "27671:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3726,
												"nodeType": "IfStatement",
												"src": "27653:98:8",
												"trueBody": {
													"id": 3725,
													"nodeType": "Block",
													"src": "27678:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3722,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3705,
																		"src": "27734:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3720,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "27699:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3724,
															"nodeType": "RevertStatement",
															"src": "27692:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3703,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:8",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3728,
												"src": "27551:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3704,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:8"
									},
									"returnParameters": {
										"id": 3709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3728,
												"src": "27588:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3707,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:8"
									},
									"scope": 4081,
									"src": "27533:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3753,
										"nodeType": "Block",
										"src": "28147:148:8",
										"statements": [
											{
												"expression": {
													"id": 3741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3736,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3734,
														"src": "28157:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3739,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3731,
																"src": "28176:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3737,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3742,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3743,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3734,
														"src": "28196:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3744,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3731,
														"src": "28210:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3752,
												"nodeType": "IfStatement",
												"src": "28192:97:8",
												"trueBody": {
													"id": 3751,
													"nodeType": "Block",
													"src": "28217:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3748,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3731,
																		"src": "28272:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3746,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "28238:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3750,
															"nodeType": "RevertStatement",
															"src": "28231:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3729,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:8",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "28092:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3730,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:8"
									},
									"returnParameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3734,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "28129:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3733,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:8"
									},
									"scope": 4081,
									"src": "28075:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3779,
										"nodeType": "Block",
										"src": "28685:148:8",
										"statements": [
											{
												"expression": {
													"id": 3767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3762,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3760,
														"src": "28695:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3757,
																"src": "28714:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3763,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3768,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3769,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3760,
														"src": "28734:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3770,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3757,
														"src": "28748:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3778,
												"nodeType": "IfStatement",
												"src": "28730:97:8",
												"trueBody": {
													"id": 3777,
													"nodeType": "Block",
													"src": "28755:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3774,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3757,
																		"src": "28810:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3772,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "28776:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3776,
															"nodeType": "RevertStatement",
															"src": "28769:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3755,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:8",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3780,
												"src": "28630:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:8"
									},
									"returnParameters": {
										"id": 3761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3760,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3780,
												"src": "28667:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3759,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:8"
									},
									"scope": 4081,
									"src": "28613:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3805,
										"nodeType": "Block",
										"src": "29223:148:8",
										"statements": [
											{
												"expression": {
													"id": 3793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3788,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3786,
														"src": "29233:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3791,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3783,
																"src": "29252:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3789,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3794,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3795,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3786,
														"src": "29272:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3796,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3783,
														"src": "29286:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3804,
												"nodeType": "IfStatement",
												"src": "29268:97:8",
												"trueBody": {
													"id": 3803,
													"nodeType": "Block",
													"src": "29293:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3800,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3783,
																		"src": "29348:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3798,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "29314:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3802,
															"nodeType": "RevertStatement",
															"src": "29307:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3781,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:8",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3806,
												"src": "29168:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:8"
									},
									"returnParameters": {
										"id": 3787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3786,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3806,
												"src": "29205:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3785,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:8"
									},
									"scope": 4081,
									"src": "29151:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3831,
										"nodeType": "Block",
										"src": "29761:148:8",
										"statements": [
											{
												"expression": {
													"id": 3819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3814,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3812,
														"src": "29771:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3817,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3809,
																"src": "29790:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3815,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3820,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3821,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3812,
														"src": "29810:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3809,
														"src": "29824:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3830,
												"nodeType": "IfStatement",
												"src": "29806:97:8",
												"trueBody": {
													"id": 3829,
													"nodeType": "Block",
													"src": "29831:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3826,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3809,
																		"src": "29886:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3824,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "29852:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3828,
															"nodeType": "RevertStatement",
															"src": "29845:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3807,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:8",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "29706:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3808,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:8"
									},
									"returnParameters": {
										"id": 3813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3812,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "29743:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3811,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:8"
									},
									"scope": 4081,
									"src": "29689:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3857,
										"nodeType": "Block",
										"src": "30299:148:8",
										"statements": [
											{
												"expression": {
													"id": 3845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3840,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3838,
														"src": "30309:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3843,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3835,
																"src": "30328:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3841,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3846,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3847,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3838,
														"src": "30348:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3848,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3835,
														"src": "30362:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3856,
												"nodeType": "IfStatement",
												"src": "30344:97:8",
												"trueBody": {
													"id": 3855,
													"nodeType": "Block",
													"src": "30369:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3835,
																		"src": "30424:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3850,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "30390:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3854,
															"nodeType": "RevertStatement",
															"src": "30383:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3833,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:8",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3858,
												"src": "30244:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3834,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:8"
									},
									"returnParameters": {
										"id": 3839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3838,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3858,
												"src": "30281:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3837,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:8"
									},
									"scope": 4081,
									"src": "30227:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3883,
										"nodeType": "Block",
										"src": "30837:148:8",
										"statements": [
											{
												"expression": {
													"id": 3871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3866,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3864,
														"src": "30847:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3869,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3861,
																"src": "30866:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3867,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3872,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3873,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3864,
														"src": "30886:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3874,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3861,
														"src": "30900:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3882,
												"nodeType": "IfStatement",
												"src": "30882:97:8",
												"trueBody": {
													"id": 3881,
													"nodeType": "Block",
													"src": "30907:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3861,
																		"src": "30962:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3876,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "30928:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3880,
															"nodeType": "RevertStatement",
															"src": "30921:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3859,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:8",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3884,
												"src": "30782:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3860,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:8"
									},
									"returnParameters": {
										"id": 3865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3864,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3884,
												"src": "30819:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3863,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:8"
									},
									"scope": 4081,
									"src": "30765:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3909,
										"nodeType": "Block",
										"src": "31375:148:8",
										"statements": [
											{
												"expression": {
													"id": 3897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3892,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3890,
														"src": "31385:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3887,
																"src": "31404:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3893,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3898,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3899,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3890,
														"src": "31424:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3900,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3887,
														"src": "31438:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3908,
												"nodeType": "IfStatement",
												"src": "31420:97:8",
												"trueBody": {
													"id": 3907,
													"nodeType": "Block",
													"src": "31445:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3904,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3887,
																		"src": "31500:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3902,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "31466:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3906,
															"nodeType": "RevertStatement",
															"src": "31459:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3885,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:8",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3910,
												"src": "31320:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:8"
									},
									"returnParameters": {
										"id": 3891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3890,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3910,
												"src": "31357:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3889,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:8"
									},
									"scope": 4081,
									"src": "31303:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3935,
										"nodeType": "Block",
										"src": "31913:148:8",
										"statements": [
											{
												"expression": {
													"id": 3923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3918,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3916,
														"src": "31923:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3921,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3913,
																"src": "31942:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3919,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3924,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3925,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3916,
														"src": "31962:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3926,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3913,
														"src": "31976:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3934,
												"nodeType": "IfStatement",
												"src": "31958:97:8",
												"trueBody": {
													"id": 3933,
													"nodeType": "Block",
													"src": "31983:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3930,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3913,
																		"src": "32038:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3928,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "32004:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3932,
															"nodeType": "RevertStatement",
															"src": "31997:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3911,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:8",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "31858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:8"
									},
									"returnParameters": {
										"id": 3917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3916,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "31895:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3915,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:8"
									},
									"scope": 4081,
									"src": "31841:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3961,
										"nodeType": "Block",
										"src": "32451:148:8",
										"statements": [
											{
												"expression": {
													"id": 3949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3944,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3942,
														"src": "32461:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3947,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3939,
																"src": "32480:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 3945,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 3950,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3951,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3942,
														"src": "32500:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3952,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3939,
														"src": "32514:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3960,
												"nodeType": "IfStatement",
												"src": "32496:97:8",
												"trueBody": {
													"id": 3959,
													"nodeType": "Block",
													"src": "32521:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3956,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3939,
																		"src": "32576:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3954,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "32542:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3958,
															"nodeType": "RevertStatement",
															"src": "32535:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3937,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:8",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3962,
												"src": "32396:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:8"
									},
									"returnParameters": {
										"id": 3943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3942,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3962,
												"src": "32433:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 3941,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:8"
									},
									"scope": 4081,
									"src": "32379:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3987,
										"nodeType": "Block",
										"src": "32989:148:8",
										"statements": [
											{
												"expression": {
													"id": 3975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3970,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3968,
														"src": "32999:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3973,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3965,
																"src": "33018:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 3971,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 3974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3976,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3977,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3968,
														"src": "33038:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3978,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3965,
														"src": "33052:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3986,
												"nodeType": "IfStatement",
												"src": "33034:97:8",
												"trueBody": {
													"id": 3985,
													"nodeType": "Block",
													"src": "33059:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3982,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3965,
																		"src": "33114:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3980,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "33080:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3984,
															"nodeType": "RevertStatement",
															"src": "33073:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3963,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:8",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "32934:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3964,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:8"
									},
									"returnParameters": {
										"id": 3969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3968,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "32971:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3967,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:8"
									},
									"scope": 4081,
									"src": "32917:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4013,
										"nodeType": "Block",
										"src": "33527:148:8",
										"statements": [
											{
												"expression": {
													"id": 4001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3996,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3994,
														"src": "33537:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3999,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "33556:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3997,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4002,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4003,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3994,
														"src": "33576:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4004,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3991,
														"src": "33590:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4012,
												"nodeType": "IfStatement",
												"src": "33572:97:8",
												"trueBody": {
													"id": 4011,
													"nodeType": "Block",
													"src": "33597:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4008,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3991,
																		"src": "33652:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4006,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "33618:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4010,
															"nodeType": "RevertStatement",
															"src": "33611:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3989,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:8",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4014,
												"src": "33472:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3990,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:8"
									},
									"returnParameters": {
										"id": 3995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3994,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4014,
												"src": "33509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3993,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:8"
									},
									"scope": 4081,
									"src": "33455:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4039,
										"nodeType": "Block",
										"src": "34058:146:8",
										"statements": [
											{
												"expression": {
													"id": 4027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4022,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4020,
														"src": "34068:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4025,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4017,
																"src": "34086:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4023,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:8",
																"typeDescriptions": {}
															}
														},
														"id": 4026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4028,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4029,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4020,
														"src": "34106:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4030,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4017,
														"src": "34120:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4038,
												"nodeType": "IfStatement",
												"src": "34102:96:8",
												"trueBody": {
													"id": 4037,
													"nodeType": "Block",
													"src": "34127:71:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4034,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4017,
																		"src": "34181:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4032,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "34148:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4036,
															"nodeType": "RevertStatement",
															"src": "34141:46:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4015,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:8",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4017,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "34004:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4016,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:8"
									},
									"returnParameters": {
										"id": 4021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4020,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "34041:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4019,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:8"
									},
									"scope": 4081,
									"src": "33988:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4069,
										"nodeType": "Block",
										"src": "34444:250:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4048,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4043,
														"src": "34557:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4052,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:8",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4051,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:8",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4049,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 4056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4063,
												"nodeType": "IfStatement",
												"src": "34553:105:8",
												"trueBody": {
													"id": 4062,
													"nodeType": "Block",
													"src": "34592:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4059,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4043,
																		"src": "34641:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4058,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "34613:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4061,
															"nodeType": "RevertStatement",
															"src": "34606:41:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4066,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4043,
															"src": "34681:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4064,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 4067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4047,
												"id": 4068,
												"nodeType": "Return",
												"src": "34667:20:8"
											}
										]
									},
									"documentation": {
										"id": 4041,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:8",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4070,
												"src": "34398:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:8"
									},
									"returnParameters": {
										"id": 4047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4070,
												"src": "34436:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4045,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:8"
									},
									"scope": 4081,
									"src": "34380:314:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4079,
										"nodeType": "Block",
										"src": "34853:87:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:8",
													"nodeType": "YulBlock",
													"src": "34888:46:8",
													"statements": [
														{
															"nativeSrc": "34902:22:8",
															"nodeType": "YulAssignment",
															"src": "34902:22:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:8"
																		},
																		"nativeSrc": "34914:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:8"
																},
																"nativeSrc": "34907:17:8",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:8"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 4073,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:8",
														"valueSize": 1
													},
													{
														"declaration": 4076,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4078,
												"nodeType": "InlineAssembly",
												"src": "34863:71:8"
											}
										]
									},
									"documentation": {
										"id": 4071,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:8",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 4080,
												"src": "34811:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:8"
									},
									"returnParameters": {
										"id": 4077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4076,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 4080,
												"src": "34842:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:8"
									},
									"scope": 4081,
									"src": "34795:145:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4082,
							"src": "769:34173:8",
							"usedErrors": [
								2326,
								2331,
								2338,
								2343
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:8"
				},
				"id": 8
			},
			"SimpleSwap.sol": {
				"ast": {
					"absolutePath": "SimpleSwap.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"Math": [
							2316
						],
						"Panic": [
							683
						],
						"SafeCast": [
							4081
						],
						"SafeERC20": [
							631
						],
						"SimpleSwap": [
							4973
						]
					},
					"id": 4974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 4084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4974,
							"sourceUnit": 168,
							"src": "60:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 4085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4974,
							"sourceUnit": 632,
							"src": "118:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4974,
							"sourceUnit": 2317,
							"src": "185:53:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4087,
								"nodeType": "StructuredDocumentation",
								"src": "242:129:9",
								"text": "@title SimpleSwap - A simplified Uniswap-like DEX\n @notice Enables token swaps and liquidity management for token pairs"
							},
							"fullyImplemented": true,
							"id": 4973,
							"linearizedBaseContracts": [
								4973
							],
							"name": "SimpleSwap",
							"nameLocation": "380:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4091,
									"libraryName": {
										"id": 4088,
										"name": "SafeERC20",
										"nameLocations": [
											"404:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "404:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "398:27:9",
									"typeName": {
										"id": 4090,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4089,
											"name": "IERC20",
											"nameLocations": [
												"418:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "418:6:9"
										},
										"referencedDeclaration": 167,
										"src": "418:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "SimpleSwap.Reserve",
									"id": 4102,
									"members": [
										{
											"constant": false,
											"id": 4093,
											"mutability": "mutable",
											"name": "reserveA",
											"nameLocation": "467:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 4102,
											"src": "459:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4092,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4095,
											"mutability": "mutable",
											"name": "reserveB",
											"nameLocation": "494:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 4102,
											"src": "486:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4097,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "521:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 4102,
											"src": "513:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "513:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4101,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "574:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 4102,
											"src": "546:37:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 4100,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 4098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "546:27:9",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 4099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Reserve",
									"nameLocation": "440:7:9",
									"nodeType": "StructDefinition",
									"scope": 4973,
									"src": "433:158:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 4107,
									"mutability": "mutable",
									"name": "reserves",
									"nameLocation": "635:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 4973,
									"src": "599:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
										"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
									},
									"typeName": {
										"id": 4106,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4103,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "607:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "599:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
											"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4105,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4104,
												"name": "Reserve",
												"nameLocations": [
													"618:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4102,
												"src": "618:7:9"
											},
											"referencedDeclaration": 4102,
											"src": "618:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
												"typeString": "struct SimpleSwap.Reserve"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70",
									"id": 4121,
									"name": "LiquidityAdded",
									"nameLocation": "658:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4109,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "689:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "673:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4111,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "707:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "699:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4113,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "723:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "715:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4115,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "739:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "731:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4117,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "756:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "748:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4119,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "773:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4121,
												"src": "765:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:111:9"
									},
									"src": "652:132:9"
								},
								{
									"anonymous": false,
									"eventSelector": "d765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1",
									"id": 4135,
									"name": "LiquidityRemoved",
									"nameLocation": "796:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4123,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "829:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "813:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4125,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "847:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "839:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4127,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "863:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "855:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4129,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "879:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "871:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4131,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "896:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "888:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4133,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "913:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "905:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:111:9"
									},
									"src": "790:134:9"
								},
								{
									"anonymous": false,
									"eventSelector": "cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062",
									"id": 4147,
									"name": "Swap",
									"nameLocation": "936:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4137,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "957:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "941:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4139,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "973:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "965:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4141,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "990:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "982:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4143,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1008:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "1000:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4145,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1026:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "1018:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:96:9"
									},
									"src": "930:107:9"
								},
								{
									"body": {
										"id": 4160,
										"nodeType": "Block",
										"src": "1076:90:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4152,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1095:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1101:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1095:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4154,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4149,
																"src": "1114:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1095:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e2065787069726564",
															"id": 4156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1124:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551",
																"typeString": "literal_string \"Transaction expired\""
															},
															"value": "Transaction expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38b57334da13daffb65e2d9cfe97bc3051af86f72807115eae867384ed846551",
																"typeString": "literal_string \"Transaction expired\""
															}
														],
														"id": 4151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4158,
												"nodeType": "ExpressionStatement",
												"src": "1087:59:9"
											},
											{
												"id": 4159,
												"nodeType": "PlaceholderStatement",
												"src": "1157:1:9"
											}
										]
									},
									"id": 4161,
									"name": "ensure",
									"nameLocation": "1054:6:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4149,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1066:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4161,
												"src": "1061:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:15:9"
									},
									"src": "1045:121:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4190,
										"nodeType": "Block",
										"src": "1310:133:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4171,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4164,
															"src": "1328:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4172,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4166,
															"src": "1337:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1328:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 4184,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4166,
																		"src": "1419:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4185,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4164,
																		"src": "1427:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4182,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1402:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 4183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1406:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1402:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 4186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1402:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 4181,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1392:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 4187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1392:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1328:107:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 4177,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4164,
																		"src": "1373:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4178,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4166,
																		"src": "1381:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4175,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1356:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 4176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1360:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1356:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 4179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1356:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 4174,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1346:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 4180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1346:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 4170,
												"id": 4189,
												"nodeType": "Return",
												"src": "1321:114:9"
											}
										]
									},
									"documentation": {
										"id": 4162,
										"nodeType": "StructuredDocumentation",
										"src": "1174:46:9",
										"text": "@dev Returns a unique key for a token pair"
									},
									"id": 4191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPairKey",
									"nameLocation": "1235:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4164,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1255:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4191,
												"src": "1247:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4166,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1271:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4191,
												"src": "1263:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:32:9"
									},
									"returnParameters": {
										"id": 4170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4191,
												"src": "1301:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:9:9"
									},
									"scope": 4973,
									"src": "1226:217:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4214,
										"nodeType": "Block",
										"src": "1598:79:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4203,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4194,
															"src": "1616:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4204,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4196,
															"src": "1625:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1616:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 4209,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4196,
																"src": "1654:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4210,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4194,
																"src": "1662:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 4211,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1653:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"id": 4212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1616:53:9",
													"trueExpression": {
														"components": [
															{
																"id": 4206,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4194,
																"src": "1635:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4207,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4196,
																"src": "1643:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 4208,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1634:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 4202,
												"id": 4213,
												"nodeType": "Return",
												"src": "1609:60:9"
											}
										]
									},
									"documentation": {
										"id": 4192,
										"nodeType": "StructuredDocumentation",
										"src": "1451:48:9",
										"text": "@dev Sorts tokens to ensure consistent order"
									},
									"id": 4215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortTokens",
									"nameLocation": "1514:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4194,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1534:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4215,
												"src": "1526:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4196,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1550:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4215,
												"src": "1542:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:32:9"
									},
									"returnParameters": {
										"id": 4202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4215,
												"src": "1580:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4215,
												"src": "1589:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:18:9"
									},
									"scope": 4973,
									"src": "1505:172:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4347,
										"nodeType": "Block",
										"src": "2686:859:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4245,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4218,
																"src": "2705:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 4246,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4220,
																"src": "2715:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2705:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4964656e746963616c20746f6b656e73",
															"id": 4248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2723:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															},
															"value": "Identical tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															}
														],
														"id": 4244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2697:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2697:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4250,
												"nodeType": "ExpressionStatement",
												"src": "2697:45:9"
											},
											{
												"assignments": [
													4252
												],
												"declarations": [
													{
														"constant": false,
														"id": 4252,
														"mutability": "mutable",
														"name": "pairKey",
														"nameLocation": "2763:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4347,
														"src": "2755:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4251,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2755:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4257,
												"initialValue": {
													"arguments": [
														{
															"id": 4254,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4218,
															"src": "2785:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4255,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4220,
															"src": "2793:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4253,
														"name": "_getPairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "2773:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 4256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2773:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:45:9"
											},
											{
												"assignments": [
													4260
												],
												"declarations": [
													{
														"constant": false,
														"id": 4260,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "2827:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 4347,
														"src": "2811:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 4259,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4258,
																"name": "Reserve",
																"nameLocations": [
																	"2811:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4102,
																"src": "2811:7:9"
															},
															"referencedDeclaration": 4102,
															"src": "2811:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4264,
												"initialValue": {
													"baseExpression": {
														"id": 4261,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "2831:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 4263,
													"indexExpression": {
														"id": 4262,
														"name": "pairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4252,
														"src": "2840:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2831:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$4102_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2811:37:9"
											},
											{
												"expression": {
													"id": 4282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 4265,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4238,
																"src": "2862:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4266,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4240,
																"src": "2871:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4267,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2861:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4269,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4218,
																"src": "2915:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4270,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4220,
																"src": "2923:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4271,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4222,
																"src": "2944:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4272,
																"name": "amountBDesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4224,
																"src": "2960:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4273,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4226,
																"src": "2989:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4274,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4228,
																"src": "3001:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4275,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3026:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4276,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3028:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "3026:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4277,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3038:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4278,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3040:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "3038:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4279,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3063:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4280,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3065:14:9",
																"memberName": "totalLiquidity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4097,
																"src": "3063:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4268,
															"name": "_quoteAddLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4452,
															"src": "2882:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 4281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2882:208:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2861:229:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4283,
												"nodeType": "ExpressionStatement",
												"src": "2861:229:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4285,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4218,
															"src": "3119:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4286,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4220,
															"src": "3127:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4287,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4238,
															"src": "3135:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4288,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4240,
															"src": "3144:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4284,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4491,
														"src": "3103:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 4289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4290,
												"nodeType": "ExpressionStatement",
												"src": "3103:49:9"
											},
											{
												"expression": {
													"id": 4302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4291,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4242,
														"src": "3163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4293,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4238,
																"src": "3195:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4294,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4240,
																"src": "3204:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4295,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3213:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4296,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3215:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "3213:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4297,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4298,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3227:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "3225:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4299,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "3237:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4300,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3239:14:9",
																"memberName": "totalLiquidity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4097,
																"src": "3237:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4292,
															"name": "_calculateLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4541,
															"src": "3175:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 4301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3175:79:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3163:91:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4303,
												"nodeType": "ExpressionStatement",
												"src": "3163:91:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4305,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4242,
																"src": "3273:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3273:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74",
															"id": 4308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3288:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																"typeString": "literal_string \"Insufficient\""
															},
															"value": "Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																"typeString": "literal_string \"Insufficient\""
															}
														],
														"id": 4304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3265:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4310,
												"nodeType": "ExpressionStatement",
												"src": "3265:38:9"
											},
											{
												"expression": {
													"id": 4315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4311,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4260,
															"src": "3316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3318:8:9",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4093,
														"src": "3316:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4314,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4238,
														"src": "3330:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3316:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4316,
												"nodeType": "ExpressionStatement",
												"src": "3316:21:9"
											},
											{
												"expression": {
													"id": 4321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4317,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4260,
															"src": "3348:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4319,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3350:8:9",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4095,
														"src": "3348:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4320,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4240,
														"src": "3362:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3348:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4322,
												"nodeType": "ExpressionStatement",
												"src": "3348:21:9"
											},
											{
												"expression": {
													"id": 4327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4323,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4260,
															"src": "3380:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3382:14:9",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4097,
														"src": "3380:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4326,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4242,
														"src": "3400:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3380:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4328,
												"nodeType": "ExpressionStatement",
												"src": "3380:29:9"
											},
											{
												"expression": {
													"id": 4335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4329,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4260,
																"src": "3420:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															},
															"id": 4332,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3422:9:9",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4101,
															"src": "3420:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4333,
														"indexExpression": {
															"id": 4331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4230,
															"src": "3432:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3420:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4334,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4242,
														"src": "3439:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3420:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4336,
												"nodeType": "ExpressionStatement",
												"src": "3420:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4338,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3481:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3485:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3481:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4340,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4218,
															"src": "3493:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4341,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4220,
															"src": "3501:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4342,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4238,
															"src": "3509:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4343,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4240,
															"src": "3518:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4344,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4242,
															"src": "3527:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4337,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4121,
														"src": "3466:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 4345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3466:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4346,
												"nodeType": "EmitStatement",
												"src": "3461:76:9"
											}
										]
									},
									"documentation": {
										"id": 4216,
										"nodeType": "StructuredDocumentation",
										"src": "1685:680:9",
										"text": "@notice Adds liquidity to a token pair pool\n @param tokenA Address of the first token\n @param tokenB Address of the second token\n @param amountADesired Amount of tokenA to deposit\n @param amountBDesired Amount of tokenB to deposit\n @param amountAMin Minimum amount of tokenA to accept\n @param amountBMin Minimum amount of tokenB to accept\n @param to Recipient of the liquidity tokens\n @param deadline Unix timestamp after which the tx is invalid\n @return amountA Final amount of tokenA used\n @return amountB Final amount of tokenB used\n @return liquidity Amount of liquidity tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 4348,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4235,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4232,
													"src": "2623:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4234,
												"name": "ensure",
												"nameLocations": [
													"2616:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4161,
												"src": "2616:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2616:16:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2380:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4218,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2411:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2403:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4220,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2436:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2428:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4222,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "2458:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2453:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4224,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "2488:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2483:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4226,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "2518:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2513:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2513:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4228,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "2544:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2539:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2539:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2573:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2565:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4232,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2591:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2586:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4231,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2586:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:214:9"
									},
									"returnParameters": {
										"id": 4243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4238,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2647:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2642:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2642:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4240,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2661:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2656:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2656:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4242,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2675:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "2670:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2670:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:44:9"
									},
									"scope": 4973,
									"src": "2371:1174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4451,
										"nodeType": "Block",
										"src": "3951:671:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4374,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4367,
														"src": "3966:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3984:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3966:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4382,
												"nodeType": "IfStatement",
												"src": "3962:91:9",
												"trueBody": {
													"id": 4381,
													"nodeType": "Block",
													"src": "3987:66:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 4377,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4355,
																		"src": "4010:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4378,
																		"name": "amountBDesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4357,
																		"src": "4026:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4009:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4373,
															"id": 4380,
															"nodeType": "Return",
															"src": "4002:39:9"
														}
													]
												}
											},
											{
												"assignments": [
													4384,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 4384,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "4074:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 4451,
														"src": "4066:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4383,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4066:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 4389,
												"initialValue": {
													"arguments": [
														{
															"id": 4386,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4351,
															"src": "4097:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4387,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4353,
															"src": "4105:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4385,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "4085:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 4388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4085:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4065:47:9"
											},
											{
												"assignments": [
													4391,
													4393
												],
												"declarations": [
													{
														"constant": false,
														"id": 4391,
														"mutability": "mutable",
														"name": "rA",
														"nameLocation": "4129:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 4451,
														"src": "4124:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4390,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4124:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4393,
														"mutability": "mutable",
														"name": "rB",
														"nameLocation": "4138:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 4451,
														"src": "4133:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4392,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4133:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4404,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4394,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4351,
															"src": "4144:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 4395,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4384,
															"src": "4154:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4144:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 4400,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4365,
																"src": "4187:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4401,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4363,
																"src": "4197:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4402,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4186:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 4403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4144:62:9",
													"trueExpression": {
														"components": [
															{
																"id": 4397,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4363,
																"src": "4164:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4398,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4365,
																"src": "4174:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4399,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4163:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4123:83:9"
											},
											{
												"assignments": [
													4406
												],
												"declarations": [
													{
														"constant": false,
														"id": 4406,
														"mutability": "mutable",
														"name": "bOptimal",
														"nameLocation": "4224:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 4451,
														"src": "4219:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4405,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4219:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4407,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4355,
																	"src": "4236:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 4408,
																	"name": "rB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4393,
																	"src": "4253:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4236:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4410,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4235:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4411,
														"name": "rA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4391,
														"src": "4259:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4235:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4219:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4414,
														"name": "bOptimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4406,
														"src": "4276:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 4415,
														"name": "amountBDesired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4357,
														"src": "4288:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4276:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4449,
													"nodeType": "Block",
													"src": "4434:181:9",
													"statements": [
														{
															"assignments": [
																4430
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4430,
																	"mutability": "mutable",
																	"name": "aOptimal",
																	"nameLocation": "4454:8:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 4449,
																	"src": "4449:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4429,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4449:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4437,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4431,
																				"name": "amountBDesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4357,
																				"src": "4466:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4432,
																				"name": "rA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4391,
																				"src": "4483:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4466:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4465:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 4435,
																	"name": "rB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4393,
																	"src": "4489:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4465:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4449:42:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4439,
																			"name": "aOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4430,
																			"src": "4514:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 4440,
																			"name": "amountAMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4359,
																			"src": "4526:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4514:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742041",
																		"id": 4442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4538:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																			"typeString": "literal_string \"Insufficient A\""
																		},
																		"value": "Insufficient A"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																			"typeString": "literal_string \"Insufficient A\""
																		}
																	],
																	"id": 4438,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4506:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4506:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4444,
															"nodeType": "ExpressionStatement",
															"src": "4506:49:9"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 4445,
																		"name": "aOptimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4430,
																		"src": "4578:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4446,
																		"name": "amountBDesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4357,
																		"src": "4588:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4447,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4577:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4373,
															"id": 4448,
															"nodeType": "Return",
															"src": "4570:33:9"
														}
													]
												},
												"id": 4450,
												"nodeType": "IfStatement",
												"src": "4272:343:9",
												"trueBody": {
													"id": 4428,
													"nodeType": "Block",
													"src": "4304:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4418,
																			"name": "bOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4406,
																			"src": "4327:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 4419,
																			"name": "amountBMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4361,
																			"src": "4339:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4327:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742042",
																		"id": 4421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4351:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																			"typeString": "literal_string \"Insufficient B\""
																		},
																		"value": "Insufficient B"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																			"typeString": "literal_string \"Insufficient B\""
																		}
																	],
																	"id": 4417,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4319:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4319:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4423,
															"nodeType": "ExpressionStatement",
															"src": "4319:49:9"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 4424,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4355,
																		"src": "4391:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4425,
																		"name": "bOptimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4406,
																		"src": "4407:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4426,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4390:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4373,
															"id": 4427,
															"nodeType": "Return",
															"src": "4383:33:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4349,
										"nodeType": "StructuredDocumentation",
										"src": "3553:66:9",
										"text": "@dev Estimates optimal tokenA/tokenB amounts to maintain ratio"
									},
									"id": 4452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_quoteAddLiquidity",
									"nameLocation": "3634:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4351,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3671:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3663:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4353,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3696:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3688:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4355,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "3718:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3713:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3713:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4357,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "3748:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3743:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4359,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "3778:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3773:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3773:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4361,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "3804:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3799:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3799:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4363,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3830:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3825:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3825:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4365,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3854:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3849:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4367,
												"mutability": "mutable",
												"name": "totalLiquidity",
												"nameLocation": "3878:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3873:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3873:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3652:247:9"
									},
									"returnParameters": {
										"id": 4373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4370,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3928:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3923:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3923:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4372,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3942:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4452,
												"src": "3937:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:28:9"
									},
									"scope": 4973,
									"src": "3625:997:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4490,
										"nodeType": "Block",
										"src": "4779:164:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4822:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4826:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4822:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4472,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4842:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 4471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4834:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4834:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 4473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4834:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4474,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4459,
															"src": "4849:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4465,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4455,
																	"src": "4797:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4464,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4790:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4790:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4805:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "4790:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4476,
												"nodeType": "ExpressionStatement",
												"src": "4790:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4900:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4904:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4900:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4485,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4920:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 4484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4912:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4912:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 4486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4912:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4487,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4461,
															"src": "4927:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4478,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "4875:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4477,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4868:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4868:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4883:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "4868:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4489,
												"nodeType": "ExpressionStatement",
												"src": "4868:67:9"
											}
										]
									},
									"documentation": {
										"id": 4453,
										"nodeType": "StructuredDocumentation",
										"src": "4630:49:9",
										"text": "@dev Transfers tokens from sender to contract"
									},
									"id": 4491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nameLocation": "4694:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4455,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "4718:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4491,
												"src": "4710:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4457,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4734:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4491,
												"src": "4726:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4726:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4459,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "4747:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4491,
												"src": "4742:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4461,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "4761:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4491,
												"src": "4756:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4756:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4709:60:9"
									},
									"returnParameters": {
										"id": 4463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4779:0:9"
									},
									"scope": 4973,
									"src": "4685:258:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4540,
										"nodeType": "Block",
										"src": "5210:290:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4507,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4502,
														"src": "5225:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5243:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5225:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4538,
													"nodeType": "Block",
													"src": "5319:174:9",
													"statements": [
														{
															"expression": {
																"id": 4536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4520,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4505,
																	"src": "5334:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4523,
																							"name": "amountA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4494,
																							"src": "5374:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 4524,
																							"name": "totalLiquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4502,
																							"src": "5384:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5374:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4526,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5373:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 4527,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4498,
																				"src": "5402:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5373:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4529,
																							"name": "amountB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4496,
																							"src": "5430:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 4530,
																							"name": "totalLiquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4502,
																							"src": "5440:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5430:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4532,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5429:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 4533,
																				"name": "reserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4500,
																				"src": "5458:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5429:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4521,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2316,
																			"src": "5346:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2316_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 4522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5351:3:9",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1022,
																		"src": "5346:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 4535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5346:135:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5334:147:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4537,
															"nodeType": "ExpressionStatement",
															"src": "5334:147:9"
														}
													]
												},
												"id": 4539,
												"nodeType": "IfStatement",
												"src": "5221:272:9",
												"trueBody": {
													"id": 4519,
													"nodeType": "Block",
													"src": "5246:67:9",
													"statements": [
														{
															"expression": {
																"id": 4517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4510,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4505,
																	"src": "5261:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4513,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4494,
																				"src": "5283:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4514,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4496,
																				"src": "5293:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5283:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4511,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2316,
																			"src": "5273:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2316_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 4512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5278:4:9",
																		"memberName": "sqrt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1860,
																		"src": "5273:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 4516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5273:28:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5261:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4518,
															"nodeType": "ExpressionStatement",
															"src": "5261:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4492,
										"nodeType": "StructuredDocumentation",
										"src": "4951:54:9",
										"text": "@dev Calculates amount of liquidity tokens to mint"
									},
									"id": 4541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateLiquidity",
									"nameLocation": "5020:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4494,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "5055:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5050:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4496,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "5078:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5073:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5073:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4498,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "5101:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5096:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5096:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4500,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "5125:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5120:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5120:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4502,
												"mutability": "mutable",
												"name": "totalLiquidity",
												"nameLocation": "5149:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5144:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5144:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5039:131:9"
									},
									"returnParameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5199:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "5194:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5194:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5193:16:9"
									},
									"scope": 4973,
									"src": "5011:489:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4680,
										"nodeType": "Block",
										"src": "6303:794:9",
										"statements": [
											{
												"assignments": [
													4567
												],
												"declarations": [
													{
														"constant": false,
														"id": 4567,
														"mutability": "mutable",
														"name": "pairKey",
														"nameLocation": "6322:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4680,
														"src": "6314:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4566,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6314:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4572,
												"initialValue": {
													"arguments": [
														{
															"id": 4569,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4544,
															"src": "6344:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4570,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4546,
															"src": "6352:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4568,
														"name": "_getPairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "6332:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 4571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6332:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6314:45:9"
											},
											{
												"assignments": [
													4575
												],
												"declarations": [
													{
														"constant": false,
														"id": 4575,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "6386:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 4680,
														"src": "6370:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 4574,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4573,
																"name": "Reserve",
																"nameLocations": [
																	"6370:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4102,
																"src": "6370:7:9"
															},
															"referencedDeclaration": 4102,
															"src": "6370:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4579,
												"initialValue": {
													"baseExpression": {
														"id": 4576,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "6390:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 4578,
													"indexExpression": {
														"id": 4577,
														"name": "pairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4567,
														"src": "6399:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6390:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$4102_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6370:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 4581,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4575,
																		"src": "6428:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 4582,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6430:9:9",
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4101,
																	"src": "6428:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 4585,
																"indexExpression": {
																	"expression": {
																		"id": 4583,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6440:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 4584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6444:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6440:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6428:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4586,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4548,
																"src": "6455:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6428:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 4588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6466:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 4580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6420:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6420:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4590,
												"nodeType": "ExpressionStatement",
												"src": "6420:71:9"
											},
											{
												"expression": {
													"id": 4600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4591,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4562,
														"src": "6504:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4592,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4548,
																		"src": "6515:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 4593,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4575,
																			"src": "6527:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																				"typeString": "struct SimpleSwap.Reserve storage pointer"
																			}
																		},
																		"id": 4594,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6529:8:9",
																		"memberName": "reserveA",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4093,
																		"src": "6527:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6515:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4596,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6514:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 4597,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4575,
																"src": "6541:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															},
															"id": 4598,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6543:14:9",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4097,
															"src": "6541:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6514:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6504:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4601,
												"nodeType": "ExpressionStatement",
												"src": "6504:53:9"
											},
											{
												"expression": {
													"id": 4611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4602,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4564,
														"src": "6568:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4603,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4548,
																		"src": "6579:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 4604,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4575,
																			"src": "6591:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																				"typeString": "struct SimpleSwap.Reserve storage pointer"
																			}
																		},
																		"id": 4605,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6593:8:9",
																		"memberName": "reserveB",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4095,
																		"src": "6591:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6579:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4607,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6578:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 4608,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4575,
																"src": "6605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															},
															"id": 4609,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6607:14:9",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4097,
															"src": "6605:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6578:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6568:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4612,
												"nodeType": "ExpressionStatement",
												"src": "6568:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4614,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4562,
																"src": "6642:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4615,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4550,
																"src": "6653:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6642:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742041",
															"id": 4617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6665:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																"typeString": "literal_string \"Insufficient A\""
															},
															"value": "Insufficient A"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																"typeString": "literal_string \"Insufficient A\""
															}
														],
														"id": 4613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6634:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6634:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4619,
												"nodeType": "ExpressionStatement",
												"src": "6634:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4621,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4564,
																"src": "6701:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4622,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4552,
																"src": "6712:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6701:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042",
															"id": 4624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6724:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																"typeString": "literal_string \"Insufficient B\""
															},
															"value": "Insufficient B"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																"typeString": "literal_string \"Insufficient B\""
															}
														],
														"id": 4620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6693:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6693:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4626,
												"nodeType": "ExpressionStatement",
												"src": "6693:48:9"
											},
											{
												"expression": {
													"id": 4631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4627,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4575,
															"src": "6754:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4629,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6756:8:9",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4093,
														"src": "6754:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4630,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4562,
														"src": "6768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6754:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4632,
												"nodeType": "ExpressionStatement",
												"src": "6754:21:9"
											},
											{
												"expression": {
													"id": 4637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4633,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4575,
															"src": "6786:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6788:8:9",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4095,
														"src": "6786:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4636,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4564,
														"src": "6800:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6786:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4638,
												"nodeType": "ExpressionStatement",
												"src": "6786:21:9"
											},
											{
												"expression": {
													"id": 4643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4639,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4575,
															"src": "6818:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 4641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6820:14:9",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4097,
														"src": "6818:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4642,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4548,
														"src": "6838:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6818:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4644,
												"nodeType": "ExpressionStatement",
												"src": "6818:29:9"
											},
											{
												"expression": {
													"id": 4652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4645,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4575,
																"src": "6858:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															},
															"id": 4649,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6860:9:9",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4101,
															"src": "6858:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4650,
														"indexExpression": {
															"expression": {
																"id": 4647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6870:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6874:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6870:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6858:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4651,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4548,
														"src": "6885:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6858:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4653,
												"nodeType": "ExpressionStatement",
												"src": "6858:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4554,
															"src": "6935:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4659,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4562,
															"src": "6939:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4655,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4544,
																	"src": "6914:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4654,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6907:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6922:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "6907:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6907:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4661,
												"nodeType": "ExpressionStatement",
												"src": "6907:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4554,
															"src": "6986:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4667,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4564,
															"src": "6990:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4663,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4546,
																	"src": "6965:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4662,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6958:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6958:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6973:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "6958:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6958:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4669,
												"nodeType": "ExpressionStatement",
												"src": "6958:40:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4671,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7033:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7037:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7033:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4673,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4544,
															"src": "7045:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4674,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4546,
															"src": "7053:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4675,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4562,
															"src": "7061:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4676,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4564,
															"src": "7070:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4677,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4548,
															"src": "7079:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4670,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4135,
														"src": "7016:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 4678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7016:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4679,
												"nodeType": "EmitStatement",
												"src": "7011:78:9"
											}
										]
									},
									"documentation": {
										"id": 4542,
										"nodeType": "StructuredDocumentation",
										"src": "5508:522:9",
										"text": "@notice Removes liquidity from a pool\n @param tokenA Address of the first token\n @param tokenB Address of the second token\n @param liquidity Amount of liquidity tokens to burn\n @param amountAMin Minimum amount of tokenA expected\n @param amountBMin Minimum amount of tokenB expected\n @param to Recipient of withdrawn tokens\n @param deadline Expiration timestamp\n @return amountA Amount of tokenA received\n @return amountB Amount of tokenB received"
									},
									"functionSelector": "baa2abde",
									"id": 4681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4559,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4556,
													"src": "6256:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4560,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4558,
												"name": "ensure",
												"nameLocations": [
													"6249:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4161,
												"src": "6249:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6249:16:9"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "6045:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4544,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6079:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6071:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6071:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4546,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6104:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6096:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4548,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6126:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6121:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6121:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4550,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "6151:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6146:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6146:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4552,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "6177:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6172:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6172:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4554,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6206:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6198:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6198:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4556,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6224:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6219:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6219:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:179:9"
									},
									"returnParameters": {
										"id": 4565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4562,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "6280:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6275:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6275:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4564,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "6294:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4681,
												"src": "6289:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6289:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:28:9"
									},
									"scope": 4973,
									"src": "6036:1061:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4854,
										"nodeType": "Block",
										"src": "7711:1068:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4703,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4689,
																	"src": "7730:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 4704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7735:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7730:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 4705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7745:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7730:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920322d746f6b656e",
															"id": 4707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7748:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a",
																"typeString": "literal_string \"Only 2-token\""
															},
															"value": "Only 2-token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ac4dea2f47dd706c20999213ec88f92b8dec62b4612d239f96cb4b27f90085a",
																"typeString": "literal_string \"Only 2-token\""
															}
														],
														"id": 4702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7722:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7722:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4709,
												"nodeType": "ExpressionStatement",
												"src": "7722:41:9"
											},
											{
												"assignments": [
													4711
												],
												"declarations": [
													{
														"constant": false,
														"id": 4711,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "7784:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "7776:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4710,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7776:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4715,
												"initialValue": {
													"baseExpression": {
														"id": 4712,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4689,
														"src": "7794:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 4714,
													"indexExpression": {
														"hexValue": "30",
														"id": 4713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7799:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7776:25:9"
											},
											{
												"assignments": [
													4717
												],
												"declarations": [
													{
														"constant": false,
														"id": 4717,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "7820:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "7812:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4716,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7812:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4721,
												"initialValue": {
													"baseExpression": {
														"id": 4718,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4689,
														"src": "7831:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 4720,
													"indexExpression": {
														"hexValue": "31",
														"id": 4719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7836:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7831:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7812:26:9"
											},
											{
												"assignments": [
													4723
												],
												"declarations": [
													{
														"constant": false,
														"id": 4723,
														"mutability": "mutable",
														"name": "pairKey",
														"nameLocation": "7859:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "7851:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4722,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7851:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4728,
												"initialValue": {
													"arguments": [
														{
															"id": 4725,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4711,
															"src": "7881:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4726,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4717,
															"src": "7890:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4724,
														"name": "_getPairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "7869:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 4727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7851:48:9"
											},
											{
												"assignments": [
													4731
												],
												"declarations": [
													{
														"constant": false,
														"id": 4731,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "7926:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "7910:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 4730,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4729,
																"name": "Reserve",
																"nameLocations": [
																	"7910:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4102,
																"src": "7910:7:9"
															},
															"referencedDeclaration": 4102,
															"src": "7910:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4735,
												"initialValue": {
													"baseExpression": {
														"id": 4732,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "7930:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 4734,
													"indexExpression": {
														"id": 4733,
														"name": "pairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4723,
														"src": "7939:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7930:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$4102_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7910:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7993:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7997:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7993:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4744,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8013:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$4973",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 4743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8005:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 4745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8005:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4746,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4684,
															"src": "8020:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4737,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4711,
																	"src": "7967:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4736,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "7960:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7960:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7976:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "7960:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7960:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4748,
												"nodeType": "ExpressionStatement",
												"src": "7960:69:9"
											},
											{
												"assignments": [
													4750,
													4752
												],
												"declarations": [
													{
														"constant": false,
														"id": 4750,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "8048:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "8043:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4749,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8043:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4752,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "8064:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "8059:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4751,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8059:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4767,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4753,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4711,
															"src": "8078:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4754,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4717,
															"src": "8088:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8078:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"id": 4761,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4731,
																	"src": "8153:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4762,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8155:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "8153:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4763,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4731,
																	"src": "8165:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4764,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8167:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "8165:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4765,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8152:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 4766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8078:98:9",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"id": 4756,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4731,
																	"src": "8113:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4757,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8115:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "8113:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4758,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4731,
																	"src": "8125:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4759,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8127:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "8125:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8112:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8042:134:9"
											},
											{
												"assignments": [
													4769
												],
												"declarations": [
													{
														"constant": false,
														"id": 4769,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "8194:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 4854,
														"src": "8189:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4768,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8189:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4775,
												"initialValue": {
													"arguments": [
														{
															"id": 4771,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4684,
															"src": "8219:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4772,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4750,
															"src": "8229:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4773,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4752,
															"src": "8240:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4770,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4972,
														"src": "8206:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 4774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8206:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8189:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4777,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4769,
																"src": "8270:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4778,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4686,
																"src": "8283:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8270:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f7574707574",
															"id": 4780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8297:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															},
															"value": "Insufficient output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															}
														],
														"id": 4776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8262:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4782,
												"nodeType": "ExpressionStatement",
												"src": "8262:57:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4783,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4711,
														"src": "8336:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 4784,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4717,
														"src": "8346:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8336:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4811,
													"nodeType": "Block",
													"src": "8449:87:9",
													"statements": [
														{
															"expression": {
																"id": 4803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4799,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4731,
																		"src": "8464:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 4801,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8466:8:9",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4095,
																	"src": "8464:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 4802,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4684,
																	"src": "8478:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8464:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4804,
															"nodeType": "ExpressionStatement",
															"src": "8464:22:9"
														},
														{
															"expression": {
																"id": 4809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4805,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4731,
																		"src": "8501:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 4807,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8503:8:9",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4093,
																	"src": "8501:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 4808,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4769,
																	"src": "8515:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8501:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4810,
															"nodeType": "ExpressionStatement",
															"src": "8501:23:9"
														}
													]
												},
												"id": 4812,
												"nodeType": "IfStatement",
												"src": "8332:204:9",
												"trueBody": {
													"id": 4798,
													"nodeType": "Block",
													"src": "8356:87:9",
													"statements": [
														{
															"expression": {
																"id": 4790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4786,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4731,
																		"src": "8371:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 4788,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8373:8:9",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4093,
																	"src": "8371:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 4789,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4684,
																	"src": "8385:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8371:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4791,
															"nodeType": "ExpressionStatement",
															"src": "8371:22:9"
														},
														{
															"expression": {
																"id": 4796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4792,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4731,
																		"src": "8408:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 4794,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8410:8:9",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4095,
																	"src": "8408:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 4795,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4769,
																	"src": "8422:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8408:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4797,
															"nodeType": "ExpressionStatement",
															"src": "8408:23:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4691,
															"src": "8578:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4818,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4769,
															"src": "8582:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4814,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4717,
																	"src": "8555:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4813,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "8548:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8548:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 4816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8565:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "8548:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8548:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4820,
												"nodeType": "ExpressionStatement",
												"src": "8548:44:9"
											},
											{
												"expression": {
													"id": 4827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4821,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4700,
														"src": "8605:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 4825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8626:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 4824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "8615:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 4822,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8619:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 4823,
																"nodeType": "ArrayTypeName",
																"src": "8619:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 4826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8615:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "8605:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 4828,
												"nodeType": "ExpressionStatement",
												"src": "8605:23:9"
											},
											{
												"expression": {
													"id": 4833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4829,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4700,
															"src": "8640:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 4831,
														"indexExpression": {
															"hexValue": "30",
															"id": 4830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8648:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8640:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4832,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4684,
														"src": "8653:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8640:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4834,
												"nodeType": "ExpressionStatement",
												"src": "8640:21:9"
											},
											{
												"expression": {
													"id": 4839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4835,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4700,
															"src": "8672:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 4837,
														"indexExpression": {
															"hexValue": "31",
															"id": 4836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8680:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8672:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4838,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4769,
														"src": "8685:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8672:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4840,
												"nodeType": "ExpressionStatement",
												"src": "8672:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4842,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8717:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8721:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8717:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4844,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4711,
															"src": "8729:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4845,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4717,
															"src": "8738:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 4846,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4700,
																"src": "8748:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 4848,
															"indexExpression": {
																"hexValue": "30",
																"id": 4847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8756:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8748:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 4849,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4700,
																"src": "8760:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 4851,
															"indexExpression": {
																"hexValue": "31",
																"id": 4850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8768:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8760:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4841,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4147,
														"src": "8712:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 4852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8712:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4853,
												"nodeType": "EmitStatement",
												"src": "8707:64:9"
											}
										]
									},
									"documentation": {
										"id": 4682,
										"nodeType": "StructuredDocumentation",
										"src": "7105:370:9",
										"text": "@notice Swaps exact amount of input tokens for output tokens\n @param amountIn Amount of input tokens to swap\n @param amountOutMin Minimum output expected\n @param path Array with [tokenIn, tokenOut]\n @param to Recipient of output tokens\n @param deadline Expiration timestamp\n @return amounts Array [amountIn, amountOut]"
									},
									"functionSelector": "38ed1739",
									"id": 4855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4696,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4693,
													"src": "7669:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4695,
												"name": "ensure",
												"nameLocations": [
													"7662:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4161,
												"src": "7662:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7662:16:9"
										}
									],
									"name": "swapExactTokensForTokens",
									"nameLocation": "7490:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4684,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7530:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7525:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7525:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4686,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "7554:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7549:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7549:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4689,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7596:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7577:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 4687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7577:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 4688,
													"nodeType": "ArrayTypeName",
													"src": "7577:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7619:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7611:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4693,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7637:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7632:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7632:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7514:138:9"
									},
									"returnParameters": {
										"id": 4701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4700,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7702:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "7688:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4698,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7688:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4699,
													"nodeType": "ArrayTypeName",
													"src": "7688:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7687:23:9"
									},
									"scope": 4973,
									"src": "7481:1298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4916,
										"nodeType": "Block",
										"src": "9051:334:9",
										"statements": [
											{
												"assignments": [
													4866
												],
												"declarations": [
													{
														"constant": false,
														"id": 4866,
														"mutability": "mutable",
														"name": "pairKey",
														"nameLocation": "9070:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4916,
														"src": "9062:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4865,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9062:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4871,
												"initialValue": {
													"arguments": [
														{
															"id": 4868,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4858,
															"src": "9092:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4869,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4860,
															"src": "9100:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4867,
														"name": "_getPairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "9080:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 4870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9080:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9062:45:9"
											},
											{
												"assignments": [
													4874
												],
												"declarations": [
													{
														"constant": false,
														"id": 4874,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "9134:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 4916,
														"src": "9118:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 4873,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4872,
																"name": "Reserve",
																"nameLocations": [
																	"9118:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4102,
																"src": "9118:7:9"
															},
															"referencedDeclaration": 4102,
															"src": "9118:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4878,
												"initialValue": {
													"baseExpression": {
														"id": 4875,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "9138:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$4102_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 4877,
													"indexExpression": {
														"id": 4876,
														"name": "pairKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4866,
														"src": "9147:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9138:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$4102_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9118:37:9"
											},
											{
												"assignments": [
													4880,
													4882
												],
												"declarations": [
													{
														"constant": false,
														"id": 4880,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "9172:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 4916,
														"src": "9167:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4879,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9167:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4882,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "9187:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 4916,
														"src": "9182:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4881,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9182:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4897,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4883,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4858,
															"src": "9199:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4884,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4860,
															"src": "9208:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9199:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"id": 4891,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4874,
																	"src": "9245:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4892,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9247:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "9245:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4893,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4874,
																	"src": "9257:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4894,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9259:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "9257:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4895,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9244:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 4896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9199:69:9",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"id": 4886,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4874,
																	"src": "9218:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4887,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9220:8:9",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4093,
																"src": "9218:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 4888,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4874,
																	"src": "9230:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$4102_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 4889,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9232:8:9",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4095,
																"src": "9230:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4890,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9217:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:102:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4899,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4880,
																	"src": "9287:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9298:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9287:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4902,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4882,
																	"src": "9303:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9303:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9287:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265736572766573",
															"id": 4906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9317:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															},
															"value": "No reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															}
														],
														"id": 4898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9279:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9279:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4908,
												"nodeType": "ExpressionStatement",
												"src": "9279:52:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4909,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4882,
																	"src": "9350:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 4910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9361:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "9350:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9349:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4913,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4880,
														"src": "9369:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9349:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4864,
												"id": 4915,
												"nodeType": "Return",
												"src": "9342:35:9"
											}
										]
									},
									"documentation": {
										"id": 4856,
										"nodeType": "StructuredDocumentation",
										"src": "8787:173:9",
										"text": "@notice Returns the price of tokenA in terms of tokenB\n @param tokenA Base token\n @param tokenB Quote token\n @return price Price with 18 decimals"
									},
									"functionSelector": "ac41865a",
									"id": 4917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "8975:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4858,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "8992:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4917,
												"src": "8984:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4860,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "9008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4917,
												"src": "9000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8983:32:9"
									},
									"returnParameters": {
										"id": 4864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4863,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "9044:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4917,
												"src": "9039:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:12:9"
									},
									"scope": 4973,
									"src": "8966:419:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4971,
										"nodeType": "Block",
										"src": "9771:348:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4930,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4920,
																"src": "9790:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9801:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9790:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420696e707574",
															"id": 4933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9804:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848",
																"typeString": "literal_string \"Insufficient input\""
															},
															"value": "Insufficient input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b8a824e9cb5d0d1a2fc5dd523815c6c6314bf116b0a3765c6a3e3ff2647a848",
																"typeString": "literal_string \"Insufficient input\""
															}
														],
														"id": 4929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9782:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9782:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4935,
												"nodeType": "ExpressionStatement",
												"src": "9782:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4937,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4922,
																	"src": "9844:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9844:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4940,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4924,
																	"src": "9861:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9874:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9861:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9844:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 4944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9877:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 4936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9836:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9836:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4946,
												"nodeType": "ExpressionStatement",
												"src": "9836:66:9"
											},
											{
												"assignments": [
													4948
												],
												"declarations": [
													{
														"constant": false,
														"id": 4948,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "9918:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 4971,
														"src": "9913:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4947,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9913:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4952,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4949,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4920,
														"src": "9936:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 4950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9947:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "9936:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9913:37:9"
											},
											{
												"assignments": [
													4954
												],
												"declarations": [
													{
														"constant": false,
														"id": 4954,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "9966:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 4971,
														"src": "9961:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4953,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9961:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4958,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4955,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4948,
														"src": "9978:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 4956,
														"name": "reserveOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4924,
														"src": "9996:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9978:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:45:9"
											},
											{
												"assignments": [
													4960
												],
												"declarations": [
													{
														"constant": false,
														"id": 4960,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "10022:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 4971,
														"src": "10017:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4959,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4966,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4961,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "10036:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 4962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10048:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "10036:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 4964,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4948,
														"src": "10055:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10036:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10017:53:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4967,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4954,
														"src": "10088:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4968,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4960,
														"src": "10100:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10088:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4928,
												"id": 4970,
												"nodeType": "Return",
												"src": "10081:30:9"
											}
										]
									},
									"documentation": {
										"id": 4918,
										"nodeType": "StructuredDocumentation",
										"src": "9393:265:9",
										"text": "@notice Calculates output amount given input and reserves\n @param amountIn Input token amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Resulting amount of output token"
									},
									"functionSelector": "054d50d4",
									"id": 4972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "9673:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4920,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "9691:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4972,
												"src": "9686:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9686:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4922,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "9706:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4972,
												"src": "9701:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4921,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9701:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4924,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "9722:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4972,
												"src": "9717:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9717:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:48:9"
									},
									"returnParameters": {
										"id": 4928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4927,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "9760:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4972,
												"src": "9755:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9755:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9754:16:9"
									},
									"scope": 4973,
									"src": "9664:455:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4974,
							"src": "371:9751:9",
							"usedErrors": [
								179
							],
							"usedEvents": [
								4121,
								4135,
								4147
							]
						}
					],
					"src": "33:10091:9"
				},
				"id": 9
			}
		}
	}
}